{"version":3,"sources":["reportWebVitals.js","Redux/constants/action-types.js","Redux/reducers/index.js","GameEnv/cards/defaults.js","Redux/store/index.js","Componets/Shapes/Square.js","Componets/Shapes/Text.js","Componets/Cards/SquareCard.js","Componets/Shapes/Circle.js","Componets/Cards/CircleCard.js","Componets/Shapes/Cross.js","Componets/Cards/CrossCard.js","Componets/Shapes/Triangle.js","Componets/Cards/TriangleCard.js","Componets/Shapes/Star.js","Componets/Cards/StarCard.js","Componets/Cards/WhotCard.js","Componets/Cards/CardCover.js","GameLogic/chooseCard.js","Redux/actions/index.js","GameLogic/logics.js","Componets/Background/Start.js","Componets/Button.js","Routes/Home.js","Componets/Background/Whot.js","Routes/Rules.js","Componets/Agent.js","Componets/Loader.js","Routes/Leaderboard.js","Routes/Settings.js","Componets/CardHolder/CardNumber.js","Componets/CardHolder/InPlay.js","Componets/CardHolder/Market.js","Componets/CardHolder/Player.js","Componets/CardHolder/Need.js","Componets/Modal/index.js","Routes/GamePlay.js","Componets/FormInput.js","Routes/CreateAgent.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GAME_STATE","PLAYER_ONE_STATE","PLAYER_TWO_STATE","PLAYER_ONE_ACTION","PLAYER_TWO_ACTION","PLAYER_ONE_INDEX","PLAYER_TWO_INDEX","REMOVE_LAST","EMPTY","HEIGHT","WIDTH","IS_LANDSCAPE","initials","gameState","playerOneStates","playerTwoStates","playerOneActions","playerTwoActions","playerOneCardIndex","playerTwoCardIndex","defaults","initialState","height","window","innerHeight","width","innerWidth","isLandscape","rootReducer","state","action","console","log","type","payload","playerTwoIndex","pop","store","createStore","Square","props","fill","className","x","marginLeft","y","marginTop","Text","text","fontSize","z","color","transform","SquareCard","size","cWidth","cHeight","firstCWidth","firstCHeight","firstMarginLeft","firstMarginTop","lastCWidth","lastCHeight","lastMarginLeft","lastMarginTop","topNumberMarginLeft","topNumberMarginTop","bottomNumberMarginLeft","bottomNumberMarginTop","fontSizeNumber","rotateY","rotateZ","number","Circle","cx","cy","r","radius","CircleCard","firstRadius","lastRadius","Cross","CrossCard","Triangle","XA","YA","XB","YB","XC","YC","points","TriangleCard","firstXA","firstYA","firstXB","firstYB","firstXC","firstYC","lastXA","lastYA","lastXB","lastYB","lastXC","lastYC","Star","XCenter","top","XTop","XTopLeft","XTopRight","bottom","XBottomLeft","XBottomRight","StarCard","firstXCenter","firstTop","firstXTop","firstXTopLeft","firstXTopRight","firstBottom","firstXBottomLeft","firstXBottomRight","lastXCenter","lastTop","lastXTop","lastXTopLeft","lastXTopRight","lastBottom","lastXBottomLeft","lastXBottomRight","topStarNumberMarginLeft","topStarNumberMarginTop","bottomStarNumberMarginLeft","bottomStarNumberMarginTop","fontSizeNumberStar","parseInt","number_","need","WhotCard","marginLeftOne","marginTopOne","marginLeftTwo","marginTopTwo","fontSizeSymbol","CardCover","chooseCard","card","cardSize","index","indexOf","slice","length","shape","updateGameState","updatePlayerOneStates","updatePlayerOneActions","updatePlayerTwoActions","removeLast","setHeight","setWidth","setIsLandscape","goMarket","player","times","dispatch","newGameState","market","i","playerOne","name","cardAtHand","push","playerTwo","referee","playerName","playerTwoName","playerOneName","rules","playerCardAtHand","cardPlayed","splice","playGame","holdOn","active","pickTwo","pickThree","suspension","generalMarket","checkPlayResponse","response","playerTwoState","agent","setOpponetIsPlaying","setTimeout","handleResponse","cardIndex","createState","availableMove","checkGameState","setModal","playerOneCards","playerTwoCards","rewards","endGame","inPlay","cards","result","sanitizeCardPlayed","shuffle","array","currIndex","randIndex","Math","floor","random","tempVal","undoMove","playerOneStateAndAction","separateStateAndAction","playerTwoStateAndAction","axios","post","agentName","user","playerOneStatesAndActions","playerTwoStatesAndActions","res","err","playerCard","inPlayCard","index_in","number_in","shape_in","sort","availableMoves","isPlayerOne","cardInPlay","noOfCardsInMarket","noOfCardsWithOpponent","noOfCardPlayed","noOfCardAtHand","useCardAtHand","useNoOfCardAtHand","useCardInPlay","useCardPlayed","useNoOfCardPlayed","useNoOfCardsInMarket","useNoOfCardsWithOpponent","useRules","move","validStates","validActions","Cards","Start","area","sqrt","componet","Button","to","link","class","Home","style","Whot","left","cardWidth","Rules","Agent","icon","faUserCircle","wins","losses","parseFloat","toPrecision","Loader","useSelector","useState","setCardSize","setStyle","useEffect","position","Leaderboard","isLoading","setIsLoading","data","setData","agents","setAgents","page","setPage","get","onClick","React","memo","Settings","CardNumber","cardNumber","InPlay","setNeed","Market","playable","CARD_PADDING","Player","angle","start","setStart","margin","setMargin","cardSpaceAvailable","setCardSpaceAvailable","setLeft","right","setRight","setTop","noOfCardsThatCanBeDisplayed","setNoOfCardsThatCanBeDisplayed","navStyle","setNavStyle","noOfVisibelCards","setNoOfVisibleCards","playerCards","setPlayerCard","useDispatch","updatePlayerTwoCardIndex","faArrowRight","faArrowLeft","cardArray","Need","setArea","setSize","Modal","history","useHistory","content","close","goBack","GamePlay","useParams","playerOneData","setPlayerOneData","playerTwoData","setPlayerTwoData","modal","isNeeded","setIsNeeded","opponetCard","setOpponetCard","setInplay","setCardPlayed","opponetIsPlaying","opponetMoves","setOpponetMoves","gameArea","setGameArea","redirect","setRedirect","playerInfo","agentInfo","moves","forEach","element","playCard","request","playerMove","canPlay","sendMove","FormInput","identifier","for","label","required","id","onChange","placeholder","yes","value","form","canGoMarket","canNeedAnyCard","CreateAgent","formData","setFormData","handleEvent","e","target","method","disabled","preventDefault","alert","msg","status","home","leaderboard","settings","game","createAgent","App","onresize","onorientationchange","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4565e8b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GAME_STATE = \"GAME_STATE\";\nexport const PLAYER_ONE_STATE = \"PLAYER_ONE_STATE\";\nexport const PLAYER_TWO_STATE = \"PLAYER_TWO_STATE\";\nexport const PLAYER_ONE_ACTION = \"PLAYER_ONE_ACTION\";\nexport const PLAYER_TWO_ACTION = \"PLAYER_TWO_ACTION\";\nexport const PLAYER_ONE_INDEX = \"PLAYER_ONE_INDEX\";\nexport const PLAYER_TWO_INDEX = \"PLAYER_TWO_INDEX\";\nexport const REMOVE_LAST = \"REMOVE_LAST\";\nexport const EMPTY = \"EMPTY\";\nexport const HEIGHT = \"HEIGHT\";\nexport const WIDTH = \"WIDTH\";\nexport const IS_LANDSCAPE = \"IS_LANDSCAPE\";","import {    EMPTY, GAME_STATE, HEIGHT, IS_LANDSCAPE, PLAYER_ONE_ACTION, PLAYER_ONE_INDEX, PLAYER_ONE_STATE, PLAYER_TWO_ACTION, PLAYER_TWO_INDEX, PLAYER_TWO_STATE, REMOVE_LAST, WIDTH,   } from \"../constants/action-types\";\nimport defaults from \"./../../GameEnv/cards/defaults\";\n\nconst initials = defaults();\n\nconst initialState = {\n    gameState: initials.gameState,\n    playerOneStates: initials.playerOneStates,\n    playerTwoStates: initials.playerTwoStates,\n    playerOneActions: initials.playerOneActions,\n    playerTwoActions: initials.playerTwoActions,\n    playerOneCardIndex: initials.playerOneCardIndex,\n    playerTwoCardIndex: initials.playerTwoCardIndex,\n    height: window.innerHeight,\n    width: window.innerWidth,\n    isLandscape: true\n};\n  \nfunction rootReducer(state = initialState, action) {\n\n    console.log(\"Action Type\", action.type)\n\n    const payload = action.payload\n\n    switch (action.type) {\n        case GAME_STATE:\n            return { ...state, gameState: payload }\n        case PLAYER_ONE_STATE:\n            return { ...state, playerOneStates: [...state.playerOneStates, payload] }\n        case PLAYER_TWO_STATE:\n            return { ...state, playerTwoStates: [...state.playerTwoStates, payload] }\n        case PLAYER_ONE_ACTION:\n            return { ...state, playerOneActions: [...state.playerOneActions, payload] }\n        case PLAYER_TWO_ACTION:\n            return { ...state, playerTwoActions: [...state.playerTwoActions, payload] }\n        case PLAYER_ONE_INDEX:\n            return { ...state, playerOneCardIndex: payload }\n        case PLAYER_TWO_INDEX:\n            return { ...state, playerTwoIndex: payload }\n        case REMOVE_LAST:\n            payload.pop();\n            return { ...state, payload }\n        case EMPTY:\n\n            state.playerOneActions = [];\n            state.playerOneStates = [];\n            state.playerTwoActions = [];\n            state.playerTwoStates = [];\n\n            return state\n        case HEIGHT:\n            return { ...state, height: payload }\n        case WIDTH:\n            return { ...state, width: payload }\n        case IS_LANDSCAPE:\n            return { ...state, isLandscape: payload }\n        default:\n            return state\n    }\n};\n  \n\nexport default rootReducer;","\nconst initializeGameState = () => {\n\n    return  {\n        gameState: null,\n        playerOneStates: [],\n        playerTwoStates: [],\n        playerOneActions: [],\n        playerTwoActions: [],\n        playerOneCardIndex: 0,\n        playerTwoCardIndex: 0\n    }\n\n}\n\nexport default initializeGameState","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Square(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\" className=\"center\">\r\n                <rect x={props.marginLeft} y={props.marginTop} width={props.width} height={props.height}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Square","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Text(props) {\r\n\r\n    let text = props.text\r\n    let fontSize = props.fontSize\r\n    let x = props.x\r\n    let y = props.y\r\n    let z = props.z\r\n    let color = props.color\r\n\r\n    return(\r\n        <svg >\r\n            <g fill={color} transform={\"rotate(\"+ x +\" \" + y + \" \" + z + \")\"}>\r\n                <text color={color}\r\n                    x={props.marginLeft} \r\n                    y={props.marginTop}\r\n                    fontSize={fontSize}>\r\n                    {text}\r\n                </text>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Text","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Square from \"../Shapes/Square\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction SquareCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = marginLeft * 0.8\r\n    let firstCHeight = marginLeft * 0.8\r\n    let firstMarginLeft = marginLeft * 0.2\r\n    let firstMarginTop = marginLeft * 1.6\r\n\r\n    let lastCWidth = marginLeft * 0.8\r\n    let lastCHeight = marginLeft * 0.8\r\n    let lastMarginLeft = cWidth + marginLeft\r\n    let lastMarginTop = height - marginLeft * 2.4\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Square \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Square \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n\r\n            <Square \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default SquareCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Circle(props) {\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <circle cx={props.marginLeft} cy={props.marginTop} r={props.radius} />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Circle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Circle from \"../Shapes/Circle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CircleCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n    let marginLeft = width / 2\r\n    let marginTop = height / 2\r\n    let radius = width / 3\r\n\r\n    let firstMarginLeft = width * 0.2 / 2\r\n    let firstMarginTop = height * 0.4 / 2\r\n    let firstRadius = width * 0.2 / 3\r\n\r\n    let lastMarginLeft = width * 1.8 / 2\r\n    let lastMarginTop = height * 1.6 / 2\r\n    let lastRadius = width * 0.2 / 3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n \r\n    let fontSize = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Circle \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                radius={firstRadius} />\r\n\r\n            <Circle \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} \r\n                radius={radius} />\r\n\r\n            <Circle \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                radius={lastRadius} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CircleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Cross(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\">\r\n                <rect x={props.marginLeft + props.width / 4} y={props.marginTop} width={props.width / 2} height={props.height}/>\r\n                <rect x={props.marginLeft} y={props.marginTop + props.height / 4} width={props.width} height={props.height / 2}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Cross","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Cross from \"../Shapes/Cross\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CrossCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = width * 0.7 * 0.2\r\n    let firstCHeight = height * 0.4 * 0.2\r\n    let firstMarginLeft = (width - cWidth) * 0.2 / 2\r\n    let firstMarginTop = (height - cHeight) * 0.5 / 2\r\n\r\n    let lastCWidth = width * 0.7 * 0.2\r\n    let lastCHeight = height * 0.4 * 0.2\r\n    let lastMarginLeft = (width - cWidth) * 5.5 / 2\r\n    let lastMarginTop = (height - cHeight) * 2.5 / 2\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />   \r\n\r\n            <Cross \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Cross \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n            \r\n            <Cross \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>   \r\n            \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CrossCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Triangle(props) {\r\n\r\n    let XA = props.XA\r\n    let YA = props.YA\r\n    let XB = props.XB\r\n    let YB = props.YB\r\n    let XC = props.XC\r\n    let YC = props.YC\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points= {XA + \",\" + YA + \",\" + XB + \",\" + YB + \",\" + XC + \",\" + YC}  />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Triangle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Triangle from \"../Shapes/Triangle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction TriangleCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big triangle\r\n    let XA = width * 0.05\r\n    let YA = height * 0.7\r\n    let XB = width * 0.5\r\n    let YB = height * 0.2\r\n    let XC = width * 0.95\r\n    let YC = height * 0.7\r\n\r\n    //parameters for the top small triangle\r\n    let firstXA = width * 0.03\r\n    let firstYA = height * 0.21\r\n    let firstXB = width * 0.1\r\n    let firstYB = height * 0.12\r\n    let firstXC = width * 0.17\r\n    let firstYC = height * 0.21\r\n\r\n    //parameters for the bottom small triangle\r\n    let lastXA = width * 0.825\r\n    let lastYA = height * 0.756\r\n    let lastXB = width * 0.9\r\n    let lastYB = height * 0.84\r\n    let lastXC = width * 0.9775\r\n    let lastYC = height * 0.756\r\n\r\n    //parameters for the top small triangle number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the top small triangle number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //fomt size calculation\r\n    let fontSizeNumber = size / 5\r\n\r\n    //number rotate for bottom number\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Triangle \r\n                XA={firstXA} \r\n                YA={firstYA} \r\n                XB={firstXB} \r\n                YB={firstYB} \r\n                XC={firstXC} \r\n                YC={firstYC} />\r\n\r\n            <Triangle \r\n                XA={XA} \r\n                YA={YA} \r\n                XB={XB} \r\n                YB={YB} \r\n                XC={XC} \r\n                YC={YC} />\r\n\r\n            <Triangle \r\n                XA={lastXA} \r\n                YA={lastYA} \r\n                XB={lastXB} \r\n                YB={lastYB} \r\n                XC={lastXC} \r\n                YC={lastYC} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default TriangleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Star(props) {\r\n\r\n    let XCenter = props.XCenter\r\n    let top = props.top\r\n    let XTop = props.XTop\r\n    let XTopLeft = props.XTopLeft\r\n    let XTopRight = props.XTopRight\r\n    let bottom = props.bottom\r\n    let XBottomLeft = props.XBottomLeft\r\n    let XBottomRight = props.XBottomRight\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points = {XCenter + \",\" + \r\n                    top + \",\"  + XBottomLeft + \",\" \r\n                    + bottom + \",\" + XTopRight + \",\"\r\n                    + XTop + \",\" + XTopLeft + \",\" \r\n                    + XTop + \",\" + XBottomRight \r\n                    + \",\" + bottom} />\r\n            </g>\r\n        </svg>\r\n        ) \r\n}\r\n\r\nexport default Star","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Star from \"../Shapes/Star\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\n\r\nfunction StarCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big center star\r\n    let XCenter = width / 2\r\n    let top = height * 0.2\r\n    let XTop = height * 0.42\r\n    let XTopLeft = width * 0.1\r\n    let XTopRight = width * 0.9\r\n    let bottom = height * 0.75\r\n    let XBottomLeft = width * 0.2\r\n    let XBottomRight = width * 0.8\r\n\r\n    //parameters for the top left star\r\n    let firstXCenter = width * 0.24\r\n    let firstTop = height * 0.12\r\n    let firstXTop = height * 0.195\r\n    let firstXTopLeft = width * 0.08\r\n    let firstXTopRight = width * 0.382\r\n    let firstBottom = height * 0.32\r\n    let firstXBottomLeft = width * 0.12\r\n    let firstXBottomRight = width * 0.34\r\n\r\n    //parameters for the bottom right star\r\n    let lastXCenter = width  * 0.8\r\n    let lastTop = height * 0.9\r\n    let lastXTop = height * 0.83\r\n    let lastXTopLeft = width * 0.94\r\n    let lastXTopRight = width * 0.66\r\n    let lastBottom = height * 0.72\r\n    let lastXBottomLeft = width * 0.9\r\n    let lastXBottomRight = width * 0.7\r\n\r\n    //parameters for the top right number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the bottom left number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //parameters for the top right number in star\r\n    let topStarNumberMarginLeft = width * 0.21\r\n    let topStarNumberMarginTop = height * 0.25\r\n\r\n    //parameters for the bottom left number in star\r\n    let bottomStarNumberMarginLeft = width * 0.17\r\n    let bottomStarNumberMarginTop = height * 0.295\r\n\r\n    if(props.number > 4){\r\n        //parameters for the top right number in star\r\n        topStarNumberMarginLeft = width * 0.17\r\n        topStarNumberMarginTop = height * 0.25\r\n\r\n        //parameters for the bottom left number in star\r\n        bottomStarNumberMarginLeft = width * 0.14\r\n        bottomStarNumberMarginTop = height * 0.295\r\n    }\r\n    \r\n    //fonts\r\n    let fontSizeNumber = size / 5\r\n    let fontSizeNumberStar = size / 10\r\n\r\n    //rotation\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8 \r\n\r\n    //card number\r\n    let number = parseInt(props.number)\r\n    let number_ = number * 2\r\n    if(props.need){ \r\n        number = \"\"\r\n        number_ = \"\"\r\n    }\r\n        \r\n \r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Star \r\n                XCenter={firstXCenter} \r\n                top={firstTop} \r\n                XTop={firstXTop}\r\n                XTopLeft={firstXTopLeft}\r\n                XTopRight={firstXTopRight}\r\n                bottom={firstBottom}\r\n                XBottomLeft={firstXBottomLeft} \r\n                XBottomRight={firstXBottomRight}\r\n\r\n                />\r\n\r\n            <Text\r\n                x={0} y={0} z={0}\r\n                marginLeft={topStarNumberMarginLeft} \r\n                marginTop={topStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"} />\r\n        \r\n            <Star \r\n                XCenter={XCenter} \r\n                top={top} \r\n                XTop={XTop}\r\n                XTopLeft={XTopLeft}\r\n                XTopRight={XTopRight}\r\n                bottom={bottom}\r\n                XBottomLeft={XBottomLeft} \r\n                XBottomRight={XBottomRight}\r\n\r\n                />\r\n\r\n            <Star \r\n                XCenter={lastXCenter} \r\n                top={lastTop} \r\n                XTop={lastXTop}\r\n                XTopLeft={lastXTopLeft}\r\n                XTopRight={lastXTopRight}\r\n                bottom={lastBottom}\r\n                XBottomLeft={lastXBottomLeft} \r\n                XBottomRight={lastXBottomRight}\r\n\r\n                />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomStarNumberMarginLeft} \r\n                marginTop={bottomStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"}/>\r\n\r\n       \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default StarCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction WhotCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let firstMarginLeft = width * 0.1\r\n    let firstMarginTop = height * 0.25\r\n \r\n    let lastMarginLeft = width * 0.1 \r\n    let lastMarginTop = height * 0.3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSize = size / 4\r\n    let fontSizeSymbol = size / 6\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"brown\"} />\r\n\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default WhotCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction CardCover(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let fontSize = size / 4\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card card-cover\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CardCover","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport SquareCard from \"../Componets/Cards/SquareCard\";\r\nimport CircleCard from \"../Componets/Cards/CircleCard\";\r\nimport CrossCard from \"../Componets/Cards/CrossCard\";\r\nimport TriangleCard from \"../Componets/Cards/TriangleCard\";\r\nimport StarCard from \"../Componets/Cards/StarCard\";\r\nimport WhotCard from \"../Componets/Cards/WhotCard\";\r\nimport CardCover from \"../Componets/Cards/CardCover\";\r\n\r\n\r\nconst chooseCard = (card, cardSize, need=false) => {\r\n\r\n    \r\n    const index = card.indexOf(\":\");\r\n    const number = card.slice(index + 1, card.length);\r\n    const shape = card.slice(0, index);\r\n\r\n    if(parseInt(number) === 20) return(<WhotCard size={cardSize} number={number} />);\r\n\r\n    switch(shape){\r\n\r\n        case \"star\":\r\n            return(<StarCard size={cardSize} number={number} need={need} />);\r\n        case \"circle\":\r\n            return(<CircleCard size={cardSize} number={number} />);\r\n        case \"square\":\r\n            return(<SquareCard size={cardSize} number={number} />);\r\n        case \"cross\":\r\n            return(<CrossCard size={cardSize} number={number} />);\r\n        case \"triangle\":\r\n            return(<TriangleCard size={cardSize} number={number} />);\r\n        case \"whot\":\r\n            return(<WhotCard size={cardSize} number={number} />);\r\n        default:\r\n            return(<CardCover size={cardSize}  />)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default chooseCard","import { EMPTY, GAME_STATE, HEIGHT, IS_LANDSCAPE, PLAYER_ONE_ACTION, PLAYER_ONE_INDEX, PLAYER_ONE_STATE, PLAYER_TWO_ACTION, PLAYER_TWO_INDEX, PLAYER_TWO_STATE, REMOVE_LAST, WIDTH } from \"../constants/action-types\";\n\n\nexport function updateGameState(payload) {\n  console.log(\"Update GAME STATE\", payload)\n  return { type: GAME_STATE, payload };\n}\n\nexport function updatePlayerOneStates(payload) {\n  console.log(\"Update Player One States\", payload)\n  return { type: PLAYER_ONE_STATE, payload };\n}\n\nexport function updatePlayerTwoStates(payload) {\n  console.log(\"Update Player Two States\", payload)\n  return { type: PLAYER_TWO_STATE, payload };\n}\n\nexport function updatePlayerOneActions(payload) {\n  console.log(\"Update Player One Actions\", payload)\n  return { type: PLAYER_ONE_ACTION, payload };\n}\n\nexport function updatePlayerTwoActions(payload) {\n  console.log(\"Update Player Two Actions\", payload)\n  return { type: PLAYER_TWO_ACTION, payload };\n}\n\nexport function removeLast(payload) {\n  console.log(\"Remove Last\", payload)\n  return { type: REMOVE_LAST, payload };\n}\n\nexport function empty() {\n  console.log(\"Empty \");\n  return { type: EMPTY };\n}\n\nexport function setHeight(payload) {\n  console.log(\"set Height\", payload)\n  return { type: HEIGHT, payload };\n}\n\nexport function setWidth(payload) {\n  console.log(\"Set Width\", payload)\n  return { type: WIDTH, payload };\n}\n\nexport function setIsLandscape(payload) {\n  console.log(\"Set Is Landscape\", payload)\n  return { type: IS_LANDSCAPE, payload };\n}\n\n\nexport function updatePlayerOneCardIndex(payload) {\n  console.log(\"Update Player One Card Index\", payload)\n  return { type: PLAYER_ONE_INDEX, payload };\n}\n\nexport function updatePlayerTwoCardIndex(payload) {\n  console.log(\"Update Player Two Card Index\", payload)\n  return { type: PLAYER_TWO_INDEX, payload };\n}","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { empty, removeLast, updateGameState, updatePlayerTwoStates } from \"../Redux/actions\";\r\n\r\n\r\nvar MOVE_WAITING_PERIOD = 1500\r\n\r\n\r\n/**\r\n * This function adds card to player and remove that same card from\r\n * market for n number of times       \r\n * \r\n * @param {*} player array of player cards\r\n * @param {*} market array of market cards\r\n * @param {*} times numbers of times to pick from market\r\n */\r\n\r\nexport function goMarket(gameState, player, times = 1, dispatch){\r\n\r\n    const newGameState = { ...gameState };\r\n    const market  = newGameState.market;\r\n\r\n    for(let i = 0; i < times; i ++){\r\n\r\n        if(market.length > 0){\r\n\r\n            if (player === gameState.playerOne.name) {\r\n\r\n                newGameState.playerOne.cardAtHand.push(market[market.length - 1]);\r\n\r\n            } else if (player === gameState.playerTwo.name) {\r\n\r\n                newGameState.playerTwo.cardAtHand.push(market[market.length - 1]);\r\n            }\r\n\r\n            newGameState.market.pop();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n}\r\n\r\n\r\n\r\nexport function referee(gameState, card, playerName, dispatch) {\r\n\r\n    const playerTwoName = gameState.playerTwo.name;\r\n    const playerOneName = gameState.playerOne.name;\r\n    let name = playerOneName;\r\n\r\n    if(playerName === playerOneName) {\r\n        name = playerTwoName;\r\n    } else if(playerName === playerTwoName) {\r\n        name = playerOneName;\r\n    }\r\n\r\n    const rules = gameState.rules;\r\n\r\n    const index = card[0].indexOf(\":\") + 1;\r\n    const number = parseInt(card[0].slice(index, card[0].length));\r\n\r\n    if(card[1] !== -2) playGame(gameState, playerName, card, number, dispatch);\r\n\r\n    if(rules.holdOn.active && number === rules.holdOn.card){\r\n\r\n        return false\r\n       \r\n    }else if(rules.pickTwo.active && number === rules.pickTwo.card){\r\n\r\n        goMarket(gameState, name, 2, dispatch);\r\n\r\n        return false\r\n\r\n    }else if(rules.pickThree.active && number === rules.pickThree.card){\r\n\r\n        goMarket(gameState, name, 3, dispatch);\r\n\r\n        return false\r\n\r\n    }else if(rules.suspension.active && number === rules.suspension.card){\r\n\r\n        return false\r\n\r\n    }else if(rules.generalMarket.active && number === rules.generalMarket.card){\r\n\r\n        goMarket(gameState, name, 1, dispatch);\r\n\r\n        return false\r\n   \r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * This function takes in the player cards at hand an the action to be   \r\n * taken it takes it, if a card is played it adds it to gamePlayed and   \r\n * subracts it from the player card at hand \r\n * \r\n * @param {*} player the player making the move\r\n * @param {*} card the move made by player\r\n * @param {*} cardPlayed the card played in the game\r\n * @param {*} number the number on the card\r\n */\r\nexport function playGame(gameState, playerName, card, number, dispatch){\r\n\r\n    const newGameState = { ...gameState };\r\n\r\n    let playerCardAtHand = newGameState.playerTwo.cardAtHand;\r\n\r\n    if (newGameState.playerOne.name === playerName) {\r\n        playerCardAtHand = newGameState.playerOne.cardAtHand;\r\n    }\r\n\r\n    console.log(\"game played \", card);\r\n\r\n    if (number === 20){\r\n\r\n        newGameState.cardPlayed.pop();\r\n\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n    } else if(card[0] !== \"z:goMarket\"){\r\n\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n        for(let i = 0; i < playerCardAtHand.length; i++){\r\n\r\n            if(playerCardAtHand[i] === card[0]) playerCardAtHand.splice(i, 1);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n    console.log(\" Game State \", newGameState)\r\n\r\n}\r\n\r\n\r\nexport function canPlay(card, inPlay, need = false) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = parseInt(card.slice(index, card.length))\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlay.slice(index_in, inPlay.length))\r\n    let shape_in = inPlay.slice(0, index_in)\r\n\r\n    if(number === 20) return [true, true]\r\n    \r\n    if(number === number_in || shape === shape_in || need) return [true, false]\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkGame(card, inPlay) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = card.slice(index, card.length)\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = inPlay.slice(index_in, inPlay.length)\r\n    let shape_in = inPlay.slice(0, index_in)\r\n    \r\n    if(number === number_in || shape === shape_in || number === 20) return true\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkPlayResponse(response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying){\r\n\r\n    setTimeout(handleResponse, MOVE_WAITING_PERIOD, 0, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying)\r\n\r\n}\r\n\r\n/**\r\n *  Recursive function that loop through the server response and    \r\n *  handle them appropriately it calls the setTimeout function      \r\n *  it also update agent states    \r\n *                                  \r\n * @param {*} index current index in the moves array\r\n * @param {*} response array of moves\r\n * @param {*} gameState current gameState\r\n * @param {*} playerTwoState  state of the agent\r\n */\r\n\r\nfunction handleResponse(index, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying){\r\n\r\n    const playerTwoName = gameState.playerTwo.name;\r\n    const playerCardAtHand = gameState.playerTwo.cardAtHand;\r\n    const cardPlayed = gameState.cardPlayed;\r\n\r\n    const cardIndex = response[index][0].indexOf(\":\") + 1\r\n    const number = parseInt(response[index][0].slice(cardIndex, response[index][0].length))\r\n\r\n    const availableMoves = availableMove(playerCardAtHand, cardPlayed[cardPlayed.length - 1])\r\n\r\n    const state = (createState(gameState, availableMoves, false, agent));\r\n\r\n    if(response[index][1] >= 0) {\r\n        dispatch(updatePlayerTwoStates(state));\r\n    }\r\n\r\n    if(number === 20){\r\n\r\n        const newGameState = {...gameState}\r\n\r\n        newGameState.cardPlayed.push(response[index][0])\r\n\r\n        for(let i = 0; i < playerCardAtHand.length; i++){\r\n\r\n            if(playerCardAtHand[i] === \"whot:20\") newGameState.playerTwo.cardAtHand.splice(i, 1)\r\n            \r\n        }\r\n\r\n        dispatch(updateGameState(newGameState))\r\n\r\n    }else if(response[index][0] !== \"z:goMarket\"){\r\n\r\n        referee(gameState, response[index], playerTwoName, dispatch);\r\n        \r\n    }else{\r\n\r\n        goMarket(gameState, playerTwoName, 1, dispatch);\r\n\r\n    }\r\n\r\n    if(index + 1 < response.length) setTimeout(handleResponse, MOVE_WAITING_PERIOD, index + 1, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying)\r\n    else { \r\n        setOpponetIsPlaying(false);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * This method checks if any of the player cards or market is less \r\n * than one then it calls the reward function, if  any      \r\n * of the player cards is finished that player wins the game and the \r\n * game is over but if market is finished, it adds all cards from    \r\n * card Played to market and shuffle them while calling the reward\r\n * function, but the game continues     \r\n * \r\n * @param {*} gameState object of the current game state\r\n */\r\n\r\nexport function checkGameState(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch, setModal){\r\n\r\n    const newGameState = {...gameState};\r\n\r\n    const playerOneCards = newGameState.playerOne.cardAtHand;\r\n\r\n    const playerTwoCards = newGameState.playerTwo.cardAtHand;\r\n\r\n    const market = newGameState.market;\r\n\r\n    const cardPlayed = newGameState.cardPlayed;\r\n/*\r\n    console.log(\" state 1\", playerOneStates);\r\n    console.log(\" state 2\", playerTwoStates);\r\n    console.log(\" action 1\", playerOneActions);\r\n    console.log(\" action 2\", playerTwoActions);\r\n*/\r\n    if(playerOneCards.length < 1 || playerTwoCards.length < 1)  {\r\n\r\n        rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch, setModal);\r\n\r\n        if(gameState.playerOne.cardAtHand < 1){\r\n\r\n            setModal({ type: 'Game End',  text: gameState.playerOne.name + \" Wins \", endGame: true});\r\n        } \r\n    \r\n        if(gameState.playerTwo.cardAtHand < 1){\r\n\r\n            setModal({ type: 'Game End',  text: gameState.playerTwo.name + \" Wins \", endGame: true});\r\n        } \r\n    \r\n    }else if(market.length < 1) {\r\n\r\n        rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch, setModal);\r\n\r\n        const inPlay = sanitizeCardPlayed(cardPlayed);\r\n\r\n        //adds all the card played to market\r\n        newGameState.market = inPlay;\r\n        \r\n        //reasign inplay giving it just its last value\r\n        newGameState.cardPlayed = [ cardPlayed[cardPlayed.length - 1]];\r\n\r\n        //removed the last card from market\r\n        newGameState.market.pop();\r\n\r\n        //shuffles the cards\r\n        newGameState.market = shuffle([...newGameState.market]);\r\n\r\n        dispatch(updateGameState(newGameState));\r\n\r\n        console.log(newGameState)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function shuffle(array){\r\n\r\n    let currIndex = array.length\r\n\r\n    while (0 !== currIndex) {\r\n        \r\n        //pick an element not prevously selected\r\n        let randIndex = Math.floor(Math.random() * currIndex)\r\n        currIndex--\r\n\r\n        //swap it with the current element\r\n        let tempVal  = array[currIndex]\r\n        array[currIndex] = array[randIndex]\r\n        array[randIndex] = tempVal\r\n    \r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n\r\n\r\nexport function sanitizeCardPlayed(cards){\r\n\r\n    let result = []\r\n\r\n    for(let i = 0; i < cards.length; i++){\r\n\r\n        let index = cards[i].indexOf(\":\") + 1\r\n        let number = parseInt(cards[i].slice(index, cards.length))\r\n\r\n        if(number === 20)\r\n            result.push(\"whot:20\")\r\n        else\r\n            result.push(cards[i])\r\n    }\r\n\r\n    return result\r\n\r\n}\r\n\r\nexport function undoMove(gameState, card, playerOneStates, playerOneActions, dispatch) {\r\n\r\n    const newGameState = {  ...gameState  };\r\n\r\n    //add card taken from player back to player    \r\n    newGameState.playerOne.cardAtHand.push(card[0])\r\n\r\n    //undo last game played\r\n    newGameState.cardPlayed.pop()\r\n\r\n    //undo last state update\r\n    dispatch(removeLast(playerOneStates));\r\n    dispatch(removeLast(playerOneActions));\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n}\r\n\r\n\r\nexport function rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch, setModal) {\r\n\r\n    let playerOneStateAndAction = separateStateAndAction(playerOneStates, playerOneActions);\r\n    let playerTwoStateAndAction = separateStateAndAction(playerTwoStates, playerTwoActions);\r\n\r\n\r\n    axios.post(\"/api/v1/save\", \r\n        {\r\n            agentName: gameState.playerTwo.name, \r\n            user: gameState.playerOne.name, \r\n            gameState: gameState, \r\n            playerOneStatesAndActions: playerOneStateAndAction, \r\n            playerTwoStatesAndActions: playerTwoStateAndAction \r\n        }\r\n        ).then((res)=>{  \r\n\r\n        console.log(res)\r\n        //empty state array\r\n        dispatch(empty());\r\n        \r\n        \r\n    }, err => {\r\n\r\n        console.log(err)\r\n\r\n        setModal({ type: 'Network Error',  text: err});\r\n        \r\n    })\r\n\r\n}\r\n\r\n/**\r\n * This function receive two arguments, the function loop through \r\n * the first argument and return \r\n * \r\n * @param {*} playerCard the card in the player hand\r\n * @param {*} inPlayCard the card played\r\n * @returns return all the valid moves that can be made \r\n */\r\n\r\nexport function availableMove(playerCard, inPlayCard){\r\n\r\n    let index_in = inPlayCard.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlayCard.slice(index_in, inPlayCard.length))\r\n    let shape_in = inPlayCard.slice(0, index_in)\r\n\r\n    let availableMove = [\"z:goMarket\"]\r\n\r\n    for(let i = 0; i < playerCard.length; i++){\r\n         \r\n        let index = playerCard[i].indexOf(\":\") + 1\r\n        let number = parseInt(playerCard[i].slice(index, playerCard[i].length))\r\n        let shape = playerCard[i].slice(0, index)\r\n\r\n        if(number === 20){\r\n\r\n            availableMove.sort()\r\n\r\n            availableMove.push(\"circle:20\", \"cross:20\", \"square:20\", \"star:20\", \"triangle:20\")\r\n            \r\n            return availableMove\r\n\r\n        }if(number === number_in){\r\n\r\n            availableMove.push(playerCard[i])\r\n\r\n        }else if(shape === shape_in){\r\n        \r\n            availableMove.push(playerCard[i])\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return availableMove.sort()\r\n}\r\n\r\nexport function createState(gameState,  availableMoves, isPlayerOne, agent = {}){\r\n\r\n    if(isPlayerOne){\r\n\r\n        return { \r\n            agentName: gameState.playerOne.name,\r\n            cardAtHand: [...gameState.playerOne.cardAtHand],\r\n            cardInPlay: gameState.cardPlayed[gameState.cardPlayed.length - 1],\r\n            cardPlayed: [...gameState.cardPlayed],\r\n            noOfCardsInMarket: gameState.market.length,\r\n            noOfCardsWithOpponent: gameState.playerTwo.cardAtHand.length,\r\n            noOfCardPlayed: gameState.cardPlayed.length,\r\n            noOfCardAtHand: gameState.playerOne.cardAtHand.length,\r\n            availableMove: [...availableMoves],\r\n            rules: gameState.rules, \r\n        }\r\n\r\n    }else{\r\n\r\n        let state = {\r\n            agentName: gameState.playerTwo.name,\r\n            availableMove: [...availableMoves],\r\n        }\r\n\r\n\r\n        if(agent.useCardAtHand)\r\n            state.cardAtHand = [...gameState.playerTwo.cardAtHand]\r\n        if(agent.useNoOfCardAtHand)\r\n            state.noOfCardAtHand = gameState.playerTwo.cardAtHand.length\r\n        if(agent.useCardInPlay)\r\n            state.cardInPlay = gameState.cardPlayed[gameState.cardPlayed.length - 1]\r\n        if(agent.useCardPlayed)\r\n            state.cardPlayed = [...gameState.cardPlayed]\r\n        if(agent.useNoOfCardPlayed)\r\n            state.noOfCardPlayed = gameState.cardPlayed.length\r\n        if(agent.useNoOfCardsInMarket)\r\n            state.noOfCardsInMarket = gameState.market.length\r\n        if(agent.useNoOfCardsWithOpponent)\r\n            state.noOfCardsWithOpponent = gameState.playerOne.cardAtHand.length\r\n        if(agent.useRules)\r\n            state.rules = gameState.rules\r\n\r\n\r\n\r\n        return state\r\n    }\r\n    \r\n}\r\n\r\nexport function cardIndex(availableMove, move){\r\n\r\n    if(availableMove.length === 0) return -1\r\n\r\n    for (let i = 0; i < availableMove.length; i++) if(availableMove[i] === move) return i   \r\n\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} state \r\n * @param {*} action \r\n */\r\n\r\nfunction separateStateAndAction(state, action){\r\n\r\n    let validStates = []\r\n    let validActions = []\r\n\r\n\r\n    for(let i = 0; i < action.length; i++){\r\n\r\n        if(action[i][1] > -1){\r\n\r\n            //state[i].actions = []\r\n            validStates.push(state[i])\r\n            validActions.push([action[i][0], action[i][1]])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return [validStates, validActions]\r\n}","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Cards from \"../../GameEnv/cards\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport {shuffle} from \"../../GameLogic/logics\";\r\n\r\nvar cards = [...Cards.cards]\r\ncards.push(\"cover:20\")\r\n\r\nfunction Start() {\r\n\r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n\r\n    let area = width * height\r\n\r\n    let size = Math.sqrt(area/(2 * 57))\r\n\r\n    let cardSize = size\r\n\r\n    cards =  shuffle(cards)\r\n\r\n    let componet = []\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n    \r\n        componet.push(chooseCard(cards[i], cardSize))\r\n\r\n    }\r\n   \r\n\r\n    return(\r\n        <div className=\"start-page\" >\r\n            {componet}\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Start","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Button(props) {\r\n\r\n    return(\r\n        <div>\r\n            <Link to={props.link}>\r\n                <button className={props.class} >\r\n                    {props.text}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Button","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Button from \"../Componets/Button\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n    let height = window.innerHeight * 0.25\r\n\r\n    const style = {\r\n        marginTop:  height\r\n    }\r\n\r\n    return(\r\n        <center>\r\n\r\n            <Start />\r\n\r\n            <div style={style}>\r\n\r\n                <Button text={\"Play Game\"} link={\"/leaderboard\"} class={\"btn-start\"}/>\r\n\r\n                <Button text={\"Rules\"} link={\"/rules\"}  class={\"btn-rules\"}/>\r\n\r\n                <Button text={\"Leaderboard\"} link={\"/leaderboard\"} class={\"btn-leader\"}/>\r\n\r\n                <Button text={\"Create Agent\"} link={\"/create-agent\"} class={\"btn-create\"}/>\r\n\r\n                <Button text={\"Settings\"} link={\"/settings\"} class={\"btn-settings\"}/>\r\n                \r\n            </div>\r\n            \r\n        </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\n\r\nfunction Whot() {\r\n\r\n    let cardWidth = 350\r\n    let left = (window.innerWidth / 2) - (cardWidth / 2)\r\n    let top = (window.innerHeight / 2) - (cardWidth * 1.5 / 2)\r\n\r\n    return(\r\n            <center className=\"whot-background\" style={{top:top, left:left}}>\r\n\r\n                {chooseCard(\"\", cardWidth)}\r\n        \r\n            </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Whot","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nconst Rules = () => {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Rules","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from \"./Button\"\r\n\r\n \r\nconst Agent = (props) =>  {\r\n\r\n    return(\r\n        <div className=\"agents\">\r\n\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <FontAwesomeIcon size=\"5x\" color={\"gray\"} icon={faUserCircle} /> \r\n                    </td>\r\n\r\n                    <td>\r\n                        Name {props.agentName} <br/>\r\n                        Wins  {props.wins} <br/>\r\n                        Loss {props.losses} <br/>\r\n                        points {parseFloat(props.points.toPrecision(6))} <br/>\r\n                        <Button text={\"Play Agent\"}  class={\"btn-play\"} link={`/game/${props.agentName}`} />\r\n    \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Agent","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport chooseCard from \"../GameLogic/chooseCard\";\r\nimport Cards from \"../GameEnv/cards/index.json\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst cards = [...Cards.cards];\r\n\r\n\r\nconst Loader = (props)  => {\r\n\r\n    const { height, width, isLandscape } = useSelector((state) => state);\r\n    const [cardSize, setCardSize] = useState(0);\r\n    const [style, setStyle] = useState({});\r\n    const cardIndex = Math.floor(Math.random() * cards.length);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / 5);\r\n            setStyle({\r\n                position:\"absolute\",\r\n                top: (height / 2) - cardSize,\r\n                left: (width / 2) - cardSize * 0.6666666667\r\n            });\r\n        } else {\r\n            setCardSize(width / 5);\r\n            setStyle({\r\n                position:\"absolute\",\r\n                top: (width / 2) - cardSize,\r\n                left: (height / 2) - cardSize * 0.6666666667\r\n            });\r\n        }\r\n\r\n    }, [height, width, cardSize, isLandscape]);\r\n\r\n    return(\r\n        <div style={style} className=\"loader\">\r\n            {chooseCard(cards[cardIndex], cardSize)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Agent from \"../Componets/Agent\";\r\nimport axios from \"axios\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Loader from \"../Componets/Loader\";\r\n//import { increase } from \"../Redux/actions\";\r\n\r\nconst Leaderboard = () =>  {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    const [agents, setAgents] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        setIsLoading(true);\r\n\r\n        axios.get(`/api/v1/leaderboard/${page}`).then(res => {\r\n\r\n            setData(res?.data?.data)\r\n            setIsLoading(false)\r\n\r\n        }, err => {\r\n\r\n        });\r\n\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        const agents = [];\r\n    \r\n        for (let i = 0; i < data?.length; i++) {\r\n    \r\n            agents.push(\r\n                <Agent agentName={data[i].agentName} \r\n                    points={data[i].points}                             \r\n                    wins={data[i].wins}\r\n                    losses={data[i].losses} />);\r\n        }\r\n\r\n        setAgents(agents);\r\n\r\n    }, [data]);\r\n\r\n    \r\n    if(isLoading) return (<Loader />);\r\n\r\n    return(\r\n        <div>\r\n\r\n            <Start />\r\n\r\n            <div className=\"leaderboard\">\r\n\r\n                {agents}\r\n\r\n            </div>\r\n\r\n            <button onClick={() => setPage(x => x - 1)}> Prev </button>\r\n\r\n            <button onClick={() => setPage(x => x + 1)}> Next </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Leaderboard);","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nconst Settings = () => {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nconst CardNumber = (props) => <div className=\"card-number\">{props.cardNumber}</div>;\r\n\r\nexport default CardNumber;","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\";\r\n\r\n\r\n\r\n\r\nconst InPlay = (props) => {\r\n\r\n    const { card, cardNumber } = props;\r\n\r\n    const { height, width, isLandscape } = useSelector((state) => state);\r\n\r\n    const [cardSize, setCardSize] = useState(0);\r\n    const [style, setStyle] = useState({});\r\n    const [need, setNeed] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const style = {\r\n            position: \"absolute\",\r\n            top: (height / 2) - cardSize,\r\n            left: (width / 2) - (cardSize * 0.6666666667)\r\n        };\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / (4 * 1.5));\r\n        } else {\r\n            setCardSize(width / (4 * 1.5));\r\n            style.top = (width / 2) - cardSize;\r\n            style.left = (height / 2) - (cardSize * 0.6666666667)\r\n        }\r\n\r\n        setStyle(style);\r\n\r\n    }, [height, width, cardSize, isLandscape]);\r\n\r\n    useEffect(() => {\r\n\r\n        const index = card.indexOf(\":\") + 1;\r\n        const cardNumber = parseInt(card.slice(index, card.length));\r\n\r\n        if (cardNumber === 20)\r\n            setNeed(card.slice(0, index - 1));\r\n        else \r\n            setNeed(null);\r\n\r\n    }, [card]);\r\n\r\n    return(\r\n        <div style={style}>\r\n            { need && \r\n                <div className=\"needed-card\" \r\n                    style={{top: cardSize / 1.6, width: cardSize}}>\r\n                    {need} \r\n                </div>\r\n            }\r\n\r\n            { chooseCard(card, cardSize) }\r\n            <CardNumber cardNumber={cardNumber} />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default InPlay\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\"\r\n\r\nconst Market = (props) =>  {\r\n\r\n    const { playable, action, cardNumber } = props;\r\n\r\n    const { height, width, isLandscape } = useSelector((state) => state);\r\n\r\n    const [style, setStyle] = useState({});\r\n    const [cardSize, setCardSize] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const style = {\r\n            position:\"absolute\",\r\n            top:    (height / 2) - cardSize,\r\n            left:   width * 0.05\r\n        }\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / (4 * 1.5));\r\n        } else {\r\n            setCardSize(width / (4 * 1.5));\r\n            style.top = (width / 2) - cardSize;\r\n            style.left = height * 0.15;\r\n        }\r\n\r\n        setStyle(style);\r\n\r\n    }, [height, width, isLandscape, cardSize]);\r\n\r\n    if(playable)\r\n        return(\r\n            <div style={style}>\r\n                <span onClick={() => action([\"z:goMarket\"])}>{ chooseCard(\"ff\", cardSize) }</span>\r\n                <CardNumber cardNumber={cardNumber} />\r\n            </div>\r\n            )\r\n    else\r\n        return(\r\n            <div style={style}>\r\n                <span>{ chooseCard(\"ff\", cardSize) }</span>\r\n                <CardNumber cardNumber={cardNumber} />\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Market\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePlayerOneCardIndex, updatePlayerTwoCardIndex } from \"../../Redux/actions\";\r\n\r\nconst CARD_PADDING = 1.1;\r\n\r\n\r\nconst Player = (props) => {\r\n\r\n    const { cards, action, playable, isPlayerOne, angle } = props;\r\n\r\n    const { height, width, isLandscape, playerOneCardIndex, playerTwoCardIndex, gameState } = useSelector((state) => state);\r\n\r\n    const [start, setStart] = useState(0);\r\n    const [margin, setMargin] =  useState(0);\r\n    const [cardSpaceAvailable, setCardSpaceAvailable] = useState(0);\r\n    const [style, setStyle] = useState({});\r\n    const [left, setLeft] = useState(null);\r\n    const [right, setRight] = useState(null);\r\n    const [cardSize, setCardSize] = useState(0);\r\n    const [top, setTop] =  useState(0);\r\n    const [noOfCardsThatCanBeDisplayed, setNoOfCardsThatCanBeDisplayed] =  useState(0);\r\n    const [navStyle, setNavStyle] = useState({});\r\n    const [noOfVisibelCards, setNoOfVisibleCards] = useState(0);\r\n    const [playerCards, setPlayerCard] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (isPlayerOne) {\r\n            setStart(playerOneCardIndex);\r\n        } else {\r\n            setStart(playerTwoCardIndex);\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isPlayerOne]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isPlayerOne) {\r\n            dispatch(updatePlayerOneCardIndex(start));\r\n        } else {\r\n            dispatch(updatePlayerTwoCardIndex(start));\r\n        }\r\n\r\n    }, [start, isPlayerOne, dispatch]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / (4 * 1.5));\r\n        } else {\r\n            setCardSize(width / (4 * 1.4));\r\n        }\r\n\r\n    }, [width, height, isLandscape, gameState]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n\r\n            setTop(props.top * height - cardSize);\r\n            setCardSpaceAvailable((width * 0.8));\r\n            \r\n        } else {\r\n\r\n            setTop(props.top * width - cardSize);\r\n            setCardSpaceAvailable((height * 0.8));\r\n\r\n        }\r\n\r\n    }, [props.top, width, height, cardSize, isLandscape]);\r\n\r\n    useEffect(() => {\r\n\r\n        setNoOfCardsThatCanBeDisplayed(Math.floor(cardSpaceAvailable / (cardSize * CARD_PADDING)));\r\n        setNavStyle({height: cardSize * 1.5});\r\n\r\n    }, [cardSize, cardSpaceAvailable]);\r\n\r\n    useEffect(() => {\r\n        setNoOfVisibleCards(Math.floor(noOfCardsThatCanBeDisplayed > cards.length) ? cards.length : noOfCardsThatCanBeDisplayed);\r\n    }, [noOfCardsThatCanBeDisplayed, cards.length]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n\r\n            setMargin((width - (cardSize * CARD_PADDING * noOfVisibelCards)) / 2);\r\n            \r\n        } else {\r\n\r\n            setMargin((height - (cardSize * CARD_PADDING * noOfVisibelCards)) / 2);\r\n\r\n        }\r\n\r\n\r\n    }, [cardSize, isLandscape, noOfVisibelCards, width, height]);\r\n    \r\n\r\n    console.log(angle, \" available \", cardSpaceAvailable)\r\n\r\n    console.log(angle, \" margin \", margin)\r\n\r\n    console.log(angle, \" cards \", cards.length)\r\n\r\n    console.log(angle, \" No of cards Displayed \", noOfCardsThatCanBeDisplayed)\r\n\r\n    console.log(angle, \" No of v cards \", noOfVisibelCards)\r\n\r\n    useEffect(() => {\r\n\r\n        const style = {\r\n            position: \"absolute\",\r\n            top: top,\r\n            left: margin,\r\n            width: (cardSize * CARD_PADDING * noOfVisibelCards),  \r\n            height: cardSize\r\n        };\r\n\r\n        setStyle(style);\r\n\r\n    }, [cardSize, margin, top, isLandscape, noOfVisibelCards, cards.length]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(start < cards.length - noOfVisibelCards) {\r\n\r\n            setRight(<span style={{top:100}} onClick={() =>  setStart(start + 1)  } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowRight} /> \r\n                    </span>);\r\n        \r\n        } else {\r\n            setRight(null)\r\n        }\r\n\r\n        if (start !== 0) {\r\n\r\n            setLeft(<span style={{top:100}} onClick={() =>  { setStart(start - 1) }  } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowLeft} /> \r\n                    </span>);\r\n        } else {\r\n            setLeft(null);\r\n        }\r\n\r\n    }, [navStyle, start, cards.length, noOfVisibelCards]);\r\n\r\n    useEffect(() => {\r\n\r\n        const cardArray = [];\r\n\r\n        cards.sort();\r\n    \r\n        for(let i = start; i < cards.length; i++){\r\n           \r\n            if((i + 1 - start) * CARD_PADDING* cardSize >= cardSpaceAvailable) break\r\n            \r\n            if(playable)\r\n                cardArray.push(<span  key={i} onClick = {() => action([cards[i]])}> { chooseCard(cards[i], cardSize) } </span>)\r\n            else\r\n                cardArray.push(<span key={i} > { chooseCard(cards[i], cardSize) } </span>)\r\n        }\r\n\r\n        setPlayerCard(cardArray)\r\n\r\n    }, [start, cards, cardSpaceAvailable, action, cardSize, playable]);\r\n\r\n    console.log(angle, cardSpaceAvailable, ' --- ', start)\r\n\r\n    return(\r\n        <div style={style}>\r\n\r\n            {left}\r\n\r\n            {   playerCards }\r\n\r\n            {right}\r\n\r\n            <CardNumber style={{}} cardNumber={cards.length} />\r\n\r\n        </div>)\r\n    \r\n}\r\n\r\nexport default Player;\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from 'react';\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Need = (props) =>{\r\n\r\n    const { need } = props;\r\n\r\n    const { height, width, isLandscape } = useSelector((state) => state);\r\n\r\n\r\n    const [area, setArea] = useState(0);\r\n    const [size, setSize] = useState(0)\r\n    const [style, setStyle] = useState({});\r\n   \r\n\r\n    useEffect(() => {\r\n\r\n        setArea(width * height);\r\n\r\n    }, [isLandscape, width, height]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n            setSize(Math.sqrt(area  /   (3 * 5 * 1.8)));\r\n            setStyle({ width: width * 0.5, height: height, right: 0});\r\n        }  else {\r\n            setSize(Math.sqrt(area  / (3 * 5 * 2.8)));\r\n            setStyle({ width: height * 0.4, height: width, left: 0});\r\n        }\r\n\r\n    }, [isLandscape, area, width, height]);\r\n\r\n    return (\r\n        <div className=\"need-bar\">\r\n\r\n            <div className='background'></div> \r\n\r\n            <div className='cards' style={style}>\r\n                <span onClick = {() => need([\"star:20\"])}> {chooseCard(\"star:\", size, true)} </span>\r\n                <span onClick = {() => need([\"triangle:20\"])}> {chooseCard(\"triangle:\", size)}   </span>\r\n                <span onClick = {() => need([\"square:20\"])}> {chooseCard(\"square:\", size)}     </span>\r\n                <span onClick = {() => need([\"circle:20\"])}> {chooseCard(\"circle:\", size)}     </span>\r\n                <span onClick = {() => need([\"cross:20\"])}> {chooseCard(\"cross:\", size)}      </span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Need;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { updateGameState } from \"../../Redux/actions\";\n\nconst Modal = (props) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { content, close } = props;\n\n    const { height, width, isLandscape } = useSelector((state) => state);\n\n    const {type, text, endGame} = content;\n\n    const [style, setStyle] = useState({});\n\n    useEffect(() => {\n\n        if (isLandscape) {\n            setStyle({height: height, width: width});\n        } else {\n            setStyle({height: width, width: height});\n        }\n    \n    }, [width, height, isLandscape]);\n\n    return (\n        <div className={\"modal\"} style={style} >\n\n            <div className={\"modal-content\"}>\n\n                <div className=\"close\" onClick={() => close(null)}>   &times;    </div>\n\n                <h2> {type} </h2>\n                \n                <p> {text} </p>\n\n                { endGame && (\n                    <div> \n                        <button onClick={() =>  {\n                            dispatch(updateGameState(null));\n                            history.goBack();\n                            }}>Back</button> \n                        <button onClick={() => {\n                            dispatch(updateGameState(null));\n                            close(null);\n                        }}>Play Again</button>\n                    </div>\n                )}\n            \n            </div>\n\n        </div>\n    );\n}\n\nexport default Modal","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {canPlay, checkPlayResponse, createState,\r\n        referee, goMarket, checkGameState,  availableMove, \r\n        cardIndex, undoMove} from  \"../GameLogic/logics\";\r\n\r\nimport InPlay  from \"../Componets/CardHolder/InPlay\";\r\nimport Market from \"../Componets/CardHolder/Market\";\r\nimport Player from \"../Componets/CardHolder/Player\";\r\nimport Need from \"../Componets/CardHolder/Need\";\r\nimport Loader from \"../Componets/Loader\";\r\nimport Modal from \"../Componets/Modal\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeLast, updateGameState, updatePlayerOneActions, updatePlayerOneStates, updatePlayerTwoActions } from \"../Redux/actions\";\r\nimport { Redirect, useParams } from \"react-router\";\r\n\r\nconst rules = {\"holdOn\":{\"active\":true, \"card\":1, \"defend\":false},\r\n            \"pickTwo\":{\"active\":true, \"card\":2, \"defend\":false},\r\n            \"pickThree\":{\"active\":true, \"card\":5, \"defend\":false}, \r\n            \"suspension\":{\"active\":true, \"card\":8, \"defend\":false},\r\n            \"generalMarket\":{\"active\":true, \"card\":14, \"defend\":false},\r\n            \"marketFinishGameEnd\" : false\r\n        } \r\n\r\nconst GamePlay = () => {\r\n\r\n    const { user } = useParams();\r\n\r\n    const { gameState, playerOneStates, playerOneActions, playerTwoStates, \r\n        playerTwoActions, height, width, isLandscape   } = useSelector((state) => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [playerOneData, setPlayerOneData] = useState({});\r\n    const [playerTwoData, setPlayerTwoData] = useState({});\r\n    const [modal, setModal] = useState(null)\r\n    const [isNeeded, setIsNeeded] =  useState(false);\r\n    const [playerCard, setPlayerCard] = useState([]);\r\n    const [opponetCard, setOpponetCard] = useState([]);\r\n    const [inPlay, setInplay] = useState([]);\r\n    const [cardPlayed, setCardPlayed] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [opponetIsPlaying, setOpponetIsPlaying] = useState(false);\r\n    const [opponetMoves, setOpponetMoves] = useState([]);\r\n    const [style, setStyle] = useState({});\r\n    const [gameArea, setGameArea] = useState({});\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if(isLandscape) {\r\n\r\n            setStyle({});\r\n            setGameArea({height: height * 0.97, width: width * 0.98 });\r\n\r\n        } else {\r\n\r\n            setStyle({transform: 'rotate(90deg)'});\r\n            setGameArea({height: width * 0.98, width: height * 0.96 });\r\n\r\n        }\r\n\r\n    }, [isLandscape, height, width]);\r\n\r\n    useEffect(() => {\r\n\r\n        //alert((gameState?.playerTwo?.name !== user))\r\n\r\n        if (!gameState) {\r\n            setIsLoading(true);\r\n            axios.post(\"/api/v1/start\", {agentName: user, user: \"Guest\", rules: rules, start: 5}).then((res)=>{  \r\n\r\n                const data = res.data;\r\n\r\n                dispatch(updateGameState(data.gameState));\r\n\r\n                setPlayerOneData(data.playerInfo);\r\n\r\n                setPlayerTwoData(data.agentInfo);\r\n\r\n                setIsLoading(false);\r\n\r\n                setOpponetIsPlaying(false);\r\n\r\n                setOpponetMoves(data.moves);\r\n\r\n            },err => {\r\n\r\n                console.log(err);\r\n\r\n                setModal({ type: 'Network Error',  text: err});\r\n            });\r\n        }\r\n\r\n    }, [dispatch, gameState, user]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(opponetMoves.length){\r\n            \r\n            //check the type of response gotten from server\r\n            checkPlayResponse(opponetMoves, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n\r\n            opponetMoves.forEach(element => {\r\n\r\n                if(element[1] >= 0) {\r\n                    dispatch(updatePlayerTwoActions(element));\r\n                }\r\n\r\n            });\r\n\r\n            setOpponetMoves([]);\r\n      \r\n        }   \r\n\r\n    }, [gameState, opponetMoves, playerTwoActions, playerTwoData, playerTwoStates, dispatch]);\r\n\r\n\r\n    const needed = (card) => {\r\n\r\n        let availableMoves = availableMove(gameState.playerOne.cardAtHand, gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n        const state = createState(gameState, availableMoves, true, playerOneData);\r\n\r\n        dispatch(updatePlayerOneStates(state));\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        dispatch(updatePlayerOneActions(card));\r\n\r\n        setIsLoading(true);\r\n        setIsNeeded(false);\r\n        setOpponetIsPlaying(false);\r\n \r\n        const request = {agentName:  user, user: \"Guest\", gameState, playerMove: card, rules:rules}\r\n    \r\n        const index = gameState.playerOne.cardAtHand.indexOf(\"whot:20\");\r\n        const newGameState = {...gameState};\r\n\r\n        newGameState.playerOne.cardAtHand.splice(index, 1);\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n        dispatch(updateGameState(newGameState));\r\n\r\n        axios.post(\"/api/v1/play\", request).then((res)=>{\r\n            \r\n            const response = res.data\r\n\r\n            //check the type of response gotten from server\r\n            checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying)\r\n\r\n            //remove loader from screen and transfer game control to player\r\n            setOpponetIsPlaying(false);\r\n            setIsLoading(false);\r\n\r\n            dispatch(updatePlayerTwoActions(...response));\r\n    \r\n        }, err =>{\r\n\r\n            //undo last move\r\n            undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n            //remove loader and transfer game control back to player\r\n            setIsLoading(false);\r\n            setOpponetIsPlaying(false);\r\n    \r\n            setModal({ type: 'Network Error',  text: err});   \r\n            \r\n        });\r\n\r\n    };\r\n\r\n    const playCard = (card) => {\r\n\r\n        const availableMoves = availableMove(gameState.playerOne.cardAtHand, gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        dispatch(updatePlayerOneActions(card));\r\n\r\n        const state = createState(gameState, availableMoves, true, playerOneData);\r\n\r\n        dispatch(updatePlayerOneStates(state));\r\n\r\n        setIsLoading(true);\r\n\r\n        if(card[0] === \"z:goMarket\"){\r\n\r\n            setOpponetIsPlaying(true);\r\n\r\n            goMarket(gameState, gameState.playerOne.name, 1, dispatch);\r\n\r\n            setOpponetIsPlaying(false);\r\n\r\n            setIsLoading(true);\r\n\r\n            const request = {agentName: user, user: \"Guest\", gameState, playerMove: \"z:goMarket\", rules}\r\n        \r\n            axios.post(\"/api/v1/play\", request).then((res)=>{\r\n                \r\n                let response = res.data\r\n\r\n                //remove loader from screen and transfer game control back to opponent\r\n                setIsLoading(false);\r\n                setOpponetIsPlaying(true);\r\n \r\n                //check the type of response gotten from server\r\n\r\n                checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n\r\n                dispatch(updatePlayerTwoActions(...response));\r\n                \r\n            }, err =>{\r\n\r\n                //undo last move\r\n                undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n                //remove loader and transfer game control back to player\r\n                setIsLoading(false);\r\n                setOpponetIsPlaying(false);\r\n\r\n                setModal({ type: 'Network Error',  text: err});\r\n\r\n            });\r\n\r\n        }   else    {\r\n    \r\n            const playGame = canPlay(card[0], gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n            setIsNeeded(playGame[1]);\r\n\r\n            if(playGame[0]){\r\n\r\n                if(playGame[1]){\r\n\r\n                    setIsNeeded(true);\r\n                    setIsLoading(false);\r\n\r\n                    //remove last state\r\n                    dispatch(removeLast(playerOneStates));\r\n                    dispatch(removeLast(playerOneActions));\r\n\r\n                }   else    {\r\n                    \r\n                    const sendMove = referee(gameState, card, \"Guest\", dispatch);\r\n                   \r\n                    const request = { agentName: user, user: \"Guest\", gameState: gameState, playerMove:card[0], rules}\r\n                    \r\n                    if(sendMove) {\r\n\r\n                        axios.post(\"/api/v1/play\", request).then((res)=>{\r\n                            \r\n                            const response = res.data\r\n\r\n                            //remove loader from screen and transfer game control back to opponent\r\n                            setIsLoading(false);\r\n                            setOpponetIsPlaying(true);\r\n\r\n                            //handle response gotten from server \r\n                            checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n     \r\n                            dispatch(updatePlayerTwoActions(...response));\r\n\r\n                        }, err => {\r\n\r\n                            //undo last move\r\n                            undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n                            //remove loader and transfer game control back to player\r\n                            setIsLoading(false);\r\n                            setOpponetIsPlaying(false);\r\n\r\n                            setModal({ type: 'Network Error',  text: err});\r\n\r\n                        })\r\n\r\n                    }else{\r\n\r\n                        setIsLoading(false)\r\n\r\n                    }\r\n\r\n                }\r\n            \r\n            }else{\r\n\r\n                setIsLoading(false);\r\n\r\n                setModal({ type: 'Error',  text: \"illegal move\"});\r\n    \r\n            }\r\n\r\n        }        \r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(gameState) {\r\n\r\n            setPlayerCard(gameState.playerOne.cardAtHand);\r\n\r\n            setOpponetCard(gameState.playerTwo.cardAtHand);\r\n\r\n            setInplay(gameState.cardPlayed[gameState.cardPlayed.length - 1]);\r\n\r\n            setCardPlayed(gameState.cardPlayed);\r\n\r\n        }\r\n\r\n    }, [gameState]);\r\n\r\n    useEffect(() => {\r\n        if(gameState) {\r\n            checkGameState(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch, setModal);\r\n        }\r\n    }, [gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (gameState) {\r\n            if (gameState?.playerTwo?.name !== user) {\r\n                setRedirect(gameState?.playerTwo?.name);\r\n            }\r\n        }\r\n\r\n    }, [redirect, gameState, user]);\r\n\r\n\r\n    return(\r\n        <div style={style}>\r\n\r\n            { redirect && <Redirect to={`/game/${redirect}`}/> }\r\n\r\n            {\r\n                isLoading ? \r\n\r\n                    (<div style={gameArea} className=\"game-table\">\r\n                        <Loader height={height} width={width} isLandscape={isLandscape} />\r\n                    </div>) :\r\n\r\n                    (<div style={gameArea} className=\"game-table\">\r\n\r\n                        <Player top={0.2} angle={180} cards={opponetCard} action={playCard} playable={false} />\r\n\r\n                        <Player top={0.8} angle={0} cards={playerCard} action={playCard} playable={!opponetIsPlaying} isPlayerOne />\r\n            \r\n                        { inPlay && <InPlay  className=\"center\" card={inPlay} cardNumber={cardPlayed?.length} />  }\r\n\r\n                        <Market action={playCard} playable={!opponetIsPlaying} cardNumber={gameState?.market?.length} />\r\n                    \r\n                    </div>)\r\n\r\n            }\r\n\r\n            { isNeeded && <Need need={needed} /> }\r\n\r\n            { modal && <Modal close={setModal} content={modal} /> }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GamePlay;","function FormInput(props){\r\n\r\n    let identifier = props.identifier\r\n\r\n    if(props.type === \"text\")\r\n        return(\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-25\"> <label for={identifier}>{props.label}</label> </div>\r\n\r\n                <div class=\"col-75\">\r\n\r\n                    <input \r\n                        type=\"text\" \r\n                        required \r\n                        id={identifier} \r\n                        name={identifier} \r\n                        onChange={props.onChange} placeholder=\"eg Joe\" />\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    if(props.yes)\r\n    return(\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-25\"><label for={identifier}>{props.label}</label></div>\r\n\r\n            <div class=\"col-75\">\r\n\r\n                <select id={identifier} name={identifier} onChange={props.onChange} >\r\n                    \r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                \r\n                </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n\r\n    return(\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-25\"><label for={identifier}>{props.label}</label></div>\r\n\r\n            <div class=\"col-75\">\r\n\r\n                <select id={identifier} name={identifier} onChange={props.onChange} >\r\n                    \r\n                    <option value={false}>No</option>\r\n                    <option value={true}>Yes</option>\r\n                \r\n                </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormInput","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { useState } from \"react\";\r\nimport Start from \"../Componets/Background/Start\";\r\nimport FormInput from \"../Componets/FormInput\";\r\nimport \"../Styles/form.css\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Componets/Loader\";\r\n\r\n\r\nconst form = {\r\n    agentName: \"\",\r\n    availableMove: true,\r\n    canGoMarket: true,\r\n    canNeedAnyCard: true,\r\n    cardAtHand: false,\r\n    noOfCardAtHand: false,\r\n    cardInPlay: false,\r\n    cardPlayed: false,\r\n    noOfCardPlayed: false,\r\n    noOfCardsInMarket: false,\r\n    noOfCardsWithOpponent: false,\r\n    rules: false\r\n}\r\n \r\nconst CreateAgent = () => {\r\n\r\n    const [formData, setFormData] = useState(form);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n    function handleEvent(e){\r\n\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        setFormData(e => {\r\n            e[name] = value;\r\n            return e;\r\n        })\r\n\r\n    }\r\n\r\n    function submit(e){\r\n\r\n        e.preventDefault();\r\n\r\n        setIsLoading(false);\r\n    \r\n        axios.post('/api/v1/create-agent', {agent: formData}).then((res)=>{\r\n            \r\n            alert(res.data.msg)\r\n\r\n            setIsLoading(true);\r\n\r\n            if(res.data.status){\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    if(isLoading) return (<Loader />);\r\n    \r\n    return(\r\n        <>\r\n \r\n            <Start />\r\n            \r\n            <div class=\"container\">\r\n\r\n                <form method=\"post\" action='/api/create-agent'>\r\n\r\n                    <div class=\"row\">\r\n                        <h3>Create Agent</h3>\r\n                    </div>\r\n\r\n                    <FormInput label=\"Agent Name\" type={\"text\"} identifier={\"agentName\"} onChange={handleEvent} />\r\n\r\n                    \r\n\r\n                    <div class=\"row\">\r\n\r\n                        <h5>Agent Settings</h5> <br/> \r\n\r\n                        <p>\r\n                            select yes if you want the agent to considered these fields while learning\r\n                        </p>\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-25\">\r\n\r\n                            <label for=\"avialableMove\">Available Move</label>\r\n                        \r\n                        </div>\r\n\r\n                        <div class=\"col-75\">\r\n                        \r\n                            <select id=\"avialableMove\" name=\"avialableMove\" disabled>\r\n                                \r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                            \r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FormInput label=\"Can Go Market\" type={\"select\"} identifier={\"canGoMarket\"} onChange={handleEvent} yes />\r\n\r\n                    <FormInput label=\"Can Need Any Card\" type={\"select\"} identifier={\"canNeedAnyCard\"} onChange={handleEvent} yes />\r\n\r\n                    <FormInput label=\"Cards At Hand\" type={\"select\"} identifier={\"cardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards At Hand\" type={\"select\"} identifier={\"noOfCardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card In Play\" type={\"select\"} identifier={\"cardInPlay\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card Played\" type={\"select\"} identifier={\"cardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards Played\" type={\"select\"} identifier={\"noOfCardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards In Market\" type={\"select\"} identifier={\"noOfCardsInMarket\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards With Opponent\" type={\"select\"} identifier={\"noOfCardsWithOpponent\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Rules\" type={\"select\"} identifier={\"rules\"} onChange={handleEvent} />\r\n\r\n                    <div class=\"row\" style={{marginTop:20}}>   <input type=\"submit\" value=\"Submit\" onClick={submit}/> </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            \r\n        </>\r\n     )\r\n \r\n }\r\n \r\n export default CreateAgent","import {BrowserRouter, Route} from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from 'react';\nimport Home from \"./Routes/Home\";\nimport Rules from \"./Routes/Rules\";\nimport Leaderboard from \"./Routes/Leaderboard\";\nimport Settings from \"./Routes/Settings\";\nimport GamePlay from \"./Routes/GamePlay\";\nimport CreateAgent from \"./Routes/CreateAgent\";\nimport { setHeight, setIsLandscape, setWidth } from './Redux/actions';\n\n\nconst home =  () => <Home />\nconst rules =  () => <Rules />\nconst leaderboard = () => <Leaderboard />\nconst settings = () => <Settings />\nconst game = () => <GamePlay />\nconst createAgent = () => <CreateAgent />\n\n\nconst App = () => {\n\n    const { height, width } = useSelector((state) => state);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        window.onresize = () => {\n            dispatch(setHeight(window.innerHeight));\n            dispatch(setWidth(window.innerWidth));\n        }\n\n        window.onorientationchange = () => {\n            dispatch(setHeight(window.innerHeight));\n            dispatch(setWidth(window.innerWidth));\n        }\n\n    }, [dispatch]);\n\n    useEffect(() => {\n\n        if(height > width) {\n            dispatch(setIsLandscape(false));\n        } else {\n            dispatch(setIsLandscape(true));\n        }\n\n    }, [height, width, dispatch]);\n\n    return(\n        <BrowserRouter>\n            <Route path=\"/\" exact={true} component={home} />\n            <Route path=\"/home\" exact={true} component={home} />\n            <Route path=\"/rules\" exact={true} component={rules} />\n            <Route path=\"/leaderboard\" exact={true} component={leaderboard} />\n            <Route path=\"/settings\" exact={true} component={settings} />\n            <Route path=\"/create-agent\" exact={false} component={createAgent}/>\n            <Route path=\"/game/:user\" exact={false} component={game}/>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport  \"./Styles/styles.css\";\r\nimport \"./Styles/need.css\";\r\nimport  \"./Styles/modal.css\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}