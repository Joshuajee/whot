{"version":3,"sources":["reportWebVitals.js","Componets/Shapes/Square.js","Componets/Shapes/Text.js","Componets/Cards/SquareCard.js","Componets/Shapes/Circle.js","Componets/Cards/CircleCard.js","Componets/Shapes/Cross.js","Componets/Cards/CrossCard.js","Componets/Shapes/Triangle.js","Componets/Cards/TriangleCard.js","Componets/Shapes/Star.js","Componets/Cards/StarCard.js","Componets/Cards/WhotCard.js","Componets/Cards/CardCover.js","GameLogic/chooseCard.js","GameLogic/logics.js","Componets/Background/Start.js","Componets/Button.js","Routes/Home.js","Componets/Background/Whot.js","Routes/Rules.js","Componets/Agent.js","Componets/Loader.js","Routes/Leaderboard.js","Routes/Settings.js","Componets/CardHolder/CardNumber.js","Componets/CardHolder/InPlay.js","Componets/CardHolder/Market.js","Componets/CardHolder/Player.js","Componets/CardHolder/Need.js","Componets/Modal.js","Routes/GamePlay.js","Componets/FormInput.js","Routes/CreateAgent.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","fill","className","x","marginLeft","y","marginTop","width","height","Text","text","fontSize","z","color","transform","SquareCard","size","cWidth","cHeight","firstCWidth","firstCHeight","firstMarginLeft","firstMarginTop","lastCWidth","lastCHeight","lastMarginLeft","lastMarginTop","topNumberMarginLeft","topNumberMarginTop","bottomNumberMarginLeft","bottomNumberMarginTop","fontSizeNumber","rotateY","rotateZ","number","Circle","cx","cy","r","radius","CircleCard","firstRadius","lastRadius","Cross","CrossCard","Triangle","XA","YA","XB","YB","XC","YC","points","TriangleCard","firstXA","firstYA","firstXB","firstYB","firstXC","firstYC","lastXA","lastYA","lastXB","lastYB","lastXC","lastYC","Star","XCenter","top","XTop","XTopLeft","XTopRight","bottom","XBottomLeft","XBottomRight","StarCard","firstXCenter","firstTop","firstXTop","firstXTopLeft","firstXTopRight","firstBottom","firstXBottomLeft","firstXBottomRight","lastXCenter","lastTop","lastXTop","lastXTopLeft","lastXTopRight","lastBottom","lastXBottomLeft","lastXBottomRight","topStarNumberMarginLeft","topStarNumberMarginTop","bottomStarNumberMarginLeft","bottomStarNumberMarginTop","fontSizeNumberStar","parseInt","number_","need","WhotCard","marginLeftOne","marginTopOne","marginLeftTwo","marginTopTwo","fontSizeSymbol","CardCover","chooseCard","card","cardSize","index","indexOf","slice","length","shape","goMarket","player","market","times","i","push","console","log","pop","referee","rules","playerCardAtHand","opponentsCardAtHand","cardPlayed","splice","playGame","holdOn","active","pickTwo","pickThree","suspension","generalMarket","checkPlayResponse","response","gameState","events","playerTwoState","setTimeout","handleResponse","playerTwo","cardAtHand","playerOne","cardIndex","availableMoves","availableMove","createState","emit","checkGameState","inPlay","cards","result","sanitizeCardPlayed","shuffle","array","currIndex","randIndex","Math","floor","random","tempVal","playerCard","inPlayCard","index_in","number_in","shape_in","sort","isPlayerOne","agentName","name","cardInPlay","noOfCardsInMarket","noOfCardsWithOpponent","move","Cards","Start","area","window","innerWidth","innerHeight","sqrt","componet","Button","to","link","class","Home","style","Whot","left","cardWidth","Rules","Agent","icon","faUserCircle","wins","losses","parseFloat","toPrecision","Loader","position","Leaderboard","state","isLoading","axios","get","setState","data","this","agents","React","Component","Settings","CardNumber","cardNumber","InPlay","Market","playable","onClick","action","Player","start","margin","cardSpaceAvailable","noOfCardsThatCanBeDisplayed","align","navStyle","right","faArrowLeft","faArrowRight","displayCards","cardArray","Need","cardPlayedCards","marketCards","GamePlay","opponetIsPlaying","isNeeded","playerOneCardIndex","playerTwoCardIndex","change","playerOneStates","playerTwoStates","visibility","playCard","bind","needed","EventEmitter","on","url","location","href","user","post","res","moves","catch","error","alert","close","request","canPlay","sendMove","id","opponetCard","gameObjects","angle","FormInput","identifier","type","for","label","required","onChange","placeholder","value","CreateAgent","formData","noOfCardAtHand","noOfCardPlayed","handleEvent","e","target","method","disabled","preventDefault","agent","msg","success","home","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":";64BAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+BCcCQ,MAXf,SAAgBC,GAEZ,OACI,8BACI,mBAAGC,KAAK,QAAQC,UAAU,SAA1B,SACI,sBAAMC,EAAGH,EAAMI,WAAYC,EAAGL,EAAMM,UAAWC,MAAOP,EAAMO,MAAOC,OAAQR,EAAMQ,cCkBlFC,MAvBf,SAAcT,GAEV,IAAIU,EAAOV,EAAMU,KACbC,EAAWX,EAAMW,SACjBR,EAAIH,EAAMG,EACVE,EAAIL,EAAMK,EACVO,EAAIZ,EAAMY,EACVC,EAAQb,EAAMa,MAElB,OACI,8BACI,mBAAGZ,KAAMY,EAAOC,UAAW,UAAWX,EAAG,IAAME,EAAI,IAAMO,EAAI,IAA7D,SACI,sBAAMC,MAAOA,EACTV,EAAGH,EAAMI,WACTC,EAAGL,EAAMM,UACTK,SAAUA,EAHd,SAIKD,SC6DNK,MA1Ef,SAAoBf,GAEhB,IAAIgB,EAAOhB,EAAMgB,KAEbT,EAAQS,EACRR,EAAgB,IAAPQ,EACTC,EAAiB,GAARV,EACTW,EAAmB,GAATV,EACVJ,GAAcG,EAAQU,GAAU,EAChCX,GAAaE,EAASU,GAAW,EAEjCC,EAA2B,GAAbf,EACdgB,EAA4B,GAAbhB,EACfiB,EAA+B,GAAbjB,EAClBkB,EAA8B,IAAblB,EAEjBmB,EAA0B,GAAbnB,EACboB,EAA2B,GAAbpB,EACdqB,EAAiBR,EAASb,EAC1BsB,EAAgBlB,EAAsB,IAAbJ,EAEzBuB,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAErBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAExBuB,EAAiBf,EAAO,EAExBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAGd,OACI,sBAAKL,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIN,MAAOY,EACPX,OAAQY,EACRhB,WAAYiB,EACZf,UAAWgB,IAEf,cAAC,EAAD,CACIf,MAAOU,EACPT,OAAQU,EACRd,WAAYA,EACZE,UAAWA,IAEf,cAAC,EAAD,CACIC,MAAOgB,EACPf,OAAQgB,EACRpB,WAAYqB,EACZnB,UAAWoB,IAEf,cAAC,EAAD,CACIvB,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,cC5DRsB,MAXf,SAAgBnC,GAEZ,OACI,8BACI,mBAAGC,KAAK,QAAR,SACI,wBAAQmC,GAAIpC,EAAMI,WAAYiC,GAAIrC,EAAMM,UAAWgC,EAAGtC,EAAMuC,cCiE7DC,MAnEf,SAAoBxC,GAEhB,IAAIgB,EAAOhB,EAAMgB,KACbT,EAAQS,EACRR,EAAgB,IAAPQ,EACTZ,EAAaG,EAAQ,EACrBD,EAAYE,EAAS,EACrB+B,EAAShC,EAAQ,EAEjBc,EAA0B,GAARd,EAAc,EAChCe,EAA0B,GAATd,EAAe,EAChCiC,EAAsB,GAARlC,EAAc,EAE5BkB,EAAyB,IAARlB,EAAc,EAC/BmB,EAAyB,IAATlB,EAAe,EAC/BkC,EAAqB,GAARnC,EAAc,EAE3BoB,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAErBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAExBG,EAAWK,EAAO,EAElBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAGd,OACI,sBAAKL,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAMV,EAAMkC,OACZvB,SAAUA,EACVE,MAAO,UAEX,cAAC,EAAD,CACIT,WAAYiB,EACZf,UAAWgB,EACXiB,OAAQE,IAEZ,cAAC,EAAD,CACIrC,WAAYA,EACZE,UAAWA,EACXiC,OAAQA,IAEZ,cAAC,EAAD,CACInC,WAAYqB,EACZnB,UAAWoB,EACXa,OAAQG,IAEZ,cAAC,EAAD,CACIvC,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAMV,EAAMkC,OACZvB,SAAUA,EACVE,MAAO,cCpDR8B,MAZf,SAAe3C,GAEX,OACI,8BACI,oBAAGC,KAAK,QAAR,UACI,sBAAME,EAAGH,EAAMI,WAAaJ,EAAMO,MAAQ,EAAGF,EAAGL,EAAMM,UAAWC,MAAOP,EAAMO,MAAQ,EAAGC,OAAQR,EAAMQ,SACvG,sBAAML,EAAGH,EAAMI,WAAYC,EAAGL,EAAMM,UAAYN,EAAMQ,OAAS,EAAGD,MAAOP,EAAMO,MAAOC,OAAQR,EAAMQ,OAAS,UCwE9GoC,MA3Ef,SAAmB5C,GAEf,IAAIgB,EAAOhB,EAAMgB,KAEbT,EAAQS,EACRR,EAAgB,IAAPQ,EACTC,EAAiB,GAARV,EACTW,EAAmB,GAATV,EACVJ,GAAcG,EAAQU,GAAU,EAChCX,GAAaE,EAASU,GAAW,EAEjCC,EAAsB,GAARZ,EAAc,GAC5Ba,EAAwB,GAATZ,EAAe,GAC9Ba,EAAqC,IAAlBd,EAAQU,GAAgB,EAC3CK,EAAsC,IAApBd,EAASU,GAAiB,EAE5CK,EAAqB,GAARhB,EAAc,GAC3BiB,EAAuB,GAAThB,EAAe,GAC7BiB,EAAoC,KAAlBlB,EAAQU,GAAgB,EAC1CS,EAAqC,KAApBlB,EAASU,GAAiB,EAE3CS,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAErBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAExBuB,EAAiBf,EAAO,EAExBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAGd,OACI,sBAAKL,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIN,MAAOY,EACPX,OAAQY,EACRhB,WAAYiB,EACZf,UAAWgB,IAEf,cAAC,EAAD,CACIf,MAAOU,EACPT,OAAQU,EACRd,WAAYA,EACZE,UAAWA,IAEf,cAAC,EAAD,CACIC,MAAOgB,EACPf,OAAQgB,EACRpB,WAAYqB,EACZnB,UAAWoB,IAEf,cAAC,EAAD,CACIvB,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,cCrDRgC,MAlBf,SAAkB7C,GAEd,IAAI8C,EAAK9C,EAAM8C,GACXC,EAAK/C,EAAM+C,GACXC,EAAKhD,EAAMgD,GACXC,EAAKjD,EAAMiD,GACXC,EAAKlD,EAAMkD,GACXC,EAAKnD,EAAMmD,GAEf,OACI,8BACI,mBAAGlD,KAAK,QAAR,SACI,yBAASmD,OAASN,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAMC,SCoF1EE,MA7Ff,SAAsBrD,GAElB,IAAIgB,EAAOhB,EAAMgB,KAEbT,EAAQS,EACRR,EAAgB,IAAPQ,EAGT8B,EAAa,IAARvC,EACLwC,EAAc,GAATvC,EACLwC,EAAa,GAARzC,EACL0C,EAAc,GAATzC,EACL0C,EAAa,IAAR3C,EACL4C,EAAc,GAAT3C,EAGL8C,EAAkB,IAAR/C,EACVgD,EAAmB,IAAT/C,EACVgD,EAAkB,GAARjD,EACVkD,EAAmB,IAATjD,EACVkD,EAAkB,IAARnD,EACVoD,EAAmB,IAATnD,EAGVoD,EAAiB,KAARrD,EACTsD,EAAkB,KAATrD,EACTsD,EAAiB,GAARvD,EACTwD,EAAkB,IAATvD,EACTwD,EAAiB,MAARzD,EACT0D,EAAkB,KAATzD,EAGTmB,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAGrBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAGxBuB,EAAiBf,EAAO,EAGxBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAEd,OACI,sBAAKL,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIiC,GAAIQ,EACJP,GAAIQ,EACJP,GAAIQ,EACJP,GAAIQ,EACJP,GAAIQ,EACJP,GAAIQ,IAER,cAAC,EAAD,CACIb,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,IAER,cAAC,EAAD,CACIL,GAAIc,EACJb,GAAIc,EACJb,GAAIc,EACJb,GAAIc,EACJb,GAAIc,EACJb,GAAIc,IAER,cAAC,EAAD,CACI9D,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAMV,EAAMkC,OACZvB,SAAUoB,EACVlB,MAAO,cCjERqD,MAzBf,SAAclE,GAEV,IAAImE,EAAUnE,EAAMmE,QAChBC,EAAMpE,EAAMoE,IACZC,EAAOrE,EAAMqE,KACbC,EAAWtE,EAAMsE,SACjBC,EAAYvE,EAAMuE,UAClBC,EAASxE,EAAMwE,OACfC,EAAczE,EAAMyE,YACpBC,EAAe1E,EAAM0E,aAEzB,OACI,8BACI,mBAAGzE,KAAK,QAAR,SACI,yBAASmD,OAAUe,EAAU,IACzBC,EAAM,IAAOK,EAAc,IACzBD,EAAS,IAAMD,EAAY,IAC3BF,EAAO,IAAMC,EAAW,IACxBD,EAAO,IAAMK,EACb,IAAMF,SC8IbG,MA9Jf,SAAkB3E,GAEd,IAAIgB,EAAOhB,EAAMgB,KAEbT,EAAQS,EACRR,EAAgB,IAAPQ,EAGTmD,EAAU5D,EAAQ,EAClB6D,EAAe,GAAT5D,EACN6D,EAAgB,IAAT7D,EACP8D,EAAmB,GAAR/D,EACXgE,EAAoB,GAARhE,EACZiE,EAAkB,IAAThE,EACTiE,EAAsB,GAARlE,EACdmE,EAAuB,GAARnE,EAGfqE,EAAuB,IAARrE,EACfsE,EAAoB,IAATrE,EACXsE,EAAqB,KAATtE,EACZuE,EAAwB,IAARxE,EAChByE,EAAyB,KAARzE,EACjB0E,EAAuB,IAATzE,EACd0E,EAA2B,IAAR3E,EACnB4E,EAA4B,IAAR5E,EAGpB6E,EAAuB,GAAT7E,EACd8E,EAAmB,GAAT7E,EACV8E,EAAoB,IAAT9E,EACX+E,EAAuB,IAARhF,EACfiF,EAAwB,IAARjF,EAChBkF,EAAsB,IAATjF,EACbkF,EAA0B,GAARnF,EAClBoF,EAA2B,GAARpF,EAGnBoB,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAGrBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAGxBoF,EAAkC,IAARrF,EAC1BsF,EAAkC,IAATrF,EAGzBsF,EAAqC,IAARvF,EAC7BwF,EAAqC,KAATvF,EAE7BR,EAAMkC,OAAS,IAEd0D,EAAkC,IAARrF,EAC1BsF,EAAkC,IAATrF,EAGzBsF,EAAqC,IAARvF,EAC7BwF,EAAqC,KAATvF,GAIhC,IAAIuB,EAAiBf,EAAO,EACxBgF,EAAqBhF,EAAO,GAG5BgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAGV2B,EAAS+D,SAASjG,EAAMkC,QACxBgE,EAAmB,EAAThE,EAQd,OAPGlC,EAAMmG,OACLjE,EAAS,GACTgE,EAAU,IAMV,sBAAKhG,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAMwB,EACNvB,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIsD,QAASS,EACTR,IAAKS,EACLR,KAAMS,EACNR,SAAUS,EACVR,UAAWS,EACXR,OAAQS,EACRR,YAAaS,EACbR,aAAcS,IAIlB,cAAC,EAAD,CACIhF,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYwF,EACZtF,UAAWuF,EACXnF,KAAMwF,EACNvF,SAAUqF,EACVnF,MAAO,UAEX,cAAC,EAAD,CACIsD,QAASA,EACTC,IAAKA,EACLC,KAAMA,EACNC,SAAUA,EACVC,UAAWA,EACXC,OAAQA,EACRC,YAAaA,EACbC,aAAcA,IAIlB,cAAC,EAAD,CACIP,QAASiB,EACThB,IAAKiB,EACLhB,KAAMiB,EACNhB,SAAUiB,EACVhB,UAAWiB,EACXhB,OAAQiB,EACRhB,YAAaiB,EACbhB,aAAciB,IAIlB,cAAC,EAAD,CACIxF,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAMwB,EACNvB,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAY0F,EACZxF,UAAWyF,EACXrF,KAAMwF,EACNvF,SAAUqF,EACVnF,MAAO,cC9DRuF,MAzFf,SAAkBpG,GAEd,IAAIgB,EAAOhB,EAAMgB,KACbT,EAAQS,EACRR,EAAgB,IAAPQ,EAETqF,EAAgB9F,EAAQ,EACxB+F,EAAe9F,EAAS,IAExB+F,EAAgBhG,EAAQ,EACxBiG,EAAehG,EAAS,IAExBa,EAA0B,GAARd,EAClBe,EAA0B,IAATd,EAEjBiB,EAAyB,GAARlB,EACjBmB,EAAyB,GAATlB,EAEhBmB,EAA8B,IAARpB,EACtBqB,EAA8B,IAATpB,EAErBqB,EAAiC,IAARtB,EACzBuB,EAAiC,IAATtB,EAExBG,EAAWK,EAAO,EAClByF,EAAiBzF,EAAO,EACxBe,EAAiBf,EAAO,EAExBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAEd,OACI,sBAAKL,UAAU,OAAOK,MAAOA,EAAOC,OAAQA,EAA5C,UAGI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYuB,EACZrB,UAAWsB,EACXlB,KAAM,GACNC,SAAUoB,EACVlB,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYiB,EACZf,UAAWgB,EACXZ,KAAM,IACNC,SAAU8F,EACV5F,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYiG,EACZ/F,UAAWgG,EACX5F,KAAM,OACNC,SAAUA,EACVE,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYmG,EACZjG,UAAWkG,EACX9F,KAAM,OACNC,SAAUA,EACVE,MAAO,UAGX,cAAC,EAAD,CACIV,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYqB,EACZnB,UAAWoB,EACXhB,KAAM,IACNC,SAAU8F,EACV5F,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYyB,EACZvB,UAAWwB,EACXpB,KAAM,GACNC,SAAUoB,EACVlB,MAAO,cCxCR6F,MA1Cf,SAAmB1G,GAEf,IAAIgB,EAAOhB,EAAMgB,KACbT,EAAQS,EACRR,EAAgB,IAAPQ,EAETqF,EAAgB9F,EAAQ,EACxB+F,EAAe9F,EAAS,IAExB+F,EAAgBhG,EAAQ,EACxBiG,EAAehG,EAAS,IAExBG,EAAWK,EAAO,EAElBgB,EAAkB,GAARzB,EACV0B,EAAkB,GAAR1B,EAGd,OACI,sBAAKL,UAAU,kBAAkBK,MAAOA,EAAOC,OAAQA,EAAvD,UAEI,cAAC,EAAD,CACIL,EAAG,EAAGE,EAAG,EAAGO,EAAG,EACfR,WAAYiG,EACZ/F,UAAWgG,EACX5F,KAAM,OACNC,SAAUA,EACVE,MAAO,UAEX,cAAC,EAAD,CACIV,EAAG,IAAKE,EAAG2B,EAASpB,EAAGqB,EACvB7B,WAAYmG,EACZjG,UAAWkG,EACX9F,KAAM,OACNC,SAAUA,EACVE,MAAO,cCAR8F,MA5Bf,SAAoBC,EAAMC,GAAsB,IAAZV,EAAW,wDAGvCW,EAAQF,EAAKG,QAAQ,KACrB7E,EAAS0E,EAAKI,MAAMF,EAAQ,EAAGF,EAAKK,QACpCC,EAAQN,EAAKI,MAAM,EAAGF,GAE1B,OAAOI,GAEH,IAAK,OACD,OAAO,cAAC,EAAD,CAAUlG,KAAM6F,EAAU3E,OAAQA,EAAQiE,KAAMA,IAC3D,IAAK,SACD,OAAO,cAAC,EAAD,CAAYnF,KAAM6F,EAAU3E,OAAQA,IAC/C,IAAK,SACD,OAAO,cAAC,EAAD,CAAYlB,KAAM6F,EAAU3E,OAAQA,IAC/C,IAAK,QACD,OAAO,cAAC,EAAD,CAAWlB,KAAM6F,EAAU3E,OAAQA,IAC9C,IAAK,WACD,OAAO,cAAC,EAAD,CAAclB,KAAM6F,EAAU3E,OAAQA,IACjD,IAAK,OACD,OAAO,cAAC,EAAD,CAAUlB,KAAM6F,EAAU3E,OAAQA,IAC7C,QACI,OAAO,cAAC,EAAD,CAAWlB,KAAM6F,MC5B7B,SAASM,EAASC,EAASC,GAO9B,IAPiD,IAAXC,EAAU,uDAAF,EAOtCC,EAAI,EAAGA,EAAID,EAAOC,IAEnBF,EAAOJ,OAAS,IAEfG,EAAOI,KAAKH,EAAOA,EAAOJ,OAAS,IAEnCQ,QAAQC,IAAIL,EAAOA,EAAOJ,OAAS,IAEnCI,EAAOM,OAUZ,SAASC,EAAQhB,EAAMiB,EAAOC,EAAkBC,EAAqBC,EAAYX,GAGpF,IAAIP,EAAQF,EAAK,GAAGG,QAAQ,KAAO,EAC/B7E,EAAS+D,SAASW,EAAK,GAAGI,MAAMF,EAAOF,EAAK,GAAGK,SAInD,OAmCG,SAAkBG,EAAQR,EAAMoB,EAAY9F,GAW/C,GAHAuF,QAAQC,IAAI,eAAiBd,GAGd,eAAZA,EAAK,SAEF,GAAc,KAAX1E,EAEL8F,EAAWL,MAEXK,EAAWR,KAAKZ,EAAK,QAEpB,CAEDoB,EAAWR,KAAKZ,EAAK,IAErB,IAAI,IAAIW,EAAI,EAAGA,EAAIH,EAAOH,OAAQM,IAE3BH,EAAOG,KAAOX,EAAK,IAAIQ,EAAOa,OAAOV,EAAG,IA9DnDW,CAASJ,EAAkBlB,EAAMoB,EAAY9F,KAE1C2F,EAAMM,OAAOC,QAAUlG,IAAW2F,EAAMM,OAAOvB,QAIzCiB,EAAMQ,QAAQD,QAAUlG,IAAW2F,EAAMQ,QAAQzB,MAEtDO,EAASY,EAAqBV,EAAQ,IAE/B,GAEFQ,EAAMS,UAAUF,QAAUlG,IAAW2F,EAAMS,UAAU1B,MAE1DO,EAASY,EAAqBV,EAAQ,IAE/B,KAEFQ,EAAMU,WAAWH,QAAUlG,IAAW2F,EAAMU,WAAW3B,SAIvDiB,EAAMW,cAAcJ,QAAUlG,IAAW2F,EAAMW,cAAc5B,OAElEO,EAASY,EAAqBV,IAEvB,KA+ER,SAASoB,EAAkBC,EAAUC,EAAWC,EAAQC,GAE3DC,WAAWC,EA9IW,KA8I0B,EAAGL,EAAUC,EAAWC,EAAQC,GAKpF,SAASE,EAAejC,EAAO4B,EAAUC,EAAWC,EAAQC,GASxD,IAAIf,EAAmBa,EAAUK,UAAUC,WACvClB,EAAsBY,EAAUO,UAAUD,WAC1CjB,EAAaW,EAAUX,WACvBX,EAASsB,EAAUtB,OAGnBQ,EAAQc,EAAUd,MAElBsB,EAAYT,EAAS5B,GAAO,GAAGC,QAAQ,KAAO,EAC9C7E,EAAS+D,SAASyC,EAAS5B,GAAO,GAAGE,MAAMmC,EAAWT,EAAS5B,GAAO,GAAGG,SAEzEmC,EAAiBC,EAAcvB,EAAkBE,EAAWA,EAAWf,OAAS,IAKpF,GAHA4B,EAAerB,KAAK8B,EAAYX,EAAWS,GAAgB,IAG7C,KAAXlH,EAAc,CAEb8F,EAAWR,KAAKkB,EAAS5B,GAAO,IAEhC,IAAI,IAAIS,EAAI,EAAGA,EAAIO,EAAiBb,OAAQM,IAEb,YAAxBO,EAAiBP,IAAkBO,EAAiBG,OAAOV,EAAG,OAIzC,eAAvBmB,EAAS5B,GAAO,GAErBc,EAAQc,EAAS5B,GAAQe,EAAOC,EAAkBC,EAAqBC,EAAYX,GAInFF,EAASW,EAAkBT,GAI/BuB,EAAOW,KAAK,QAETzC,EAAQ,EAAI4B,EAASzB,OAAQ6B,WAAWC,EAlMrB,KAkM0DjC,EAAQ,EAAG4B,EAAUC,EAAWC,EAAQC,GACnHD,EAAOW,KAAK,YAMd,SAASC,EAAeb,GAW3B,GAAGA,EAAUO,UAAUD,WAAWhC,OAAS,GAAK0B,EAAUO,UAAUD,WAAWhC,OAAS,QAIlF,GAAG0B,EAAUtB,OAAOJ,OAAS,EAAE,CAKjC,IAAIwC,EA0CL,SAA4BC,GAI/B,IAFA,IAAIC,EAAS,GAELpC,EAAI,EAAGA,EAAImC,EAAMzC,OAAQM,IAAI,CAEjC,IAAIT,EAAQ4C,EAAMnC,GAAGR,QAAQ,KAAO,EAGtB,KAFDd,SAASyD,EAAMnC,GAAGP,MAAMF,EAAO4C,EAAMzC,SAG9C0C,EAAOnC,KAAK,WAEZmC,EAAOnC,KAAKkC,EAAMnC,IAG1B,OAAOoC,EAzDUC,CAAmBjB,EAAUX,YAG1CW,EAAUtB,OAASoC,EAGnBd,EAAUX,WAAa,CAAEW,EAAUX,WAAWW,EAAUX,WAAWf,OAAS,IAG5E0B,EAAUtB,OAAOM,MAGjBgB,EAAUtB,OAASwC,EAAQlB,EAAUtB,SAOtC,SAASwC,EAAQC,GAIpB,IAFA,IAAIC,EAAYD,EAAM7C,OAEf,IAAM8C,GAAW,CAGpB,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,GAIvCK,EAAWN,IAHfC,GAIAD,EAAMC,GAAaD,EAAME,GACzBF,EAAME,GAAaI,EAIvB,OAAON,EA2DJ,SAAST,EAAcgB,EAAYC,GAgBtC,IANA,IAAIC,EAAWD,EAAWvD,QAAQ,KAAO,EACrCyD,EAAYvE,SAASqE,EAAWtD,MAAMuD,EAAUD,EAAWrD,SAC3DwD,EAAWH,EAAWtD,MAAM,EAAGuD,GAE/BlB,EAAgB,CAAC,cAEb9B,EAAI,EAAGA,EAAI8C,EAAWpD,OAAQM,IAAI,CAEtC,IAAIT,EAAQuD,EAAW9C,GAAGR,QAAQ,KAAO,EACrC7E,EAAS+D,SAASoE,EAAW9C,GAAGP,MAAMF,EAAOuD,EAAW9C,GAAGN,SAC3DC,EAAQmD,EAAW9C,GAAGP,MAAM,EAAGF,GAInC,GAAc,KAAX5E,EAMC,OAJAmH,EAAcqB,OAEdrB,EAAc7B,KAAK,YAAa,WAAY,YAAa,UAAW,eAE7D6B,GAEPnH,IAAWsI,GAINtD,IAAUuD,IAFfpB,EAAc7B,KAAK6C,EAAW9C,IAWtC,OAAO8B,EAAcqB,OAMlB,SAASpB,EAAYX,EAAYS,EAAgBuB,GAEpD,OAAGA,EACQ,CACHC,UAAWjC,EAAUO,UAAU2B,KAC/B5B,WAAYN,EAAUO,UAAUD,WAChC6B,WAAYnC,EAAUX,WAAWW,EAAUX,WAAWf,OAAS,GAC/De,WAAYW,EAAUX,WACtB+C,kBAAmBpC,EAAUtB,OAAOJ,OACpC+D,sBAAuBrC,EAAUK,UAAUC,WAAWhC,OACtDoC,cAAeD,EACfvB,MAAOc,EAAUd,OAId,CACH+C,UAAWjC,EAAUK,UAAU6B,KAC/B5B,WAAYN,EAAUK,UAAUC,WAChC6B,WAAYnC,EAAUX,WAAWW,EAAUX,WAAWf,OAAS,GAC/De,WAAYW,EAAUX,WACtB+C,kBAAmBpC,EAAUtB,OAAOJ,OACpC+D,sBAAuBrC,EAAUO,UAAUD,WAAWhC,OACtDoC,cAAeD,EACfvB,MAAOc,EAAUd,OAKtB,SAASsB,EAAUE,EAAe4B,GAErC,GAA4B,IAAzB5B,EAAcpC,OAAc,OAAQ,EAEvC,IAAK,IAAIM,EAAI,EAAGA,EAAI8B,EAAcpC,OAAQM,IAAK,GAAG8B,EAAc9B,KAAO0D,EAAM,OAAO1D,EC3YxF,IAAImC,EAAK,YAAOwB,EAAMxB,OACtBA,EAAMlC,KAAK,YAiCI2D,MA/Bf,WAEI,IAGIC,EAHQC,OAAOC,WACND,OAAOE,YAMhB1E,EAFOoD,KAAKuB,KAAKJ,EAAK,KAI1B1B,EAASG,EAAQH,GAIjB,IAFA,IAAI+B,EAAW,GAENlE,EAAI,EAAGA,EAAImC,EAAMzC,OAAQM,IAE9BkE,EAASjE,KAAKb,EAAW+C,EAAMnC,GAAIV,IAKvC,OACI,qBAAK3G,UAAU,aAAf,SACKuL,KCfEC,MAbf,SAAgB1L,GAEZ,OACI,8BACI,cAAC,IAAD,CAAM2L,GAAI3L,EAAM4L,KAAhB,SACI,wBAAQ1L,UAAWF,EAAM6L,MAAzB,SACK7L,EAAMU,YC6BZoL,MAjCf,WAGI,IAEMC,EAAQ,CACVzL,UAH8B,IAArB+K,OAAOE,aAMpB,OACI,mCAEI,cAAC,EAAD,IAEA,sBAAKQ,MAAOA,EAAZ,UAEI,cAAC,EAAD,CAAQrL,KAAM,YAAakL,KAAM,eAAgBC,MAAO,cAExD,cAAC,EAAD,CAAQnL,KAAM,QAASkL,KAAM,SAAWC,MAAO,cAE/C,cAAC,EAAD,CAAQnL,KAAM,cAAekL,KAAM,eAAgBC,MAAO,eAE1D,cAAC,EAAD,CAAQnL,KAAM,eAAgBkL,KAAM,gBAAiBC,MAAO,eAE5D,cAAC,EAAD,CAAQnL,KAAM,WAAYkL,KAAM,YAAaC,MAAO,wBCVrDG,MAhBf,WAEI,IACIC,EAAQZ,OAAOC,WAAa,EAAMY,IAClC9H,EAAOiH,OAAOE,YAAc,EAAMW,MAEtC,OACQ,wBAAQhM,UAAU,kBAAkB6L,MAAO,CAAC3H,IAAIA,EAAK6H,KAAKA,GAA1D,SAEKtF,EAAW,GAPR,QCmCLwF,MArCf,WAGI,OAEQ,gCACI,cAAC,EAAD,IAEA,wBAAQJ,MAAO,CAACzL,UAAU,QAA1B,SAEI,kCAEI,gCAEI,mCAAK,0CAAL,IAAuB,+CAAvB,IAA8C,0CAA9C,IAAgE,0CAAhE,SAIJ,kCAEI,mCAAK,2CAAL,IAAwB,qCAAxB,IAAqC,uCAArC,IAAoD,sCAApD,OACA,mCAAK,4CAAL,IAAyB,qCAAzB,IAAsC,uCAAtC,IAAqD,sCAArD,OACA,mCAAK,8CAAL,IAA2B,qCAA3B,IAAwC,uCAAxC,IAAuD,sCAAvD,OACA,mCAAK,8CAAL,IAA2B,qCAA3B,IAAwC,uCAAxC,IAAuD,sCAAvD,OACA,mCAAK,kDAAL,IAA+B,sCAA/B,IAA6C,uCAA7C,IAA4D,sCAA5D,mB,+CCMb8L,MA3Bf,SAAepM,GAEX,OACI,qBAAKE,UAAU,SAAf,SAEI,gCACI,+BACI,6BACI,cAAC,IAAD,CAAiBc,KAAK,KAAKH,MAAO,OAAQwL,KAAMC,QAGpD,uCACUtM,EAAM4K,UADhB,IAC2B,uBAD3B,SAEW5K,EAAMuM,KAFjB,IAEuB,uBAFvB,QAGUvM,EAAMwM,OAHhB,IAGwB,uBAHxB,UAIYC,WAAWzM,EAAMoD,OAAOsJ,YAAY,IAJhD,IAIqD,uBACjD,cAAC,EAAD,CAAQhM,KAAM,aAAemL,MAAO,WAAYD,KAAM,UAAY5L,EAAM4K,uB,iBClB5FlB,EAAK,YAAOwB,EAAMxB,OAuBPiD,MArBf,SAAgB3M,GAEZ,IAAIO,EAAQ8K,OAAOC,WACf9K,EAAS6K,OAAOE,YAChB1E,EAAWrG,EAAO,EAElB2I,EAAYc,KAAKC,MAAMD,KAAKE,SAAWT,EAAMzC,QAE3C8E,EAAQ,CACVa,SAAS,WACTxI,IAAI5D,EAAO,EAAIqG,EACfoF,KAAK1L,EAAM,EAAe,YAAXsG,GAGnB,OACI,qBAAKkF,MAAOA,EAAO7L,UAAU,SAA7B,SACKyG,EAAW+C,EAAMP,GAAYtC,MCuC3BgG,E,kDAnDX,aAAc,IAAD,8BAET,gBAEKC,MAAQ,CACTC,WAAU,EACVrE,SAAS,IANJ,E,gEAYO,IAAD,OACfsE,IAAMC,IAAI,sBAAsBxN,MAAK,SAACiJ,GAClCjB,QAAQC,IAAIgB,GACZ,EAAKwE,SAAS,CACVH,WAAU,EACVrE,SAASA,EAASyE,Y,+BAO1B,GAAGC,KAAKN,MAAMC,UAAW,OAAQ,cAAC,EAAD,IAGjC,IAFA,IAAII,EAAOC,KAAKN,MAAMpE,SAClB2E,EAAS,GACJ9F,EAAI,EAAGA,EAAI4F,EAAKlG,OAAQM,IAC7B8F,EAAO7F,KAAK,cAAC,EAAD,CAAOoD,UAAWuC,EAAK5F,GAAGqD,UACtBxH,OAAQ+J,EAAK5F,GAAGnE,OAChBmJ,KAAMY,EAAK5F,GAAGgF,KACdC,OAAQW,EAAK5F,GAAGiF,UAGpC,OACI,gCAEI,cAAC,EAAD,IAEA,qBAAKtM,UAAU,cAAf,SAEKmN,W,GA3CKC,IAAMC,WCgCjBC,OArCf,WAGI,OAEQ,gCACI,cAAC,EAAD,IAEA,wBAAQzB,MAAO,CAACzL,UAAU,QAA1B,SAEI,kCAEI,gCAEI,mCAAK,0CAAL,IAAuB,+CAAvB,IAA8C,0CAA9C,IAAgE,0CAAhE,SAIJ,kCAEI,mCAAK,2CAAL,IAAwB,qCAAxB,IAAqC,uCAArC,IAAoD,sCAApD,OACA,mCAAK,4CAAL,IAAyB,qCAAzB,IAAsC,uCAAtC,IAAqD,sCAArD,OACA,mCAAK,8CAAL,IAA2B,qCAA3B,IAAwC,uCAAxC,IAAuD,sCAAvD,OACA,mCAAK,8CAAL,IAA2B,qCAA3B,IAAwC,uCAAxC,IAAuD,sCAAvD,OACA,mCAAK,kDAAL,IAA+B,sCAA/B,IAA6C,uCAA7C,IAA4D,sCAA5D,mB,SClBbmN,OATf,SAAoBzN,GAEhB,OACI,qBAAKE,UAAU,cAAf,SACKF,EAAM0N,cCwBJC,OArBf,SAAgB3N,GAEZ,IAAIO,EAAQ8K,OAAOC,WACf9K,EAAS6K,OAAOE,YAChB1E,EAAWrG,EAAM,EAEfuL,EAAQ,CACVa,SAAS,WACTxI,IAAI5D,EAAO,EAAIqG,EACfoF,KAAK1L,EAAM,EAAe,YAAXsG,GAGnB,OACI,sBAAKkF,MAAOA,EAAZ,UACMpF,EAAW3G,EAAM0J,MAAO7C,GAC1B,cAAC,GAAD,CAAY6G,WAAY1N,EAAM0N,iBCW3BE,OA/Bf,SAAgB5N,GAEZ,IAAIO,EAAQ8K,OAAOC,WACf9K,EAAS6K,OAAOE,YAChB1E,EAAWrG,EAAM,EAEfuL,EAAQ,CACVa,SAAS,WACTxI,IAAQ5D,EAAS,EAAIqG,EACrBoF,KAAgB,IAAR1L,GAGZ,OAAGP,EAAM6N,SAED,sBAAK9B,MAAOA,EAAZ,UACQ,sBAAM+B,QAAS,kBAAM9N,EAAM+N,OAAO,CAAC,gBAAnC,SAAqDpH,EAAW,KAAME,KACtE,cAAC,GAAD,CAAY6G,WAAY1N,EAAM0N,gBAKtC,sBAAK3B,MAAOA,EAAZ,UACQ,+BAAQpF,EAAW,KAAME,KACzB,cAAC,GAAD,CAAY6G,WAAY1N,EAAM0N,iBC+FnCM,G,kDA5GX,aAAc,IAAD,8BAET,gBAEKlB,MAAQ,CACTmB,MAAM,GALD,E,qDAUJ,IAAD,OAEA1N,EAAQ8K,OAAOC,WACf9K,EAAS6K,OAAOE,YAChB1E,EAAWrG,EAAM,EAEjB0N,EAAiB,IAAR3N,EAET6D,EAAMgJ,KAAKpN,MAAMoE,IAAM5D,EAASqG,EAEhCsH,EAAqB5N,EAAkB,EAAT2N,EAE9BE,EAA8BD,GAAiC,IAAXtH,GAEpDkF,EAAQ,CACRa,SAAU,WACVxI,IAAKA,EACL6H,KAAMiC,EACNG,MAAO,SACP9N,MAAO4N,EACP3N,OAAQqG,GAGRyH,EAAW,CACX9N,OAAoB,IAAZqG,GAKRoF,EAAO,KACPsC,EAAQ,KA2BZ,OAzBGnB,KAAKN,MAAMmB,MAAQ,GAAKb,KAAKN,MAAMmB,MAAQb,KAAKpN,MAAM0J,MAAMzC,OAASmH,GAEpEnC,EAAQ,sBAAM6B,QAAS,WAAS,EAAKZ,SAAS,CAACe,MAAO,EAAKnB,MAAMmB,MAAQ,KAAjE,SACI,cAAC,IAAD,CAAiBlC,MAAOuC,EAAUzN,MAAO,OAAQwL,KAAMmC,QAGnED,EAAQ,sBAAMT,QAAS,WAAW,EAAKhB,MAAMmB,MAAQ,EAAKjO,MAAM0J,MAAMzC,OAASmH,GAA6B,EAAKlB,SAAS,CAACe,MAAO,EAAKnB,MAAMmB,MAAQ,KAA7I,SACI,cAAC,IAAD,CAAiBlC,MAAOuC,EAAUzN,MAAO,OAAQwL,KAAMoC,SAG9DrB,KAAKN,MAAMmB,MAAQ,EAExBhC,EAAQ,sBAAMF,MAAO,CAAC3H,IAAI,KAAM0J,QAAS,WAAS,EAAKZ,SAAS,CAACe,MAAO,EAAKnB,MAAMmB,MAAQ,KAAnF,SACI,cAAC,IAAD,CAAiBlC,MAAOuC,EAAUzN,MAAO,OAAQwL,KAAMmC,QAG9DpB,KAAKN,MAAMmB,MAAQb,KAAKpN,MAAM0J,MAAMzC,OAASmH,IAElDG,EAAQ,sBAAMxC,MAAO,CAAC3H,IAAI,KAAM0J,QAAS,WAAW,EAAKhB,MAAMmB,MAAQ,EAAKjO,MAAM0J,MAAMzC,OAASmH,GAA6B,EAAKlB,SAAS,CAACe,MAAO,EAAKnB,MAAMmB,MAAQ,KAA/J,SACI,cAAC,IAAD,CAAiBlC,MAAOuC,EAAUzN,MAAO,OAAQwL,KAAMoC,SAOnE,sBAAK1C,MAAOA,EAAO7L,UAAU,SAA7B,UAEK+L,EACAmB,KAAKsB,aAAatB,KAAKpN,MAAM0J,MAAMgB,OAAQ7D,EAAUuG,KAAKpN,MAAM+N,OAAQX,KAAKN,MAAMmB,OACnFM,EAED,cAAC,GAAD,CAAYb,WAAYN,KAAKpN,MAAM0J,MAAMzC,c,mCAOxCyC,EAAO7C,EAAUkH,GAS1B,IAT4C,IAAD,OAATE,EAAS,uDAAH,EAEpCU,EAAY,GAEZpO,EAAQ8K,OAAOC,WAEf4C,EAAiB,IAAR3N,EACT4N,EAAqB5N,EAAkB,EAAT2N,EAPS,WASnC3G,GAEJ,GAAqB,KAAjBA,EAAI,EAAI0G,GAAepH,GAAYsH,EAAoB,cAExD,EAAKnO,MAAM6N,SACVc,EAAUnH,KAAK,uBAAMsG,QAAW,kBAAMC,EAAO,CAACrE,EAAMnC,MAArC,cAA8CZ,EAAW+C,EAAMnC,GAAIV,GAAnE,QAEnB8H,EAAUnH,KAAK,qCAASb,EAAW+C,EAAMnC,GAAIV,GAA9B,SAPXU,EAAI0G,EAAO1G,EAAImC,EAAMzC,OAAQM,IAAI,CAAC,IAAD,IAAjCA,GAAiC,eAEsB,MAQ/D,OAAOoH,M,GAtGMrB,IAAMC,WCuBZqB,G,uKA1BF,IAAD,OAEArO,EAAQ8K,OAAOC,WACf9K,EAAS6K,OAAOE,YAEhBH,EAAO7K,EAAQC,EAIfqG,EAFOoD,KAAKuB,KAAKJ,EAAK,MAI1B,OACI,wBAAQlL,UAAU,WAAW6L,MAAO,CAACvL,OAAgB,GAATA,GAA5C,SACI,gCACI,uBAAMsN,QAAW,kBAAM,EAAK9N,MAAMmG,KAAK,CAAC,aAAxC,cAAuDQ,EAAW,QAASE,GAAU,GAArF,OACA,uBAAMiH,QAAW,kBAAM,EAAK9N,MAAMmG,KAAK,CAAC,iBAAxC,cAA2DQ,EAAW,YAAaE,GAAnF,SACA,uBAAMiH,QAAW,kBAAM,EAAK9N,MAAMmG,KAAK,CAAC,eAAxC,cAAyDQ,EAAW,UAAWE,GAA/E,WACA,uBAAMiH,QAAW,kBAAM,EAAK9N,MAAMmG,KAAK,CAAC,eAAxC,cAAyDQ,EAAW,UAAWE,GAA/E,WACA,uBAAMiH,QAAW,kBAAM,EAAK9N,MAAMmG,KAAK,CAAC,cAAxC,cAAwDQ,EAAW,SAAUE,GAA7E,qB,GArBDyG,IAAMC,W,UCALD,IAAMC,U,OCctBsB,GAAkB,CAAC,GACnBC,GAAc,CAAC,GAEfjH,GAAQ,CAAC,OAAS,CAAC,QAAS,EAAM,KAAO,EAAG,QAAS,GAC7C,QAAU,CAAC,QAAS,EAAM,KAAO,EAAG,QAAS,GAC7C,UAAY,CAAC,QAAS,EAAM,KAAO,EAAG,QAAS,GAC/C,WAAa,CAAC,QAAS,EAAM,KAAO,EAAG,QAAS,GAChD,cAAgB,CAAC,QAAS,EAAM,KAAO,GAAI,QAAS,IAgUjDkH,G,kDA1TX,aAAc,IAAD,8BAET,gBAEKjC,MAAQ,CACTC,WAAU,EACViC,kBAAiB,EACjBC,UAAS,EACTtG,UAAU,CAAC,UAAY,CACP,WAAa,CAAC,IACd,KAAO,IAEX,UAAY,CACR,WAAa,CAAC,IACd,KAAO,IAEf,OAAS,CAAC,IACV,WAAa,GACbd,MAAOA,IAEfqH,mBAAqB,EACrBC,mBAAqB,EACrBC,QAAS,EACTC,gBAAkB,GAClBC,gBAAkB,GAClBC,WAAa,cAKjB,EAAKC,SAAW,EAAKA,SAASC,KAAd,iBAChB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,iBAEd,EAAK7G,OAAS,IAAI+G,gBAElB,EAAK/G,OAAOgH,GAAG,QAAQ,WAEnB,EAAK1C,SAAS,CAAEkC,QAAS,EAAKtC,MAAMsC,YAIxC,EAAKxG,OAAOgH,GAAG,YAAY,WAEvB,EAAK1C,SAAS,CAAE8B,kBAAmB,OA3C9B,E,gEAiDO,IAAD,OAEXa,EAAMxE,OAAOyE,SAASC,KAEtBjJ,EAAQ+I,EAAI9I,QAAQ,MAAQ,EAC5BiJ,EAAOH,EAAI7I,MAAMF,EAAO+I,EAAI5I,QAEhC+F,IAAMiD,KAAK,YAAa,CAAC,UAAYD,EAAM,KAAO,QAASnI,MAAMA,KAAQpI,MAAK,SAACyQ,GAE3EzI,QAAQC,IAAIwI,GAEZ,EAAKhD,SAAS,CAACH,WAAU,EAAOiC,kBAAiB,EAAOrG,UAAUuH,EAAI/C,KAAKxE,YAExEuH,EAAI/C,KAAKgD,MAAMlJ,QAGdwB,EAAkByH,EAAI/C,KAAKgD,MAAO,EAAKrD,MAAMnE,UAAW,EAAKC,OAAQ,EAAKkE,MAAMwC,oBAIrFc,OAAM,SAAAC,GAEL5I,QAAQC,IAAI2I,GAEZC,MAAMD,Q,4BAMRE,M,6BAOC3J,GAAM,IAAD,OAEJwC,EAAiBC,EAAc+D,KAAKN,MAAMnE,UAAUO,UAAUD,WAAYmE,KAAKN,MAAMnE,UAAUX,WAAWoF,KAAKN,MAAMnE,UAAUX,WAAWf,OAAS,IAEvJmG,KAAKN,MAAMuC,gBAAgB7H,KAAK8B,EAAY8D,KAAKN,MAAMnE,UAAWS,GAAgB,IAElFxC,EAAKY,KAAK2B,EAAUC,EAAgBxC,EAAK,KAEzCwG,KAAKF,SAAS,CAAC+B,UAAW,EAAOlC,WAAY,EAAMiC,kBAAmB,IAEtE,IAAIwB,EAAU,CAAC,UAAYpD,KAAKN,MAAMnE,UAAW,WAAa/B,EAAMiB,MAAMA,IAEtEf,EAAQsG,KAAKN,MAAMnE,UAAUO,UAAUD,WAAWlC,QAAQ,WAC9DqG,KAAKN,MAAMnE,UAAUO,UAAUD,WAAWhB,OAAOnB,EAAO,GACxDsG,KAAKN,MAAMnE,UAAUX,WAAWR,KAAKZ,EAAK,IAE1CoG,IAAMiD,KAAK,YAAaO,GAAS/Q,MAAK,SAACyQ,GAKnCzH,EAHeyH,EAAI/C,KAGS,EAAKL,MAAMnE,UAAW,EAAKC,OAAQ,EAAKkE,MAAMwC,iBAG1E,EAAKpC,SAAS,CAAC8B,kBAAmB,EAAOjC,WAAY,OAEtDqD,OAAM,SAACC,GAGN,EAAKvD,MAAMnE,UAAUX,WAAWL,MAGhC,EAAKmF,MAAMnE,UAAUO,UAAUD,WAAWzB,KAAK,WAG/C,EAAK0F,SAAS,CAACH,WAAY,EAAOiC,kBAAmB,EAAOO,WAAa,eAEzEe,MAAMD,Q,+BAMLzJ,GAAO,IAAD,OAEPwC,EAAiBC,EAAc+D,KAAKN,MAAMnE,UAAUO,UAAUD,WAAYmE,KAAKN,MAAMnE,UAAUX,WAAWoF,KAAKN,MAAMnE,UAAUX,WAAWf,OAAS,IAgBvJ,GAdAL,EAAKY,KAAK2B,EAAUC,EAAgBxC,EAAK,KAEzCwG,KAAKN,MAAMuC,gBAAgB7H,KAAK8B,EAAY8D,KAAKN,MAAMnE,UAAWS,GAAgB,IAElFgE,KAAKF,SAAS,CAAEH,WAAY,IAE5BtF,QAAQC,IAAI,WAEZD,QAAQC,IAAI0F,KAAKN,MAAMuC,iBAEvB5H,QAAQC,IAAI,WAEZD,QAAQC,IAAI0F,KAAKN,MAAMwC,iBAER,eAAZ1I,EAAK,GAAoB,CAExBwG,KAAKF,SAAS,CAAC8B,kBAAmB,IAElC7H,EAASiG,KAAKN,MAAMnE,UAAUO,UAAUD,WAAYmE,KAAKN,MAAMnE,UAAUtB,QAEzE+F,KAAKF,SAAS,CAAC8B,kBAAiB,EAAOjC,WAAU,IAEjD,IAAIyD,EAAU,CAAC,UAAYpD,KAAKN,MAAMnE,UAAW,WAAa,aAAcd,MAAMA,IAElFmF,IAAMiD,KAAK,YAAaO,GAAS/Q,MAAK,SAACyQ,GAEnC,IAAIxH,EAAWwH,EAAI/C,KAGnB,EAAKD,SAAS,CAACH,WAAY,EAAOiC,kBAAmB,IAGrDvG,EAAkBC,EAAU,EAAKoE,MAAMnE,UAAW,EAAKC,OAAQ,EAAKkE,MAAMwC,oBAE3Ec,OAAM,SAACC,GAGN,EAAKvD,MAAMnE,UAAUtB,OAAOG,KAAK,EAAKsF,MAAMnE,UAAUO,UAAUD,WAAW,EAAK6D,MAAMnE,UAAUO,UAAUD,WAAWhC,OAAS,IAG9H,EAAK6F,MAAMnE,UAAUO,UAAUD,WAAWtB,MAG1C,EAAKmF,MAAMuC,gBAAgB1H,MAG3B,EAAKuF,SAAS,CAACH,WAAY,EAAOiC,kBAAmB,EAAOO,WAAa,eAEzEe,MAAMD,UAIT,CAGD,IAAInI,EhBjHT,SAAiBtB,EAAM6C,GAAuB,IAAftD,EAAc,wDAE5CW,EAAQF,EAAKG,QAAQ,KAAO,EAC5B7E,EAAS+D,SAASW,EAAKI,MAAMF,EAAOF,EAAKK,SACzCC,EAAQN,EAAKI,MAAM,EAAGF,GAEtByD,EAAWd,EAAO1C,QAAQ,KAAO,EACjCyD,EAAYvE,SAASwD,EAAOzC,MAAMuD,EAAUd,EAAOxC,SACnDwD,EAAWhB,EAAOzC,MAAM,EAAGuD,GAE/B,OAAc,KAAXrI,EAAsB,EAAC,GAAM,KAE7BA,IAAWsI,GAAatD,IAAUuD,IAAYtE,IAAa,EAAC,GAAM,GgBqG9CsK,CAAQ7J,EAAK,GAAIwG,KAAKN,MAAMnE,UAAUX,WAAWoF,KAAKN,MAAMnE,UAAUX,WAAWf,OAAS,IAIzG,GAFAmG,KAAKF,SAAS,CAAC+B,SAAW/G,EAAS,KAEhCA,EAAS,GAER,GAAGA,EAAS,GAERkF,KAAKF,SAAS,CAAC+B,UAAW,EAAMlC,WAAY,IAG5CK,KAAKN,MAAMuC,gBAAgB1H,UAE1B,CAED,IAAI+I,EAAW9I,EAAQhB,EAAMiB,GAAOuF,KAAKN,MAAMnE,UAAUO,UAAUD,WAAYmE,KAAKN,MAAMnE,UAAUK,UAAUC,WAAYmE,KAAKN,MAAMnE,UAAUX,WAAYoF,KAAKN,MAAMnE,UAAUtB,QAE5KmJ,EAAU,CAAC,UAAYpD,KAAKN,MAAMnE,UAAW,WAAa/B,EAAK,GAAIiB,MAAMA,IAE1E6I,EAEC1D,IAAMiD,KAAK,YAAaO,GAAS/Q,MAAK,SAACyQ,GAEnC,IAAIxH,EAAWwH,EAAI/C,KAGnB,EAAKD,SAAS,CAACH,WAAY,EAAOiC,kBAAmB,IAGrDvG,EAAkBC,EAAU,EAAKoE,MAAMnE,UAAW,EAAKC,OAAQ,EAAKkE,MAAMwC,oBAE3Ec,OAAM,SAACC,GAGN,EAAKvD,MAAMnE,UAAUO,UAAUD,WAAWzB,KAAKZ,EAAK,IAGpD,EAAKkG,MAAMnE,UAAUX,WAAWL,MAGhC,EAAKmF,MAAMuC,gBAAgB1H,MAG3B,EAAKuF,SAAS,CAACH,WAAY,EAAOiC,kBAAmB,EAAOO,WAAa,eAEzEe,MAAMD,MAMVjD,KAAKF,SAAS,CAACH,WAAU,SAQjCK,KAAKF,SAAS,CAACH,WAAY,IAE3BuD,MAAM,mB,+BAWd9G,EAAe4D,KAAKN,MAAMnE,WAE1B,IAAInI,EAAS6K,OAAOE,YAEpB,GAAG6B,KAAKN,MAAMC,UAAW,OAAO,yBAAQ4D,GAAG,aAAczQ,UAAU,aAAnC,UAAgD,cAAC,EAAD,IAAhD,OAEhC,IhBNyByI,EAAWX,EAAYX,EgBM5CgD,EAAa+C,KAAKN,MAAMnE,UAAUO,UAAUD,WAE5C2H,EAAcxD,KAAKN,MAAMnE,UAAUK,UAAUC,WAE7CQ,EAAS2D,KAAKN,MAAMnE,UAAUX,WAAWoF,KAAKN,MAAMnE,UAAUX,WAAWf,OAAS,GAElF4J,EAAc,KAuBlB,OhBnCyBlI,EgBcWyE,KAAKN,MAAMnE,UhBdXX,EgBcsB6G,GhBdVxH,EgBc2ByH,IhBX5EnG,EAAUtB,OAAOJ,SAAWI,EAAOJ,QASnC0B,EAAUX,WAAWf,SAAWe,EAAWf,UAP1CI,EAASsB,EAAUtB,OACnBW,EAAaW,EAAUX,YAEhB,MgBUH6I,EAAc,gCACM,cAAC,GAAD,CAAQzM,IAAK,GAAK0M,MAAO,IAAKpH,MAAOkH,EAAa7C,OAAQX,KAAKoC,SAAa3B,UAAU,EAAO/G,MAAOsG,KAAKN,MAAMqC,qBAC/G,cAAC,GAAD,CAAQ/K,IAAK,GAAK0M,MAAO,EAAGpH,MAAOW,EAAY0D,OAAQX,KAAKoC,SAAU3B,UAAWT,KAAKN,MAAMkC,iBAAkBlI,MAAOsG,KAAKN,MAAMoC,qBAChI,cAAC,GAAD,CAAQhP,UAAU,SAASwJ,MAAOD,EAAQiE,WAAYN,KAAKN,MAAMnE,UAAUX,WAAWf,SACtF,cAAC,GAAD,CAAQ8G,OAAQX,KAAKoC,SAAU3B,UAAWT,KAAKN,MAAMkC,iBAAkBtB,WAAYN,KAAKN,MAAMnE,UAAUtB,OAAOJ,aAKpImG,KAAKN,MAAMmC,WACV4B,EAAc,cAAC,GAAD,CAAOrQ,OAAUA,EAAQ2F,KAAMiH,KAAKsC,UAGtDjI,QAAQC,IAAI,UAEZD,QAAQC,IAAI0F,KAAKN,MAAMnE,WAGnB,8BAII,wBAAQgI,GAAG,aAAczQ,UAAU,aAAnC,SAEK2Q,U,GAjTEvD,IAAMC,WCGdwD,OAxCf,SAAmB/Q,GAEf,IAAIgR,EAAahR,EAAMgR,WAEvB,MAAkB,SAAfhR,EAAMiR,KAED,sBAAKpF,MAAM,MAAX,UAEI,sBAAKA,MAAM,SAAX,cAAqB,uBAAOqF,IAAKF,EAAZ,SAAyBhR,EAAMmR,QAApD,OAEA,qBAAKtF,MAAM,SAAX,SAEI,uBAAOoF,KAAK,OAAOG,UAAQ,EAACT,GAAIK,EAAYnG,KAAMmG,EAAYK,SAAUrR,EAAMqR,SAAUC,YAAY,gBAQhH,sBAAKzF,MAAM,MAAX,UAEI,qBAAKA,MAAM,SAAX,SAAoB,uBAAOqF,IAAKF,EAAZ,SAAyBhR,EAAMmR,UAEnD,qBAAKtF,MAAM,SAAX,SAEI,yBAAQ8E,GAAIK,EAAYnG,KAAMmG,EAAYK,SAAUrR,EAAMqR,SAA1D,UAEI,wBAAQE,OAAO,EAAf,gBACA,wBAAQA,OAAO,EAAf,0B,MC2IJC,OAvJf,WAEG,IAAIC,EAAU,CACV7G,UAAW,GACXvB,eAAe,EACfJ,YAAY,EACZyI,gBAAgB,EAChB5G,YAAY,EACZ9C,YAAY,EACZ2J,gBAAgB,EAChB5G,mBAAmB,EACnBC,uBAAuB,EACvBnD,OAAO,GAGX,SAAS+J,EAAYC,GAEjB,IAAMhH,EAAOgH,EAAEC,OAAOjH,KAChB0G,EAAQM,EAAEC,OAAOP,MAEvBE,EAAU,CACN7G,UAAoB,cAATC,EAAuB0G,EAAQE,EAAS7G,UACnDvB,cAAwB,kBAATwB,EAAqC,SAAV0G,EAAkCE,EAASpI,cACrFJ,WAAqB,eAAT4B,EAAkC,SAAV0G,EAAkCE,EAASxI,WAC/EyI,eAAyB,mBAAT7G,EAAsC,SAAV0G,EAAkCE,EAASC,eACvF5G,WAAqB,eAATD,EAAkC,SAAV0G,EAAkCE,EAAS3G,WAC/E9C,WAAqB,eAAT6C,EAAkC,SAAV0G,EAAkCE,EAASzJ,WAC/E2J,eAAyB,mBAAT9G,EAAsC,SAAV0G,EAAkCE,EAASE,eACvF5G,kBAA4B,sBAATF,EAAyC,SAAV0G,EAAkCE,EAAS1G,kBAC7FC,sBAAgC,0BAATH,EAA6C,SAAV0G,EAAkCE,EAASzG,sBACrGnD,MAAgB,UAATgD,EAA6B,SAAV0G,EAAkCE,EAAS5J,OAIzEJ,QAAQC,IAAI+J,GAuCf,OACI,mCAEG,cAAC,EAAD,IAEA,qBAAK5F,MAAM,YAAX,SAEI,uBAAMkG,OAAO,OAAOhE,OAAO,oBAA3B,UAEI,qBAAKlC,MAAM,MAAX,SACI,gDAGJ,cAAC,GAAD,CAAWsF,MAAM,aAAaF,KAAM,OAAQD,WAAY,YAAaK,SAAUO,IAI/E,sBAAK/F,MAAM,MAAX,UAEI,gDAFJ,IAE4B,uBAExB,8GAOJ,sBAAKA,MAAM,MAAX,UAEI,qBAAKA,MAAM,SAAX,SAEI,uBAAOqF,IAAI,gBAAX,8BAIJ,qBAAKrF,MAAM,SAAX,SAEI,yBAAQ8E,GAAG,gBAAgB9F,KAAK,gBAAgBmH,UAAQ,EAAxD,UAEI,wBAAQT,OAAO,EAAf,iBACA,wBAAQA,OAAO,EAAf,wBAUZ,cAAC,GAAD,CAAWJ,MAAM,gBAAgBF,KAAM,SAAUD,WAAY,aAAcK,SAAUO,IAErF,cAAC,GAAD,CAAWT,MAAM,mBAAmBF,KAAM,SAAUD,WAAY,iBAAkBK,SAAUO,IAE5F,cAAC,GAAD,CAAWT,MAAM,eAAeF,KAAM,SAAUD,WAAY,aAAcK,SAAUO,IAEpF,cAAC,GAAD,CAAWT,MAAM,cAAcF,KAAM,SAAUD,WAAY,aAAcK,SAAUO,IAEnF,cAAC,GAAD,CAAWT,MAAM,kBAAkBF,KAAM,SAAUD,WAAY,iBAAkBK,SAAUO,IAE3F,cAAC,GAAD,CAAWT,MAAM,4BAA4BF,KAAM,SAAUD,WAAY,oBAAqBK,SAAUO,IAExG,cAAC,GAAD,CAAWT,MAAM,gCAAgCF,KAAM,SAAUD,WAAY,wBAAyBK,SAAUO,IAEhH,cAAC,GAAD,CAAWT,MAAM,QAAQF,KAAM,SAAUD,WAAY,QAASK,SAAUO,IAExE,sBAAK/F,MAAM,MAAME,MAAO,CAACzL,UAAU,IAAnC,gBAA2C,uBAAO2Q,KAAK,SAASM,MAAM,SAASzD,QArG/F,SAAgB+D,GAEZA,EAAEI,iBAEFjF,IAAMiD,KAAK,oBAAqB,CAACiC,MAAOT,IAAWhS,MAAK,SAACyQ,GAGrDI,MAAMJ,EAAI/C,KAAKgF,KAEZjC,EAAI/C,KAAKiF,cA4FJ,gBC/HdC,GAAQ,kBAAM,cAAC,EAAD,KAUpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAGI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWN,KACxC,cAAC,IAAD,CAAOI,KAAK,QAAQC,OAAO,EAAMC,UAAWN,KAC5C,cAAC,IAAD,CAAOI,KAAK,SAASC,OAAO,EAAMC,UAhB3B,kBAAM,cAAC,EAAD,OAiBb,cAAC,IAAD,CAAOF,KAAK,eAAeC,OAAO,EAAMC,UAhB5B,kBAAM,cAAC,EAAD,OAiBlB,cAAC,IAAD,CAAOF,KAAK,YAAYC,OAAO,EAAMC,UAhB5B,kBAAM,cAAC,GAAD,OAiBf,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,OAAO,EAAOC,UAf9B,kBAAM,cAAC,GAAD,OAgBlB,cAAC,IAAD,CAAOF,KAAK,QAAQC,OAAO,EAAOC,UAjB7B,kBAAM,cAAC,GAAD,YAsBjBC,SAASC,eAAe,SAM1BvT,M","file":"static/js/main.ea979256.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Square(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\" className=\"center\">\r\n                <rect x={props.marginLeft} y={props.marginTop} width={props.width} height={props.height}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Square","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Text(props) {\r\n\r\n    let text = props.text\r\n    let fontSize = props.fontSize\r\n    let x = props.x\r\n    let y = props.y\r\n    let z = props.z\r\n    let color = props.color\r\n\r\n    return(\r\n        <svg >\r\n            <g fill={color} transform={\"rotate(\"+ x +\" \" + y + \" \" + z + \")\"}>\r\n                <text color={color}\r\n                    x={props.marginLeft} \r\n                    y={props.marginTop}\r\n                    fontSize={fontSize}>\r\n                    {text}\r\n                </text>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Text","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Square from \"../Shapes/Square\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction SquareCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = marginLeft * 0.8\r\n    let firstCHeight = marginLeft * 0.8\r\n    let firstMarginLeft = marginLeft * 0.2\r\n    let firstMarginTop = marginLeft * 1.6\r\n\r\n    let lastCWidth = marginLeft * 0.8\r\n    let lastCHeight = marginLeft * 0.8\r\n    let lastMarginLeft = cWidth + marginLeft\r\n    let lastMarginTop = height - marginLeft * 2.4\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Square \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Square \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n\r\n            <Square \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default SquareCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Circle(props) {\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <circle cx={props.marginLeft} cy={props.marginTop} r={props.radius} />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Circle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Circle from \"../Shapes/Circle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CircleCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n    let marginLeft = width / 2\r\n    let marginTop = height / 2\r\n    let radius = width / 3\r\n\r\n    let firstMarginLeft = width * 0.2 / 2\r\n    let firstMarginTop = height * 0.4 / 2\r\n    let firstRadius = width * 0.2 / 3\r\n\r\n    let lastMarginLeft = width * 1.8 / 2\r\n    let lastMarginTop = height * 1.6 / 2\r\n    let lastRadius = width * 0.2 / 3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n \r\n    let fontSize = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Circle \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                radius={firstRadius} />\r\n\r\n            <Circle \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} \r\n                radius={radius} />\r\n\r\n            <Circle \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                radius={lastRadius} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CircleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Cross(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\">\r\n                <rect x={props.marginLeft + props.width / 4} y={props.marginTop} width={props.width / 2} height={props.height}/>\r\n                <rect x={props.marginLeft} y={props.marginTop + props.height / 4} width={props.width} height={props.height / 2}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Cross","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Cross from \"../Shapes/Cross\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CrossCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = width * 0.7 * 0.2\r\n    let firstCHeight = height * 0.4 * 0.2\r\n    let firstMarginLeft = (width - cWidth) * 0.2 / 2\r\n    let firstMarginTop = (height - cHeight) * 0.5 / 2\r\n\r\n    let lastCWidth = width * 0.7 * 0.2\r\n    let lastCHeight = height * 0.4 * 0.2\r\n    let lastMarginLeft = (width - cWidth) * 5.5 / 2\r\n    let lastMarginTop = (height - cHeight) * 2.5 / 2\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />   \r\n\r\n            <Cross \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Cross \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n            \r\n            <Cross \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>   \r\n            \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CrossCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Triangle(props) {\r\n\r\n    let XA = props.XA\r\n    let YA = props.YA\r\n    let XB = props.XB\r\n    let YB = props.YB\r\n    let XC = props.XC\r\n    let YC = props.YC\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points= {XA + \",\" + YA + \",\" + XB + \",\" + YB + \",\" + XC + \",\" + YC}  />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Triangle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Triangle from \"../Shapes/Triangle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction TriangleCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big triangle\r\n    let XA = width * 0.05\r\n    let YA = height * 0.7\r\n    let XB = width * 0.5\r\n    let YB = height * 0.2\r\n    let XC = width * 0.95\r\n    let YC = height * 0.7\r\n\r\n    //parameters for the top small triangle\r\n    let firstXA = width * 0.03\r\n    let firstYA = height * 0.21\r\n    let firstXB = width * 0.1\r\n    let firstYB = height * 0.12\r\n    let firstXC = width * 0.17\r\n    let firstYC = height * 0.21\r\n\r\n    //parameters for the bottom small triangle\r\n    let lastXA = width * 0.825\r\n    let lastYA = height * 0.756\r\n    let lastXB = width * 0.9\r\n    let lastYB = height * 0.84\r\n    let lastXC = width * 0.9775\r\n    let lastYC = height * 0.756\r\n\r\n    //parameters for the top small triangle number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the top small triangle number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //fomt size calculation\r\n    let fontSizeNumber = size / 5\r\n\r\n    //number rotate for bottom number\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Triangle \r\n                XA={firstXA} \r\n                YA={firstYA} \r\n                XB={firstXB} \r\n                YB={firstYB} \r\n                XC={firstXC} \r\n                YC={firstYC} />\r\n\r\n            <Triangle \r\n                XA={XA} \r\n                YA={YA} \r\n                XB={XB} \r\n                YB={YB} \r\n                XC={XC} \r\n                YC={YC} />\r\n\r\n            <Triangle \r\n                XA={lastXA} \r\n                YA={lastYA} \r\n                XB={lastXB} \r\n                YB={lastYB} \r\n                XC={lastXC} \r\n                YC={lastYC} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default TriangleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Star(props) {\r\n\r\n    let XCenter = props.XCenter\r\n    let top = props.top\r\n    let XTop = props.XTop\r\n    let XTopLeft = props.XTopLeft\r\n    let XTopRight = props.XTopRight\r\n    let bottom = props.bottom\r\n    let XBottomLeft = props.XBottomLeft\r\n    let XBottomRight = props.XBottomRight\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points = {XCenter + \",\" + \r\n                    top + \",\"  + XBottomLeft + \",\" \r\n                    + bottom + \",\" + XTopRight + \",\"\r\n                    + XTop + \",\" + XTopLeft + \",\" \r\n                    + XTop + \",\" + XBottomRight \r\n                    + \",\" + bottom} />\r\n            </g>\r\n        </svg>\r\n        ) \r\n}\r\n\r\nexport default Star","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Star from \"../Shapes/Star\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\n\r\nfunction StarCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big center star\r\n    let XCenter = width / 2\r\n    let top = height * 0.2\r\n    let XTop = height * 0.42\r\n    let XTopLeft = width * 0.1\r\n    let XTopRight = width * 0.9\r\n    let bottom = height * 0.75\r\n    let XBottomLeft = width * 0.2\r\n    let XBottomRight = width * 0.8\r\n\r\n    //parameters for the top left star\r\n    let firstXCenter = width * 0.24\r\n    let firstTop = height * 0.12\r\n    let firstXTop = height * 0.195\r\n    let firstXTopLeft = width * 0.08\r\n    let firstXTopRight = width * 0.382\r\n    let firstBottom = height * 0.32\r\n    let firstXBottomLeft = width * 0.12\r\n    let firstXBottomRight = width * 0.34\r\n\r\n    //parameters for the bottom right star\r\n    let lastXCenter = width  * 0.8\r\n    let lastTop = height * 0.9\r\n    let lastXTop = height * 0.83\r\n    let lastXTopLeft = width * 0.94\r\n    let lastXTopRight = width * 0.66\r\n    let lastBottom = height * 0.72\r\n    let lastXBottomLeft = width * 0.9\r\n    let lastXBottomRight = width * 0.7\r\n\r\n    //parameters for the top right number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the bottom left number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //parameters for the top right number in star\r\n    let topStarNumberMarginLeft = width * 0.21\r\n    let topStarNumberMarginTop = height * 0.25\r\n\r\n    //parameters for the bottom left number in star\r\n    let bottomStarNumberMarginLeft = width * 0.17\r\n    let bottomStarNumberMarginTop = height * 0.295\r\n\r\n    if(props.number > 4){\r\n        //parameters for the top right number in star\r\n        topStarNumberMarginLeft = width * 0.17\r\n        topStarNumberMarginTop = height * 0.25\r\n\r\n        //parameters for the bottom left number in star\r\n        bottomStarNumberMarginLeft = width * 0.14\r\n        bottomStarNumberMarginTop = height * 0.295\r\n    }\r\n    \r\n    //fonts\r\n    let fontSizeNumber = size / 5\r\n    let fontSizeNumberStar = size / 10\r\n\r\n    //rotation\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8 \r\n\r\n    //card number\r\n    let number = parseInt(props.number)\r\n    let number_ = number * 2\r\n    if(props.need){ \r\n        number = \"\"\r\n        number_ = \"\"\r\n    }\r\n        \r\n \r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Star \r\n                XCenter={firstXCenter} \r\n                top={firstTop} \r\n                XTop={firstXTop}\r\n                XTopLeft={firstXTopLeft}\r\n                XTopRight={firstXTopRight}\r\n                bottom={firstBottom}\r\n                XBottomLeft={firstXBottomLeft} \r\n                XBottomRight={firstXBottomRight}\r\n\r\n                />\r\n\r\n            <Text\r\n                x={0} y={0} z={0}\r\n                marginLeft={topStarNumberMarginLeft} \r\n                marginTop={topStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"} />\r\n        \r\n            <Star \r\n                XCenter={XCenter} \r\n                top={top} \r\n                XTop={XTop}\r\n                XTopLeft={XTopLeft}\r\n                XTopRight={XTopRight}\r\n                bottom={bottom}\r\n                XBottomLeft={XBottomLeft} \r\n                XBottomRight={XBottomRight}\r\n\r\n                />\r\n\r\n            <Star \r\n                XCenter={lastXCenter} \r\n                top={lastTop} \r\n                XTop={lastXTop}\r\n                XTopLeft={lastXTopLeft}\r\n                XTopRight={lastXTopRight}\r\n                bottom={lastBottom}\r\n                XBottomLeft={lastXBottomLeft} \r\n                XBottomRight={lastXBottomRight}\r\n\r\n                />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomStarNumberMarginLeft} \r\n                marginTop={bottomStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"}/>\r\n\r\n       \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default StarCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction WhotCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let firstMarginLeft = width * 0.1\r\n    let firstMarginTop = height * 0.25\r\n \r\n    let lastMarginLeft = width * 0.1 \r\n    let lastMarginTop = height * 0.3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSize = size / 4\r\n    let fontSizeSymbol = size / 6\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"brown\"} />\r\n\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default WhotCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction CardCover(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let fontSize = size / 4\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card card-cover\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CardCover","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport SquareCard from \"../Componets/Cards/SquareCard\";\r\nimport CircleCard from \"../Componets/Cards/CircleCard\";\r\nimport CrossCard from \"../Componets/Cards/CrossCard\";\r\nimport TriangleCard from \"../Componets/Cards/TriangleCard\";\r\nimport StarCard from \"../Componets/Cards/StarCard\";\r\nimport WhotCard from \"../Componets/Cards/WhotCard\";\r\nimport CardCover from \"../Componets/Cards/CardCover\";\r\n\r\n\r\nfunction chooseCard(card, cardSize, need=false){\r\n\r\n    \r\n    let index = card.indexOf(\":\")\r\n    let number = card.slice(index + 1, card.length)\r\n    let shape = card.slice(0, index)\r\n\r\n    switch(shape){\r\n\r\n        case \"star\":\r\n            return(<StarCard size={cardSize} number={number} need={need} />)\r\n        case \"circle\":\r\n            return(<CircleCard size={cardSize} number={number} />)\r\n        case \"square\":\r\n            return(<SquareCard size={cardSize} number={number} />)\r\n        case \"cross\":\r\n            return(<CrossCard size={cardSize} number={number} />)\r\n        case \"triangle\":\r\n            return(<TriangleCard size={cardSize} number={number} />)\r\n        case \"whot\":\r\n            return(<WhotCard size={cardSize} number={number} />)\r\n        default:\r\n            return(<CardCover size={cardSize}  />)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default chooseCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nvar MOVE_WAITING_PERIOD = 1500\r\n\r\n\r\n\r\nexport function goMarket(player,  market, times = 1){\r\n\r\n    //+---------------------------------------------------------------------------+\r\n    //|      This function adds card to player and remove that same card from     |  \r\n    //|      market for n number of times                                         |\r\n    //+---------------------------------------------------------------------------+\r\n\r\n    for(let i = 0; i < times; i ++){\r\n\r\n        if(market.length > 0){\r\n\r\n            player.push(market[market.length - 1])\r\n\r\n            console.log(market[market.length - 1])\r\n\r\n            market.pop()\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function referee(card, rules, playerCardAtHand, opponentsCardAtHand, cardPlayed, market){\r\n\r\n \r\n    let index = card[0].indexOf(\":\") + 1\r\n    let number = parseInt(card[0].slice(index, card[0].length))\r\n\r\n    playGame(playerCardAtHand, card, cardPlayed, number)\r\n\r\n    if(rules.holdOn.active && number === rules.holdOn.card){\r\n\r\n        return false\r\n       \r\n    }else if(rules.pickTwo.active && number === rules.pickTwo.card){\r\n\r\n        goMarket(opponentsCardAtHand, market, 2)\r\n\r\n        return false\r\n\r\n    }else if(rules.pickThree.active && number === rules.pickThree.card){\r\n\r\n        goMarket(opponentsCardAtHand, market, 3)\r\n\r\n        return false\r\n\r\n    }else if(rules.suspension.active && number === rules.suspension.card){\r\n\r\n        return false\r\n\r\n    }else if(rules.generalMarket.active && number === rules.generalMarket.card){\r\n\r\n        goMarket(opponentsCardAtHand, market)\r\n\r\n        return false\r\n   \r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function playGame(player, card, cardPlayed, number){\r\n\r\n    //+---------------------------------------------------------------------------+\r\n    //|     This function takes in the player cards at hand an the action to be   |\r\n    //|     taken it takes it, if a card is played it adds it to gamePlayed and   |\r\n    //|     subracts it from the player card at hand                              |\r\n    //+---------------------------------------------------------------------------+\r\n    \r\n    console.log(\"game played \" + card)\r\n\r\n    //if player goes to market\r\n    if(card[0] === \"z:goMarket\"){\r\n\r\n    }else if(number === 20){\r\n\r\n        cardPlayed.pop()\r\n\r\n        cardPlayed.push(card[0])\r\n\r\n    }else{\r\n\r\n        cardPlayed.push(card[0])\r\n\r\n        for(let i = 0; i < player.length; i++){\r\n\r\n            if(player[i] === card[0]) player.splice(i, 1)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function canPlay(card, inPlay, need = false) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = parseInt(card.slice(index, card.length))\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlay.slice(index_in, inPlay.length))\r\n    let shape_in = inPlay.slice(0, index_in)\r\n\r\n    if(number === 20) return [true, true]\r\n    \r\n    if(number === number_in || shape === shape_in || need) return [true, false]\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkGame(card, inPlay) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = card.slice(index, card.length)\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = inPlay.slice(index_in, inPlay.length)\r\n    let shape_in = inPlay.slice(0, index_in)\r\n    \r\n    if(number === number_in || shape === shape_in || number === 20) return true\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkPlayResponse(response, gameState, events, playerTwoState){\r\n\r\n    setTimeout(handleResponse, MOVE_WAITING_PERIOD, 0, response, gameState, events, playerTwoState)\r\n\r\n}\r\n\r\n\r\nfunction handleResponse(index, response, gameState, events, playerTwoState){\r\n\r\n    //+----------------------------------------------------------------------+\r\n    //|     Recursive function that loop through the server response and     |\r\n    //|     handle them appropriately it calls the setTimeout function       |\r\n    //|     it also update agent states                                      |\r\n    //+----------------------------------------------------------------------+\r\n\r\n    \r\n    let playerCardAtHand = gameState.playerTwo.cardAtHand\r\n    let opponentsCardAtHand = gameState.playerOne.cardAtHand\r\n    let cardPlayed = gameState.cardPlayed\r\n    let market = gameState.market\r\n\r\n\r\n    let rules = gameState.rules\r\n   \r\n    let cardIndex = response[index][0].indexOf(\":\") + 1\r\n    let number = parseInt(response[index][0].slice(cardIndex, response[index][0].length))\r\n\r\n    let availableMoves = availableMove(playerCardAtHand, cardPlayed[cardPlayed.length - 1])\r\n\r\n    playerTwoState.push(createState(gameState, availableMoves, false))\r\n\r\n\r\n    if(number === 20){\r\n\r\n        cardPlayed.push(response[index][0])\r\n\r\n        for(let i = 0; i < playerCardAtHand.length; i++){\r\n\r\n            if(playerCardAtHand[i] === \"whot:20\") playerCardAtHand.splice(i, 1)\r\n            \r\n        }\r\n\r\n    }else if(response[index][0] !== \"z:goMarket\"){\r\n\r\n        referee(response[index], rules, playerCardAtHand, opponentsCardAtHand, cardPlayed, market)\r\n        \r\n    }else{\r\n\r\n        goMarket(playerCardAtHand, market)\r\n\r\n    }\r\n\r\n    events.emit(\"play\")\r\n\r\n    if(index + 1 < response.length) setTimeout(handleResponse, MOVE_WAITING_PERIOD, index + 1, response, gameState, events, playerTwoState)\r\n    else events.emit(\"play-end\")\r\n}\r\n\r\n\r\n\r\n\r\nexport function checkGameState(gameState){\r\n\r\n    //+---------------------------------------------------------------------------+\r\n    //|      This method checks if any of the player cards or market is less      |  \r\n    //|      than one then it calls the reward method in GameEngine, if  any      |\r\n    //|      of the player cards is finished that player wins the game and the    |\r\n    //|      game is over but if market is finished, it adds all cards from       |\r\n    //|      card Played to market and shuffle them while calling the reward      |\r\n    //|      method in GameEngine, but the game continues                         |\r\n    //+---------------------------------------------------------------------------+\r\n    \r\n    if(gameState.playerOne.cardAtHand.length < 1 || gameState.playerOne.cardAtHand.length < 1){\r\n\r\n        //rewards(gameState, actionOneNew, actionOneOld, actionTwoNew, actionTwoOld)\r\n\r\n    }else if(gameState.market.length < 1){\r\n\r\n        //rewards(gameState, actionOneNew, actionOneOld, actionTwoNew, actionTwoOld)\r\n \r\n        // \r\n        let inPlay = sanitizeCardPlayed(gameState.cardPlayed)\r\n\r\n        //adds all the card played to market\r\n        gameState.market = inPlay\r\n        \r\n        //reasign inplay giving it just its last value\r\n        gameState.cardPlayed = [ gameState.cardPlayed[gameState.cardPlayed.length - 1]]\r\n\r\n        //removed the last card from market\r\n        gameState.market.pop()\r\n\r\n        //shuffles the cards\r\n        gameState.market = shuffle(gameState.market)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function shuffle(array){\r\n\r\n    let currIndex = array.length\r\n\r\n    while (0 !== currIndex) {\r\n        \r\n        //pick an element not prevously selected\r\n        let randIndex = Math.floor(Math.random() * currIndex)\r\n        currIndex--\r\n\r\n        //swap it with the current element\r\n        let tempVal  = array[currIndex]\r\n        array[currIndex] = array[randIndex]\r\n        array[randIndex] = tempVal\r\n    \r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n\r\n\r\nexport function sanitizeCardPlayed(cards){\r\n\r\n    let result = []\r\n\r\n    for(let i = 0; i < cards.length; i++){\r\n\r\n        let index = cards[i].indexOf(\":\") + 1\r\n        let number = parseInt(cards[i].slice(index, cards.length))\r\n\r\n        if(number === 20)\r\n            result.push(\"whot:20\")\r\n        else\r\n            result.push(cards[i])\r\n    }\r\n\r\n    return result\r\n\r\n}\r\n\r\n\r\nexport function rewards(gameState, actionOneNew, actionOneOld, actionTwoNew, actionTwoOld){\r\n\r\n    if(gameState.playerOne.cardAtHand < 1) alert(gameState.playerOne.name + \" Wins \")\r\n\r\n    if(gameState.playerTwo.cardAtHand < 1) alert(gameState.playerTwo.name + \" Wins \")\r\n    \r\n}\r\n\r\nexport function checkGameChanges(gameState, cardPlayed, market){\r\n\r\n    //returns true if there is a change in market length\r\n    if(gameState.market.length !== market.length){\r\n        \r\n        market = gameState.market\r\n        cardPlayed = gameState.cardPlayed\r\n\r\n        return true\r\n    }\r\n\r\n    //returns true if there is a change in market length\r\n    if(gameState.cardPlayed.length !== cardPlayed.length){\r\n        \r\n        market = gameState.market\r\n        cardPlayed = gameState.cardPlayed\r\n        \r\n        return true\r\n    }\r\n\r\n    return false\r\n\r\n}\r\n\r\n\r\nexport function availableMove(playerCard, inPlayCard){\r\n\r\n    //+----------------------------------------------------------------------+\r\n    //|     This function receive two arguments, the first argument is the     |\r\n    //|     card in the player hand and the second argument is the last      |\r\n    //|     card played, the function loop through the first argument and    |\r\n    //|     return all the valid moves that can be made                      | \r\n    //+----------------------------------------------------------------------+\r\n\r\n\r\n    let index_in = inPlayCard.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlayCard.slice(index_in, inPlayCard.length))\r\n    let shape_in = inPlayCard.slice(0, index_in)\r\n\r\n    let availableMove = [\"z:goMarket\"]\r\n\r\n    for(let i = 0; i < playerCard.length; i++){\r\n         \r\n        let index = playerCard[i].indexOf(\":\") + 1\r\n        let number = parseInt(playerCard[i].slice(index, playerCard[i].length))\r\n        let shape = playerCard[i].slice(0, index)\r\n\r\n        \r\n\r\n        if(number === 20){\r\n\r\n            availableMove.sort()\r\n\r\n            availableMove.push(\"circle:20\", \"cross:20\", \"square:20\", \"star:20\", \"triangle:20\")\r\n            \r\n            return availableMove\r\n\r\n        }if(number === number_in){\r\n\r\n            availableMove.push(playerCard[i])\r\n\r\n        }else if(shape === shape_in){\r\n        \r\n            availableMove.push(playerCard[i])\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return availableMove.sort()\r\n\r\n}\r\n\r\n\r\n\r\nexport function createState(gameState,  availableMoves, isPlayerOne){\r\n\r\n    if(isPlayerOne)\r\n        return { \r\n            agentName: gameState.playerOne.name,\r\n            cardAtHand: gameState.playerOne.cardAtHand,\r\n            cardInPlay: gameState.cardPlayed[gameState.cardPlayed.length - 1],\r\n            cardPlayed: gameState.cardPlayed,\r\n            noOfCardsInMarket: gameState.market.length,\r\n            noOfCardsWithOpponent: gameState.playerTwo.cardAtHand.length,\r\n            availableMove: availableMoves,\r\n            rules: gameState.rules, \r\n\r\n        }\r\n    else\r\n        return { \r\n            agentName: gameState.playerTwo.name,\r\n            cardAtHand: gameState.playerTwo.cardAtHand,\r\n            cardInPlay: gameState.cardPlayed[gameState.cardPlayed.length - 1],\r\n            cardPlayed: gameState.cardPlayed,\r\n            noOfCardsInMarket: gameState.market.length,\r\n            noOfCardsWithOpponent: gameState.playerOne.cardAtHand.length,\r\n            availableMove: availableMoves,\r\n            rules: gameState.rules, \r\n        }   \r\n    \r\n}\r\n\r\nexport function cardIndex(availableMove, move){\r\n\r\n    if(availableMove.length === 0) return -1\r\n\r\n    for (let i = 0; i < availableMove.length; i++) if(availableMove[i] === move) return i   \r\n\r\n}","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Cards from \"../../GameEnv/cards\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport {shuffle} from \"../../GameLogic/logics\";\r\n\r\nvar cards = [...Cards.cards]\r\ncards.push(\"cover:20\")\r\n\r\nfunction Start() {\r\n\r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n\r\n    let area = width * height\r\n\r\n    let size = Math.sqrt(area/(2 * 57))\r\n\r\n    let cardSize = size\r\n\r\n    cards =  shuffle(cards)\r\n\r\n    let componet = []\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n    \r\n        componet.push(chooseCard(cards[i], cardSize))\r\n\r\n    }\r\n   \r\n\r\n    return(\r\n        <div className=\"start-page\" >\r\n            {componet}\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Start","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Button(props) {\r\n\r\n    return(\r\n        <div>\r\n            <Link to={props.link}>\r\n                <button className={props.class} >\r\n                    {props.text}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Button","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Button from \"../Componets/Button\";\r\n\r\n\r\nfunction Home() {\r\n\r\n\r\n    let height = window.innerHeight * 0.25\r\n\r\n    const style = {\r\n        marginTop:height\r\n    }\r\n\r\n    return(\r\n        <center>\r\n\r\n            <Start />\r\n\r\n            <div style={style}>\r\n\r\n                <Button text={\"Play Game\"} link={\"/leaderboard\"} class={\"btn-start\"}/>\r\n\r\n                <Button text={\"Rules\"} link={\"/rules\"}  class={\"btn-rules\"}/>\r\n\r\n                <Button text={\"Leaderboard\"} link={\"/leaderboard\"} class={\"btn-leader\"}/>\r\n\r\n                <Button text={\"Create Agent\"} link={\"/create-agent\"} class={\"btn-create\"}/>\r\n\r\n                <Button text={\"Settings\"} link={\"/settings\"} class={\"btn-settings\"}/>\r\n                \r\n            </div>\r\n            \r\n        </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\n\r\nfunction Whot() {\r\n\r\n    let cardWidth = 350\r\n    let left = (window.innerWidth / 2) - (cardWidth / 2)\r\n    let top = (window.innerHeight / 2) - (cardWidth * 1.5 / 2)\r\n\r\n    return(\r\n            <center className=\"whot-background\" style={{top:top, left:left}}>\r\n\r\n                {chooseCard(\"\", cardWidth)}\r\n        \r\n            </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Whot","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nfunction Rules() {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Rules","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from \"./Button\"\r\n\r\n \r\n\r\nfunction Agent(props) {\r\n\r\n    return(\r\n        <div className=\"agents\">\r\n\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <FontAwesomeIcon size=\"5x\" color={\"gray\"} icon={faUserCircle} /> \r\n                    </td>\r\n\r\n                    <td>\r\n                        Name {props.agentName} <br/>\r\n                        Wins  {props.wins} <br/>\r\n                        Loss {props.losses} <br/>\r\n                        points {parseFloat(props.points.toPrecision(6))} <br/>\r\n                        <Button text={\"Play Agent\"}  class={\"btn-play\"} link={\"/game/:\" + props.agentName} />\r\n    \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Agent","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport chooseCard from \"../GameLogic/chooseCard\"\r\nimport Cards from \"../GameEnv/cards/index.json\"\r\n\r\nvar cards = [...Cards.cards]\r\n\r\nfunction Loader(props) {\r\n\r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n    let cardSize = height/5\r\n\r\n    let cardIndex = Math.floor(Math.random() * cards.length)\r\n\r\n    const style = {\r\n        position:\"absolute\",\r\n        top:height/2 - cardSize,\r\n        left:width/2 - cardSize * 0.6666666667\r\n    }\r\n\r\n    return(\r\n        <div style={style} className=\"loader\">\r\n            {chooseCard(cards[cardIndex], cardSize)}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Loader","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React from \"react\"\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Agent from \"../Componets/Agent\";\r\nimport axios from \"axios\"\r\n\r\nimport Loader from \"../Componets/Loader\"\r\n\r\nclass Leaderboard extends React.Component {\r\n\r\n    constructor(){\r\n\r\n        super()\r\n\r\n        this.state = {\r\n            isLoading:true,\r\n            response:{}\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"/api/leaderboard/0\").then((response) =>{\r\n            console.log(response)\r\n            this.setState({\r\n                isLoading:false,\r\n                response:response.data\r\n            })\r\n        })\r\n    }\r\n    \r\n    render(){\r\n\r\n        if(this.state.isLoading) return (<Loader />)\r\n        let data = this.state.response\r\n        let agents = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            agents.push(<Agent agentName={data[i].agentName} \r\n                            points={data[i].points} \r\n                            wins={data[i].wins}\r\n                            losses={data[i].losses} />)\r\n        }\r\n\r\n        return(\r\n            <div>\r\n\r\n                <Start />\r\n\r\n                <div className=\"leaderboard\">\r\n\r\n                    {agents}\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Leaderboard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nfunction Settings() {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nfunction CardNumber(props){\r\n\r\n    return(\r\n        <div className=\"card-number\">\r\n            {props.cardNumber}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardNumber","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\"\r\n\r\n\r\n\r\n\r\nfunction InPlay(props) {\r\n    \r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n    let cardSize = height / (4 * 1.5)\r\n\r\n    const style = {\r\n        position:\"absolute\",\r\n        top:height/2 - cardSize,\r\n        left:width/2 - cardSize * 0.6666666667\r\n    }\r\n\r\n    return(\r\n        <div style={style}>\r\n            { chooseCard(props.cards, cardSize) }\r\n            <CardNumber cardNumber={props.cardNumber} />\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default InPlay\r\n","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\"\r\n\r\nfunction Market(props) {\r\n    \r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n    let cardSize = height / (4 * 1.5)\r\n\r\n    const style = {\r\n        position:\"absolute\",\r\n        top:    height / 2 - cardSize,\r\n        left:   width * 0.05\r\n    }\r\n\r\n    if(props.playable)\r\n        return(\r\n            <div style={style}>\r\n                    <span onClick={() => props.action([\"z:goMarket\"])}>{ chooseCard(\"ff\", cardSize) }</span>\r\n                    <CardNumber cardNumber={props.cardNumber} />\r\n            </div>\r\n            )\r\n    else\r\n        return(\r\n            <div style={style}>\r\n                    <span>{ chooseCard(\"ff\", cardSize) }</span>\r\n                    <CardNumber cardNumber={props.cardNumber} />\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Market\r\n","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\nimport CardNumber from \"./CardNumber\"\r\n\r\n\r\nclass Player extends React.Component {\r\n\r\n    constructor(){\r\n\r\n        super()\r\n\r\n        this.state = {\r\n            start:0,\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        let width = window.innerWidth\r\n        let height = window.innerHeight\r\n        let cardSize = height / (4 * 1.5)\r\n\r\n        let margin = width * 0.05\r\n\r\n        let top = this.props.top * height - cardSize\r\n\r\n        let cardSpaceAvailable = width  - margin * 2\r\n\r\n        let noOfCardsThatCanBeDisplayed = cardSpaceAvailable / (cardSize * 1.1)\r\n\r\n        let style = {\r\n            position: \"absolute\",\r\n            top: top,\r\n            left: margin,\r\n            align: \"center\",\r\n            width: cardSpaceAvailable,  \r\n            height: cardSize,\r\n        }\r\n\r\n        let navStyle = {\r\n            height: cardSize  * 1.5\r\n        }\r\n        \r\n        \r\n\r\n        let left = null\r\n        let right = null\r\n\r\n        if(this.state.start > 0 && this.state.start < this.props.cards.length - noOfCardsThatCanBeDisplayed){\r\n            \r\n            left =  <span onClick={() =>  { this.setState({start: this.state.start - 1}) } } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowLeft} /> \r\n                    </span>\r\n            \r\n            right = <span onClick={() => { if(this.state.start < this.props.cards.length - noOfCardsThatCanBeDisplayed) this.setState({start: this.state.start + 1}) } } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowRight} /> \r\n                    </span>\r\n\r\n        }else if(this.state.start > 0){\r\n\r\n            left =  <span style={{top:100}} onClick={() =>  { this.setState({start: this.state.start - 1}) } } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowLeft} /> \r\n                    </span>\r\n\r\n        }else if(this.state.start < this.props.cards.length - noOfCardsThatCanBeDisplayed){\r\n            \r\n            right = <span style={{top:100}} onClick={() => { if(this.state.start < this.props.cards.length - noOfCardsThatCanBeDisplayed) this.setState({start: this.state.start + 1}) } } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowRight} /> \r\n                    </span>\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div style={style} className=\"player\">\r\n\r\n                {left}\r\n                {this.displayCards(this.props.cards.sort(), cardSize, this.props.action, this.state.start)}  \r\n                {right}\r\n\r\n                <CardNumber cardNumber={this.props.cards.length} />\r\n                \r\n            </div>\r\n            )\r\n    }\r\n    \r\n\r\n    displayCards(cards, cardSize, action, start=0) {\r\n    \r\n        let cardArray = []\r\n    \r\n        let width = window.innerWidth\r\n        \r\n        let margin = width * 0.05\r\n        let cardSpaceAvailable = width  - margin * 2\r\n    \r\n        for(let i = start; i < cards.length; i++){\r\n           \r\n            if((i + 1 - start) * 1.1 * cardSize >= cardSpaceAvailable) break\r\n            \r\n            if(this.props.playable)\r\n                cardArray.push(<span onClick = {() => action([cards[i]])}> { chooseCard(cards[i], cardSize) } </span>)\r\n            else\r\n            cardArray.push(<span> { chooseCard(cards[i], cardSize) } </span>)\r\n        }\r\n    \r\n        return cardArray\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default Player","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\n\r\nclass Need extends React.Component{\r\n\r\n\r\n    render(){\r\n        \r\n        let width = window.innerWidth\r\n        let height = window.innerHeight\r\n\r\n        let area = width * height\r\n\r\n        let size = Math.sqrt(area/(3 * 5 * 1.1))\r\n\r\n        let cardSize = size\r\n\r\n        return (\r\n            <center className=\"need-bar\" style={{height:height * .9}}>\r\n                <div>\r\n                    <span onClick = {() => this.props.need([\"star:20\"])}> {chooseCard(\"star:\", cardSize, true)} </span>\r\n                    <span onClick = {() => this.props.need([\"triangle:20\"])}> {chooseCard(\"triangle:\", cardSize)}   </span>\r\n                    <span onClick = {() => this.props.need([\"square:20\"])}> {chooseCard(\"square:\", cardSize)}     </span>\r\n                    <span onClick = {() => this.props.need([\"circle:20\"])}> {chooseCard(\"circle:\", cardSize)}     </span>\r\n                    <span onClick = {() => this.props.need([\"cross:20\"])}> {chooseCard(\"cross:\", cardSize)}      </span>\r\n                </div>\r\n            </center>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Need","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from \"react\"\r\n\r\nimport  \"../Styles/modal.css\"\r\n\r\nclass Modal extends React.Component{\r\n\r\n\r\n    render(){\r\n        let visibility = this.props.visibility\r\n        let close = this.props.close\r\n\r\n        \r\n        return(\r\n            <div>\r\n\r\n                <div className={\"modal \" + visibility}>\r\n\r\n                    <div className={\"modal-content\"}>\r\n\r\n                        <span className=\"close\" onClick={() => close(\"cccc\")}>&times;</span>\r\n                        \r\n                        <center>{this.props.text}</center>\r\n                    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Modal","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport {canPlay, checkPlayResponse, createState,\r\n        referee, goMarket, checkGameState, \r\n        checkGameChanges, availableMove, cardIndex} from  \"../GameLogic/logics\"\r\n\r\nimport InPlay  from \"../Componets/CardHolder/InPlay\";\r\nimport Market from \"../Componets/CardHolder/Market\";\r\nimport Player from \"../Componets/CardHolder/Player\";\r\n\r\nimport Need from \"../Componets/CardHolder/Need\"\r\nimport Loader from \"../Componets/Loader\"\r\nimport Modal from \"../Componets/Modal\"\r\n\r\nimport {EventEmitter} from \"events\"\r\n\r\n\r\nvar cardPlayedCards = [0]\r\nvar marketCards = [0]\r\n\r\nlet rules = {\"holdOn\":{\"active\":true, \"card\":1, \"defend\":false},\r\n            \"pickTwo\":{\"active\":true, \"card\":2, \"defend\":false},\r\n            \"pickThree\":{\"active\":true, \"card\":5, \"defend\":false}, \r\n            \"suspension\":{\"active\":true, \"card\":8, \"defend\":false},\r\n            \"generalMarket\":{\"active\":true, \"card\":14, \"defend\":false}\r\n        } \r\n\r\nclass GamePlay extends React.Component{\r\n\r\n\r\n    constructor(){\r\n\r\n        super()\r\n\r\n        this.state = {\r\n            isLoading:true,\r\n            opponetIsPlaying:false,\r\n            isNeeded:false,\r\n            gameState:{\"playerOne\":{\r\n                            \"cardAtHand\":[\"\"],\r\n                            \"name\":\"\"\r\n                        },\r\n                        \"playerTwo\":{\r\n                            \"cardAtHand\":[\"\"],\r\n                            \"name\":\"\"\r\n                        },\r\n                    \"market\":[\"\"],\r\n                    \"cardPlayed\":[],\r\n                    rules: rules\r\n            },\r\n            playerOneCardIndex : 0,\r\n            playerTwoCardIndex : 0,\r\n            change : true,\r\n            playerOneStates : [],\r\n            playerTwoStates : [],\r\n            visibility : \"hide-modal\",   \r\n        }\r\n\r\n\r\n         \r\n        this.playCard = this.playCard.bind(this)\r\n        this.needed = this.needed.bind(this)\r\n\r\n        this.events = new EventEmitter()\r\n\r\n        this.events.on(\"play\", ()=>{\r\n\r\n            this.setState({ change : this.state.change ? false : true })\r\n  \r\n        })\r\n\r\n        this.events.on(\"play-end\", ()=>{\r\n\r\n            this.setState({ opponetIsPlaying : false })\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let url = window.location.href \r\n  \r\n        let index = url.indexOf(\"/:\") + 2\r\n        let user = url.slice(index, url.length)\r\n\r\n        axios.post(\"/api/game\", {\"agentName\":user, \"user\":\"Guest\", rules:rules}).then((res)=>{\r\n            \r\n            console.log(res)  \r\n\r\n            this.setState({isLoading:false, opponetIsPlaying:false, gameState:res.data.gameState})\r\n\r\n            if(res.data.moves.length){\r\n            \r\n                //check the type of response gotten from server\r\n                checkPlayResponse(res.data.moves, this.state.gameState, this.events, this.state.playerTwoStates)\r\n          \r\n            }\r\n            \r\n        }).catch(error => {\r\n\r\n            console.log(error)\r\n\r\n            alert(error)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    close(close){\r\n\r\n        //alert(this.state.visibility)\r\n        //this.setState({visibility : \"hide-modal\" })\r\n        //this.setState({isNeeded : false, isLoading : true})\r\n    }\r\n\r\n    needed(card){\r\n\r\n        let availableMoves = availableMove(this.state.gameState.playerOne.cardAtHand, this.state.gameState.cardPlayed[this.state.gameState.cardPlayed.length - 1])\r\n\r\n        this.state.playerOneStates.push(createState(this.state.gameState, availableMoves, true))\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        this.setState({isNeeded : false, isLoading : true, opponetIsPlaying : true})\r\n \r\n        let request = {\"gameState\":this.state.gameState, \"playerMove\":card, rules:rules}\r\n    \r\n        let index = this.state.gameState.playerOne.cardAtHand.indexOf(\"whot:20\")\r\n        this.state.gameState.playerOne.cardAtHand.splice(index, 1)\r\n        this.state.gameState.cardPlayed.push(card[0])\r\n\r\n        axios.post(\"/api/play\", request).then((res)=>{\r\n            \r\n            let response = res.data\r\n\r\n            //check the type of response gotten from server\r\n            checkPlayResponse(response, this.state.gameState, this.events, this.state.playerTwoStates)\r\n\r\n            //remove loader from screen and transfer game control to player\r\n            this.setState({opponetIsPlaying : false, isLoading : false })\r\n    \r\n        }).catch((error) =>{\r\n\r\n            //remove the last card played\r\n            this.state.gameState.cardPlayed.pop()\r\n\r\n            //return whot back to player\r\n            this.state.gameState.playerOne.cardAtHand.push(\"whot:20\")\r\n\r\n            //remove loader from the screen and transfer game control back to player\r\n            this.setState({isLoading : false, opponetIsPlaying : false, visibility : \"show-modal\"})\r\n\r\n            alert(error)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    playCard(card) {\r\n\r\n        let availableMoves = availableMove(this.state.gameState.playerOne.cardAtHand, this.state.gameState.cardPlayed[this.state.gameState.cardPlayed.length - 1])\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        this.state.playerOneStates.push(createState(this.state.gameState, availableMoves, true))\r\n\r\n        this.setState({ isLoading : true })\r\n\r\n        console.log(\"State 1\")\r\n\r\n        console.log(this.state.playerOneStates)\r\n\r\n        console.log(\"State 2\")\r\n\r\n        console.log(this.state.playerTwoStates)\r\n\r\n        if(card[0] === \"z:goMarket\"){\r\n\r\n            this.setState({opponetIsPlaying : true})\r\n\r\n            goMarket(this.state.gameState.playerOne.cardAtHand, this.state.gameState.market)\r\n\r\n            this.setState({opponetIsPlaying:false, isLoading:true})\r\n\r\n            let request = {\"gameState\":this.state.gameState, \"playerMove\":\"z:goMarket\", rules:rules}\r\n        \r\n            axios.post(\"/api/play\", request).then((res)=>{\r\n                \r\n                let response = res.data\r\n\r\n                //remove loader from screen and transfer game control back to opponent\r\n                this.setState({isLoading : false, opponetIsPlaying : true})\r\n\r\n                //check the type of response gotten from server\r\n                checkPlayResponse(response, this.state.gameState, this.events, this.state.playerTwoStates)\r\n                \r\n            }).catch((error) =>{\r\n\r\n                //add card taken from market to player back to market\r\n                this.state.gameState.market.push(this.state.gameState.playerOne.cardAtHand[this.state.gameState.playerOne.cardAtHand.length - 1])\r\n\r\n                //remove the card taken from market from player\r\n                this.state.gameState.playerOne.cardAtHand.pop()\r\n                \r\n                //undo last state\r\n                this.state.playerOneStates.pop()\r\n\r\n                //remove loader from the screen and transfer game control back to player\r\n                this.setState({isLoading : false, opponetIsPlaying : false, visibility : \"show-modal\"})\r\n\r\n                alert(error)\r\n\r\n            })\r\n\r\n        }else{\r\n\r\n    \r\n            let playGame = canPlay(card[0], this.state.gameState.cardPlayed[this.state.gameState.cardPlayed.length - 1])\r\n\r\n            this.setState({isNeeded : playGame[1]})\r\n\r\n            if(playGame[0]){\r\n\r\n                if(playGame[1]){\r\n\r\n                    this.setState({isNeeded : true, isLoading : false})\r\n\r\n                    //remove last state\r\n                    this.state.playerOneStates.pop()\r\n\r\n                }else{\r\n                    \r\n                    let sendMove = referee(card, rules, this.state.gameState.playerOne.cardAtHand, this.state.gameState.playerTwo.cardAtHand, this.state.gameState.cardPlayed, this.state.gameState.market)\r\n                   \r\n                    let request = {\"gameState\":this.state.gameState, \"playerMove\":card[0], rules:rules}\r\n                    \r\n                    if(sendMove){\r\n\r\n                        axios.post(\"/api/play\", request).then((res)=>{\r\n                            \r\n                            let response = res.data\r\n\r\n                            //remove loader from screen and transfer game control back to opponent\r\n                            this.setState({isLoading : false, opponetIsPlaying : true})\r\n\r\n                            //handle response gotten from server \r\n                            checkPlayResponse(response, this.state.gameState, this.events, this.state.playerTwoStates)\r\n     \r\n                        }).catch((error) =>{\r\n\r\n                            //add card taken from player back to player\r\n                            this.state.gameState.playerOne.cardAtHand.push(card[0])\r\n\r\n                            //undo last game played\r\n                            this.state.gameState.cardPlayed.pop()\r\n\r\n                            //undo last state update\r\n                            this.state.playerOneStates.pop()\r\n\r\n                            //remove loader and transfer game control back to player\r\n                            this.setState({isLoading : false, opponetIsPlaying : false, visibility : \"show-modal\"})\r\n\r\n                            alert(error)\r\n\r\n                        })\r\n\r\n                    }else{\r\n\r\n                        this.setState({isLoading:false})\r\n\r\n                    }\r\n\r\n                }\r\n            \r\n            }else{\r\n\r\n                this.setState({isLoading : false})\r\n\r\n                alert(\"illegal move\")\r\n    \r\n            }\r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render(){\r\n\r\n        checkGameState(this.state.gameState)\r\n\r\n        let height = window.innerHeight\r\n\r\n        if(this.state.isLoading) return(<center id=\"game-table\"  className=\"game-table\"><Loader /> </center>)\r\n\r\n        let playerCard = this.state.gameState.playerOne.cardAtHand\r\n\r\n        let opponetCard = this.state.gameState.playerTwo.cardAtHand\r\n\r\n        let inPlay = this.state.gameState.cardPlayed[this.state.gameState.cardPlayed.length - 1]\r\n\r\n        let gameObjects = null \r\n\r\n        let checkChanges = checkGameChanges(this.state.gameState, cardPlayedCards, marketCards)\r\n\r\n        if(checkChanges){\r\n\r\n            gameObjects = <div>\r\n                                <Player top={0.2} angle={180} cards={opponetCard} action={this.playCard}    playable={false} index={this.state.playerTwoCardIndex} />\r\n                                <Player top={0.8} angle={0} cards={playerCard} action={this.playCard} playable={!this.state.opponetIsPlaying} index={this.state.playerOneCardIndex}/>\r\n                                <InPlay className=\"center\" cards={inPlay} cardNumber={this.state.gameState.cardPlayed.length}/>\r\n                                <Market action={this.playCard} playable={!this.state.opponetIsPlaying} cardNumber={this.state.gameState.market.length} />\r\n                            </div>\r\n\r\n        }\r\n\r\n        if(this.state.isNeeded){\r\n            gameObjects = <Need  height = {height} need={this.needed}/> \r\n        }\r\n\r\n        console.log(\"states\")\r\n\r\n        console.log(this.state.gameState)\r\n\r\n        return(\r\n            <div>\r\n            {\r\n            //    <Modal text={\"Network Error\"} close={this.close} visibility={this.state.visibility} />\r\n            }\r\n                <center id=\"game-table\"  className=\"game-table\">\r\n\r\n                    {gameObjects}\r\n\r\n                </center>\r\n\r\n            </div>\r\n    \r\n            )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default GamePlay","function FormInput(props){\r\n\r\n    let identifier = props.identifier\r\n\r\n    if(props.type === \"text\")\r\n        return(\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-25\"> <label for={identifier}>{props.label}</label> </div>\r\n\r\n                <div class=\"col-75\">\r\n\r\n                    <input type=\"text\" required id={identifier} name={identifier} onChange={props.onChange} placeholder=\"eg Joe\" />\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    return(\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-25\"><label for={identifier}>{props.label}</label></div>\r\n\r\n            <div class=\"col-75\">\r\n\r\n                <select id={identifier} name={identifier} onChange={props.onChange} >\r\n                    \r\n                    <option value={false}>No</option>\r\n                    <option value={true}>Yes</option>\r\n                \r\n                </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormInput","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Start from \"../Componets/Background/Start\";\r\nimport FormInput from \"../Componets/FormInput\"\r\nimport \"../Styles/form.css\"\r\n\r\nimport axios from \"axios\"\r\n \r\n \r\n function CreateAgent() {\r\n\r\n    let formData ={\r\n        agentName: \"\",\r\n        availableMove: true,\r\n        cardAtHand: false,\r\n        noOfCardAtHand: false,\r\n        cardInPlay: false,\r\n        cardPlayed: false,\r\n        noOfCardPlayed: false,\r\n        noOfCardsInMarket: false,\r\n        noOfCardsWithOpponent: false,\r\n        rules: false\r\n    }\r\n\r\n    function handleEvent(e){\r\n\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        formData ={\r\n            agentName: name === \"agentName\" ? value : formData.agentName,\r\n            availableMove: name === \"availableMove\" ? value === \"true\" ? true : false : formData.availableMove,\r\n            cardAtHand: name === \"cardAtHand\" ? value === \"true\" ? true : false : formData.cardAtHand,\r\n            noOfCardAtHand: name === \"noOfCardAtHand\" ? value === \"true\" ? true : false : formData.noOfCardAtHand,\r\n            cardInPlay: name === \"cardInPlay\" ? value === \"true\" ? true : false : formData.cardInPlay,\r\n            cardPlayed: name === \"cardPlayed\" ? value === \"true\" ? true : false : formData.cardPlayed,\r\n            noOfCardPlayed: name === \"noOfCardPlayed\" ? value === \"true\" ? true : false : formData.noOfCardPlayed,\r\n            noOfCardsInMarket: name === \"noOfCardsInMarket\" ? value === \"true\" ? true : false : formData.noOfCardsInMarket,\r\n            noOfCardsWithOpponent: name === \"noOfCardsWithOpponent\" ? value === \"true\" ? true : false : formData.noOfCardsWithOpponent,\r\n            rules: name === \"rules\" ? value === \"true\" ? true : false : formData.rules\r\n        }\r\n\r\n\r\n        console.log(formData)\r\n\r\n\r\n    }\r\n\r\n    function submit(e){\r\n\r\n        e.preventDefault()\r\n\r\n        axios.post('/api/create-agent', {agent: formData}).then((res)=>{\r\n            \r\n            //console.log(res)  \r\n            alert(res.data.msg)\r\n\r\n            if(res.data.success){\r\n                /*\r\n                formData ={\r\n                    agentName: name === \"agentName\" ? value : formData.agentName,\r\n                    availableMove: name === \"availableMove\" ? value === \"true\" ? true : false : formData.availableMove,\r\n                    cardAtHand: name === \"cardAtHand\" ? value === \"true\" ? true : false : formData.cardAtHand,\r\n                    noOfCardAtHand: name === \"noOfCardAtHand\" ? value === \"true\" ? true : false : formData.noOfCardAtHand,\r\n                    cardInPlay: name === \"cardInPlay\" ? value === \"true\" ? true : false : formData.cardInPlay,\r\n                    cardPlayed: name === \"cardPlayed\" ? value === \"true\" ? true : false : formData.cardPlayed,\r\n                    noOfCardPlayed: name === \"noOfCardPlayed\" ? value === \"true\" ? true : false : formData.noOfCardPlayed,\r\n                    noOfCardsInMarket: name === \"noOfCardsInMarket\" ? value === \"true\" ? true : false : formData.noOfCardsInMarket,\r\n                    noOfCardsWithOpponent: name === \"noOfCardsWithOpponent\" ? value === \"true\" ? true : false : formData.noOfCardsWithOpponent,\r\n                    rules: name === \"rules\" ? value === \"true\" ? true : false : formData.rules\r\n                }  \r\n\r\n                */\r\n\r\n            }\r\n           // this.setState({isLoading:false, opponetIsPlaying:false, gameState:res.data})\r\n\r\n        })\r\n    }\r\n\r\n    \r\n \r\n     return(\r\n         <center>\r\n \r\n            <Start />\r\n            \r\n            <div class=\"container\">\r\n\r\n                <form method=\"post\" action='/api/create-agent'>\r\n\r\n                    <div class=\"row\">\r\n                        <h3>Create Agent</h3>\r\n                    </div>\r\n\r\n                    <FormInput label=\"Agent Name\" type={\"text\"} identifier={\"agentName\"} onChange={handleEvent} />\r\n\r\n                    \r\n\r\n                    <div class=\"row\">\r\n\r\n                        <h5>Agent Settings</h5> <br/> \r\n\r\n                        <p>\r\n                            select yes if you want the agent to considered these fields while learning\r\n                        </p>\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-25\">\r\n\r\n                            <label for=\"avialableMove\">Available Move</label>\r\n                        \r\n                        </div>\r\n\r\n                        <div class=\"col-75\">\r\n                        \r\n                            <select id=\"avialableMove\" name=\"avialableMove\" disabled>\r\n                                \r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                            \r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <FormInput label=\"Cards At Hand\" type={\"select\"} identifier={\"cardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards At Hand\" type={\"select\"} identifier={\"noOfCardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card In Play\" type={\"select\"} identifier={\"cardInPlay\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card Played\" type={\"select\"} identifier={\"cardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards Played\" type={\"select\"} identifier={\"noOfCardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards In Market\" type={\"select\"} identifier={\"noOfCardsInMarket\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards With Opponent\" type={\"select\"} identifier={\"noOfCardsWithOpponent\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Rules\" type={\"select\"} identifier={\"rules\"} onChange={handleEvent} />\r\n\r\n                    <div class=\"row\" style={{marginTop:20}}>   <input type=\"submit\" value=\"Submit\" onClick={submit}/> </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            \r\n         </center>\r\n     )\r\n \r\n }\r\n \r\n export default CreateAgent","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import {Provider} from 'react-redux'\r\n//import {createStore, applyMiddleware} from 'redux';\r\nimport './index.css';\r\nimport  \"./Styles/styles.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\n//import reduxThunk from 'redux-thunk'\r\n\r\n//import reducers from \"./Reducers\";\r\n\r\nimport Home from \"./Routes/Home\";\r\nimport Rules from \"./Routes/Rules\";\r\nimport Leaderboard from \"./Routes/Leaderboard\";\r\nimport Settings from \"./Routes/Settings\";\r\nimport GamePlay from \"./Routes/GamePlay\";\r\nimport CreateAgent from \"./Routes/CreateAgent\";\r\n\r\n\r\nconst home =  () => <Home />\r\nconst rules =  () => <Rules />\r\nconst leaderboard = () => <Leaderboard />\r\nconst settings = () => <Settings />\r\nconst game = () => <GamePlay />\r\nconst createAgent = () => <CreateAgent />\r\n\r\n//const store = createStore(reducers, {}, applyMiddleware(reduxThunk))\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {//<Provider store={store}>\r\n    }\r\n      <BrowserRouter>\r\n        <Route path=\"/\" exact={true} component={home} />\r\n        <Route path=\"/home\" exact={true} component={home} />\r\n        <Route path=\"/rules\" exact={true} component={rules} />\r\n        <Route path=\"/leaderboard\" exact={true} component={leaderboard} />\r\n        <Route path=\"/settings\" exact={true} component={settings} />\r\n        <Route path=\"/create-agent\" exact={false} component={createAgent}/>\r\n        <Route path=\"/game\" exact={false} component={game}/>\r\n      </BrowserRouter>\r\n    {//</Provider>  \r\n    }\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}