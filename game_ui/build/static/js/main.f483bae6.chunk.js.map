{"version":3,"sources":["reportWebVitals.js","Redux/constants/action-types.js","Redux/reducers/index.js","GameEnv/cards/defaults.js","Redux/store/index.js","Componets/Shapes/Square.js","Componets/Shapes/Text.js","Componets/Cards/SquareCard.js","Componets/Shapes/Circle.js","Componets/Cards/CircleCard.js","Componets/Shapes/Cross.js","Componets/Cards/CrossCard.js","Componets/Shapes/Triangle.js","Componets/Cards/TriangleCard.js","Componets/Shapes/Star.js","Componets/Cards/StarCard.js","Componets/Cards/WhotCard.js","Componets/Cards/CardCover.js","GameLogic/chooseCard.js","Redux/actions/index.js","GameLogic/logics.js","Componets/Background/Start.js","Componets/Button.js","Componets/Modal.js","Routes/Home.js","Componets/Background/Whot.js","Routes/Rules.js","Componets/Agent.js","Componets/Loader.js","Routes/Leaderboard.js","Routes/Settings.js","Componets/CardHolder/CardNumber.js","Componets/CardHolder/InPlay.js","Componets/CardHolder/Market.js","Componets/CardHolder/Player.js","Componets/CardHolder/Need.js","Routes/GamePlay.js","Componets/FormInput.js","Routes/CreateAgent.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GAME_STATE","PLAYER_ONE_STATE","PLAYER_TWO_STATE","PLAYER_ONE_ACTION","PLAYER_TWO_ACTION","PLAYER_ONE_INDEX","PLAYER_TWO_INDEX","REMOVE_LAST","initials","gameState","playerOne","cardAtHand","name","playerTwo","market","cardPlayed","rules","playerOneStates","playerTwoStates","playerOneActions","playerTwoActions","playerOneCardIndex","playerTwoCardIndex","cards","defaults","initialState","console","log","rootReducer","state","action","type","payload","playerOneIndex","playerTwoIndex","pop","store","createStore","Square","props","fill","className","x","marginLeft","y","marginTop","width","height","Text","text","fontSize","z","color","transform","SquareCard","size","cWidth","cHeight","firstCWidth","firstCHeight","firstMarginLeft","firstMarginTop","lastCWidth","lastCHeight","lastMarginLeft","lastMarginTop","topNumberMarginLeft","topNumberMarginTop","bottomNumberMarginLeft","bottomNumberMarginTop","fontSizeNumber","rotateY","rotateZ","number","Circle","cx","cy","r","radius","CircleCard","firstRadius","lastRadius","Cross","CrossCard","Triangle","XA","YA","XB","YB","XC","YC","points","TriangleCard","firstXA","firstYA","firstXB","firstYB","firstXC","firstYC","lastXA","lastYA","lastXB","lastYB","lastXC","lastYC","Star","XCenter","top","XTop","XTopLeft","XTopRight","bottom","XBottomLeft","XBottomRight","StarCard","firstXCenter","firstTop","firstXTop","firstXTopLeft","firstXTopRight","firstBottom","firstXBottomLeft","firstXBottomRight","lastXCenter","lastTop","lastXTop","lastXTopLeft","lastXTopRight","lastBottom","lastXBottomLeft","lastXBottomRight","topStarNumberMarginLeft","topStarNumberMarginTop","bottomStarNumberMarginLeft","bottomStarNumberMarginTop","fontSizeNumberStar","parseInt","number_","need","WhotCard","marginLeftOne","marginTopOne","marginLeftTwo","marginTopTwo","fontSizeSymbol","CardCover","chooseCard","card","cardSize","index","indexOf","slice","length","shape","updateGameState","updatePlayerOneStates","updatePlayerOneActions","updatePlayerTwoActions","removeLast","goMarket","player","times","dispatch","newGameState","i","push","referee","playerName","playerTwoName","playerOneName","playerCardAtHand","splice","playGame","holdOn","active","pickTwo","pickThree","suspension","generalMarket","checkPlayResponse","response","playerTwoState","agent","setOpponetIsPlaying","setTimeout","handleResponse","cardIndex","createState","availableMove","checkGameState","playerOneCards","playerTwoCards","rewards","alert","inPlay","result","sanitizeCardPlayed","shuffle","array","currIndex","randIndex","Math","floor","random","tempVal","undoMove","playerOneStateAndAction","separateStateAndAction","playerTwoStateAndAction","axios","post","agentName","user","playerOneStatesAndActions","playerTwoStatesAndActions","res","catch","error","playerCard","inPlayCard","index_in","number_in","shape_in","sort","availableMoves","isPlayerOne","cardInPlay","noOfCardsInMarket","noOfCardsWithOpponent","noOfCardPlayed","noOfCardAtHand","useCardAtHand","useNoOfCardAtHand","useCardInPlay","useCardPlayed","useNoOfCardPlayed","useNoOfCardsInMarket","useNoOfCardsWithOpponent","useRules","move","validStates","validActions","Cards","Start","area","window","innerWidth","innerHeight","sqrt","componet","Button","to","link","class","Modal","visibility","this","close","onClick","React","Component","Home","style","Whot","left","cardWidth","Rules","Agent","icon","faUserCircle","wins","losses","parseFloat","toPrecision","Loader","position","Leaderboard","useState","isLoading","setIsLoading","data","setData","agents","setAgents","page","setPage","useEffect","get","err","memo","Settings","CardNumber","cardNumber","InPlay","isLandscape","setCardSize","setStyle","Market","playable","Player","start","setStart","margin","setMargin","cardSpaceAvailable","setCardSpaceAvailable","setLeft","right","setRight","setTop","noOfCardsThatCanBeDisplayed","setNoOfCardsThatCanBeDisplayed","navStyle","setNavStyle","faArrowRight","faArrowLeft","cardArray","displayCards","Need","GamePlay","useParams","useSelector","useDispatch","setHeight","setWidth","playerOneData","setPlayerOneData","playerTwoData","setPlayerTwoData","isNeeded","setIsNeeded","setPlayerCard","opponetCard","setOpponetCard","setInplay","setCardPlayed","opponetIsPlaying","opponetMoves","setOpponetMoves","setIsLandscape","gameArea","setGameArea","onresize","onorientationchange","playerInfo","agentInfo","moves","forEach","element","playCard","request","playerMove","canPlay","sendMove","angle","FormInput","identifier","for","label","required","id","onChange","placeholder","yes","value","form","canGoMarket","canNeedAnyCard","CreateAgent","formData","setFormData","handleEvent","e","target","method","disabled","preventDefault","msg","status","home","leaderboard","settings","game","createAgent","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f483bae6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GAME_STATE = \"GAME_STATE\";\nexport const PLAYER_ONE_STATE = \"PLAYER_ONE_STATE\";\nexport const PLAYER_TWO_STATE = \"PLAYER_TWO_STATE\";\nexport const PLAYER_ONE_ACTION = \"PLAYER_ONE_ACTION\";\nexport const PLAYER_TWO_ACTION = \"PLAYER_TWO_ACTION\";\nexport const PLAYER_ONE_INDEX = \"PLAYER_ONE_INDEX\";\nexport const PLAYER_TWO_INDEX = \"PLAYER_TWO_INDEX\";\nexport const REMOVE_LAST = \"REMOVE_LAST\";","import {    GAME_STATE, PLAYER_ONE_ACTION, PLAYER_ONE_INDEX, PLAYER_ONE_STATE, PLAYER_TWO_ACTION, PLAYER_TWO_INDEX, PLAYER_TWO_STATE, REMOVE_LAST,   } from \"../constants/action-types\";\nimport defaults from \"./../../GameEnv/cards/defaults\";\n\nconst initials = defaults();\n\nconst initialState = {\n    gameState: initials.gameState,\n    playerOneStates: initials.playerOneStates,\n    playerTwoStates: initials.playerTwoStates,\n    playerOneActions: initials.playerOneActions,\n    playerTwoActions: initials.playerTwoActions,\n    playerOneCardIndex: initials.playerOneCardIndex,\n    playerTwoCardIndex: initials.playerTwoCardIndex,\n};\n  \nconsole.log(initialState)\nfunction rootReducer(state = initialState, action) {\n\n    console.log(\"Action Type\", action.type)\n\n    const payload = action.payload\n\n    switch (action.type) {\n        case GAME_STATE:\n            return { ...state, gameState: payload }\n        case PLAYER_ONE_STATE:\n            return { ...state, playerOneStates: [...state.playerOneStates, payload] }\n        case PLAYER_TWO_STATE:\n            return { ...state, playerTwoStates: [...state.playerTwoStates, payload] }\n        case PLAYER_ONE_ACTION:\n            return { ...state, playerOneActions: [...state.playerOneActions, payload] }\n        case PLAYER_TWO_ACTION:\n            return { ...state, playerTwoActions: [...state.playerTwoActions, payload] }\n        case PLAYER_ONE_INDEX:\n            return { ...state, playerOneIndex: payload }\n        case PLAYER_TWO_INDEX:\n            return { ...state, playerTwoIndex: payload }\n        case REMOVE_LAST:\n            console.log(action)\n            payload.pop();\n            return { ...state, payload }\n        default:\n            return state\n    }\n};\n  \n\nexport default rootReducer;","\nconst initializeGameState = () => {\n\n    return  {\n            gameState: {\n                    playerOne:  {   cardAtHand:[\"\"],    name:\"\" },\n                    playerTwo:  {   cardAtHand:[\"\"],    name:\"\" },\n                    market:[\"\"],\n                    cardPlayed:[],\n                    rules: \"rules\"\n                },\n            playerOneStates: [],\n            playerTwoStates: [],\n            playerOneActions: [],\n            playerTwoActions: [],\n            playerOneCardIndex: 0,\n            playerTwoCardIndex: 0,\n            cards:[\n                \"whot:20\", \"whot:20\", \"whot:20\", \"whot:20\", \"whot:20\", \"star:1\", \"star:2\",\n                \"star:3\", \"star:4\", \"star:5\", \"star:7\", \"star:8\", \"circle:1\", \"circle:2\",\n                \"circle:3\", \"circle:4\", \"circle:5\", \"circle:7\", \"circle:8\", \"circle:10\", \n                \"circle:11\", \"circle:12\", \"circle:13\", \"circle:14\", \"triangle:1\", \"triangle:2\", \n                \"triangle:3\", \"triangle:4\", \"triangle:5\", \"triangle:7\", \"triangle:8\", \"triangle:10\",\n                \"triangle:11\", \"triangle:12\", \"triangle:13\", \"triangle:14\", \"cross:1\", \"cross:2\", \n                \"cross:3\", \"cross:4\", \"cross:5\", \"cross:7\", \"cross:10\", \"cross:11\", \"cross:13\", \n                \"cross:14\", \"square:1\", \"square:2\", \"square:3\", \"square:4\", \"square:5\", \"square:7\", \n                \"square:10\", \"square:11\", \"square:13\", \"square:14\"]\n    }\n\n}\n\nexport default initializeGameState","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Square(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\" className=\"center\">\r\n                <rect x={props.marginLeft} y={props.marginTop} width={props.width} height={props.height}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Square","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Text(props) {\r\n\r\n    let text = props.text\r\n    let fontSize = props.fontSize\r\n    let x = props.x\r\n    let y = props.y\r\n    let z = props.z\r\n    let color = props.color\r\n\r\n    return(\r\n        <svg >\r\n            <g fill={color} transform={\"rotate(\"+ x +\" \" + y + \" \" + z + \")\"}>\r\n                <text color={color}\r\n                    x={props.marginLeft} \r\n                    y={props.marginTop}\r\n                    fontSize={fontSize}>\r\n                    {text}\r\n                </text>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Text","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Square from \"../Shapes/Square\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction SquareCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = marginLeft * 0.8\r\n    let firstCHeight = marginLeft * 0.8\r\n    let firstMarginLeft = marginLeft * 0.2\r\n    let firstMarginTop = marginLeft * 1.6\r\n\r\n    let lastCWidth = marginLeft * 0.8\r\n    let lastCHeight = marginLeft * 0.8\r\n    let lastMarginLeft = cWidth + marginLeft\r\n    let lastMarginTop = height - marginLeft * 2.4\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Square \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Square \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n\r\n            <Square \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default SquareCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Circle(props) {\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <circle cx={props.marginLeft} cy={props.marginTop} r={props.radius} />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Circle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Circle from \"../Shapes/Circle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CircleCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n    let marginLeft = width / 2\r\n    let marginTop = height / 2\r\n    let radius = width / 3\r\n\r\n    let firstMarginLeft = width * 0.2 / 2\r\n    let firstMarginTop = height * 0.4 / 2\r\n    let firstRadius = width * 0.2 / 3\r\n\r\n    let lastMarginLeft = width * 1.8 / 2\r\n    let lastMarginTop = height * 1.6 / 2\r\n    let lastRadius = width * 0.2 / 3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n \r\n    let fontSize = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Circle \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                radius={firstRadius} />\r\n\r\n            <Circle \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} \r\n                radius={radius} />\r\n\r\n            <Circle \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                radius={lastRadius} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CircleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Cross(props) {\r\n\r\n    return(\r\n        <svg >\r\n            <g fill=\"brown\">\r\n                <rect x={props.marginLeft + props.width / 4} y={props.marginTop} width={props.width / 2} height={props.height}/>\r\n                <rect x={props.marginLeft} y={props.marginTop + props.height / 4} width={props.width} height={props.height / 2}/>\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Cross","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Cross from \"../Shapes/Cross\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction CrossCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n    let cWidth = width * 0.7\r\n    let cHeight = height * 0.4\r\n    let marginLeft = (width - cWidth) / 2\r\n    let marginTop = (height - cHeight) / 2\r\n\r\n    let firstCWidth = width * 0.7 * 0.2\r\n    let firstCHeight = height * 0.4 * 0.2\r\n    let firstMarginLeft = (width - cWidth) * 0.2 / 2\r\n    let firstMarginTop = (height - cHeight) * 0.5 / 2\r\n\r\n    let lastCWidth = width * 0.7 * 0.2\r\n    let lastCHeight = height * 0.4 * 0.2\r\n    let lastMarginLeft = (width - cWidth) * 5.5 / 2\r\n    let lastMarginTop = (height - cHeight) * 2.5 / 2\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />   \r\n\r\n            <Cross \r\n                width={firstCWidth} \r\n                height={firstCHeight} \r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} />\r\n\r\n            <Cross \r\n                width={cWidth} \r\n                height={cHeight} \r\n                marginLeft={marginLeft} \r\n                marginTop={marginTop} />\r\n            \r\n            <Cross \r\n                width={lastCWidth} \r\n                height={lastCHeight} \r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>   \r\n            \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CrossCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Triangle(props) {\r\n\r\n    let XA = props.XA\r\n    let YA = props.YA\r\n    let XB = props.XB\r\n    let YB = props.YB\r\n    let XC = props.XC\r\n    let YC = props.YC\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points= {XA + \",\" + YA + \",\" + XB + \",\" + YB + \",\" + XC + \",\" + YC}  />\r\n            </g>\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default Triangle","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Triangle from \"../Shapes/Triangle\"\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction TriangleCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big triangle\r\n    let XA = width * 0.05\r\n    let YA = height * 0.7\r\n    let XB = width * 0.5\r\n    let YB = height * 0.2\r\n    let XC = width * 0.95\r\n    let YC = height * 0.7\r\n\r\n    //parameters for the top small triangle\r\n    let firstXA = width * 0.03\r\n    let firstYA = height * 0.21\r\n    let firstXB = width * 0.1\r\n    let firstYB = height * 0.12\r\n    let firstXC = width * 0.17\r\n    let firstYC = height * 0.21\r\n\r\n    //parameters for the bottom small triangle\r\n    let lastXA = width * 0.825\r\n    let lastYA = height * 0.756\r\n    let lastXB = width * 0.9\r\n    let lastYB = height * 0.84\r\n    let lastXC = width * 0.9775\r\n    let lastYC = height * 0.756\r\n\r\n    //parameters for the top small triangle number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the top small triangle number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //fomt size calculation\r\n    let fontSizeNumber = size / 5\r\n\r\n    //number rotate for bottom number\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Triangle \r\n                XA={firstXA} \r\n                YA={firstYA} \r\n                XB={firstXB} \r\n                YB={firstYB} \r\n                XC={firstXC} \r\n                YC={firstYC} />\r\n\r\n            <Triangle \r\n                XA={XA} \r\n                YA={YA} \r\n                XB={XB} \r\n                YB={YB} \r\n                XC={XC} \r\n                YC={YC} />\r\n\r\n            <Triangle \r\n                XA={lastXA} \r\n                YA={lastYA} \r\n                XB={lastXB} \r\n                YB={lastYB} \r\n                XC={lastXC} \r\n                YC={lastYC} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={props.number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default TriangleCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nfunction Star(props) {\r\n\r\n    let XCenter = props.XCenter\r\n    let top = props.top\r\n    let XTop = props.XTop\r\n    let XTopLeft = props.XTopLeft\r\n    let XTopRight = props.XTopRight\r\n    let bottom = props.bottom\r\n    let XBottomLeft = props.XBottomLeft\r\n    let XBottomRight = props.XBottomRight\r\n\r\n    return(\r\n        <svg>\r\n            <g fill=\"brown\">\r\n                <polygon points = {XCenter + \",\" + \r\n                    top + \",\"  + XBottomLeft + \",\" \r\n                    + bottom + \",\" + XTopRight + \",\"\r\n                    + XTop + \",\" + XTopLeft + \",\" \r\n                    + XTop + \",\" + XBottomRight \r\n                    + \",\" + bottom} />\r\n            </g>\r\n        </svg>\r\n        ) \r\n}\r\n\r\nexport default Star","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Star from \"../Shapes/Star\"\r\nimport Text from \"../Shapes/Text\";\r\n\r\n\r\nfunction StarCard(props) {\r\n\r\n    let size = props.size\r\n\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    //parameters for the big center star\r\n    let XCenter = width / 2\r\n    let top = height * 0.2\r\n    let XTop = height * 0.42\r\n    let XTopLeft = width * 0.1\r\n    let XTopRight = width * 0.9\r\n    let bottom = height * 0.75\r\n    let XBottomLeft = width * 0.2\r\n    let XBottomRight = width * 0.8\r\n\r\n    //parameters for the top left star\r\n    let firstXCenter = width * 0.24\r\n    let firstTop = height * 0.12\r\n    let firstXTop = height * 0.195\r\n    let firstXTopLeft = width * 0.08\r\n    let firstXTopRight = width * 0.382\r\n    let firstBottom = height * 0.32\r\n    let firstXBottomLeft = width * 0.12\r\n    let firstXBottomRight = width * 0.34\r\n\r\n    //parameters for the bottom right star\r\n    let lastXCenter = width  * 0.8\r\n    let lastTop = height * 0.9\r\n    let lastXTop = height * 0.83\r\n    let lastXTopLeft = width * 0.94\r\n    let lastXTopRight = width * 0.66\r\n    let lastBottom = height * 0.72\r\n    let lastXBottomLeft = width * 0.9\r\n    let lastXBottomRight = width * 0.7\r\n\r\n    //parameters for the top right number\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    //parameters for the bottom left number\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    //parameters for the top right number in star\r\n    let topStarNumberMarginLeft = width * 0.21\r\n    let topStarNumberMarginTop = height * 0.25\r\n\r\n    //parameters for the bottom left number in star\r\n    let bottomStarNumberMarginLeft = width * 0.17\r\n    let bottomStarNumberMarginTop = height * 0.295\r\n\r\n    if(props.number > 4){\r\n        //parameters for the top right number in star\r\n        topStarNumberMarginLeft = width * 0.17\r\n        topStarNumberMarginTop = height * 0.25\r\n\r\n        //parameters for the bottom left number in star\r\n        bottomStarNumberMarginLeft = width * 0.14\r\n        bottomStarNumberMarginTop = height * 0.295\r\n    }\r\n    \r\n    //fonts\r\n    let fontSizeNumber = size / 5\r\n    let fontSizeNumberStar = size / 10\r\n\r\n    //rotation\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8 \r\n\r\n    //card number\r\n    let number = parseInt(props.number)\r\n    let number_ = number * 2\r\n    if(props.need){ \r\n        number = \"\"\r\n        number_ = \"\"\r\n    }\r\n        \r\n \r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"} />\r\n\r\n            <Star \r\n                XCenter={firstXCenter} \r\n                top={firstTop} \r\n                XTop={firstXTop}\r\n                XTopLeft={firstXTopLeft}\r\n                XTopRight={firstXTopRight}\r\n                bottom={firstBottom}\r\n                XBottomLeft={firstXBottomLeft} \r\n                XBottomRight={firstXBottomRight}\r\n\r\n                />\r\n\r\n            <Text\r\n                x={0} y={0} z={0}\r\n                marginLeft={topStarNumberMarginLeft} \r\n                marginTop={topStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"} />\r\n        \r\n            <Star \r\n                XCenter={XCenter} \r\n                top={top} \r\n                XTop={XTop}\r\n                XTopLeft={XTopLeft}\r\n                XTopRight={XTopRight}\r\n                bottom={bottom}\r\n                XBottomLeft={XBottomLeft} \r\n                XBottomRight={XBottomRight}\r\n\r\n                />\r\n\r\n            <Star \r\n                XCenter={lastXCenter} \r\n                top={lastTop} \r\n                XTop={lastXTop}\r\n                XTopLeft={lastXTopLeft}\r\n                XTopRight={lastXTopRight}\r\n                bottom={lastBottom}\r\n                XBottomLeft={lastXBottomLeft} \r\n                XBottomRight={lastXBottomRight}\r\n\r\n                />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={number}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomStarNumberMarginLeft} \r\n                marginTop={bottomStarNumberMarginTop} \r\n                text={number_}\r\n                fontSize={fontSizeNumberStar} \r\n                color={\"white\"}/>\r\n\r\n       \r\n        \r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default StarCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n \r\n\r\nimport Text from \"../Shapes/Text\"\r\n\r\nfunction WhotCard(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let firstMarginLeft = width * 0.1\r\n    let firstMarginTop = height * 0.25\r\n \r\n    let lastMarginLeft = width * 0.1 \r\n    let lastMarginTop = height * 0.3\r\n\r\n    let topNumberMarginLeft = width * 0.01\r\n    let topNumberMarginTop = height * 0.12\r\n\r\n    let bottomNumberMarginLeft = width * 0.01\r\n    let bottomNumberMarginTop = height * 0.18\r\n\r\n    let fontSize = size / 4\r\n    let fontSizeSymbol = size / 6\r\n    let fontSizeNumber = size / 5\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n    return(\r\n        <svg className=\"card\" width={width} height={height}>\r\n\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={topNumberMarginLeft} \r\n                marginTop={topNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={firstMarginLeft} \r\n                marginTop={firstMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"brown\"} />\r\n\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={lastMarginLeft} \r\n                marginTop={lastMarginTop} \r\n                text={\"W\"}\r\n                fontSize={fontSizeSymbol} \r\n                color={\"brown\"}/>\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={bottomNumberMarginLeft} \r\n                marginTop={bottomNumberMarginTop} \r\n                text={20}\r\n                fontSize={fontSizeNumber} \r\n                color={\"brown\"}/>\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default WhotCard","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Text from \"../Shapes/Text\";\r\n\r\nfunction CardCover(props) {\r\n\r\n    let size = props.size\r\n    let width = size\r\n    let height = size * 1.5\r\n\r\n    let marginLeftOne = width / 5\r\n    let marginTopOne = height / 2.1\r\n\r\n    let marginLeftTwo = width / 5\r\n    let marginTopTwo = height / 1.9\r\n\r\n    let fontSize = size / 4\r\n\r\n    let rotateY = width * 0.5\r\n    let rotateZ = width * 0.8\r\n\r\n\r\n    return(\r\n        <svg className=\"card card-cover\" width={width} height={height}>\r\n\r\n            <Text \r\n                x={0} y={0} z={0}\r\n                marginLeft={marginLeftOne} \r\n                marginTop={marginTopOne} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n            <Text \r\n                x={180} y={rotateY} z={rotateZ}\r\n                marginLeft={marginLeftTwo} \r\n                marginTop={marginTopTwo} \r\n                text={\"Whot\"}\r\n                fontSize={fontSize}\r\n                color={\"white\"} />\r\n\r\n\r\n        </svg>\r\n        )\r\n}\r\n\r\nexport default CardCover","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport SquareCard from \"../Componets/Cards/SquareCard\";\r\nimport CircleCard from \"../Componets/Cards/CircleCard\";\r\nimport CrossCard from \"../Componets/Cards/CrossCard\";\r\nimport TriangleCard from \"../Componets/Cards/TriangleCard\";\r\nimport StarCard from \"../Componets/Cards/StarCard\";\r\nimport WhotCard from \"../Componets/Cards/WhotCard\";\r\nimport CardCover from \"../Componets/Cards/CardCover\";\r\n\r\n\r\nfunction chooseCard(card, cardSize, need=false){\r\n\r\n    \r\n    const index = card.indexOf(\":\")\r\n    const number = card.slice(index + 1, card.length)\r\n    const shape = card.slice(0, index)\r\n\r\n    switch(shape){\r\n\r\n        case \"star\":\r\n            return(<StarCard size={cardSize} number={number} need={need} />)\r\n        case \"circle\":\r\n            return(<CircleCard size={cardSize} number={number} />)\r\n        case \"square\":\r\n            return(<SquareCard size={cardSize} number={number} />)\r\n        case \"cross\":\r\n            return(<CrossCard size={cardSize} number={number} />)\r\n        case \"triangle\":\r\n            return(<TriangleCard size={cardSize} number={number} />)\r\n        case \"whot\":\r\n            return(<WhotCard size={cardSize} number={number} />)\r\n        default:\r\n            return(<CardCover size={cardSize}  />)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default chooseCard","import { GAME_STATE, PLAYER_ONE_ACTION, PLAYER_ONE_STATE, PLAYER_TWO_ACTION, PLAYER_TWO_STATE, REMOVE_LAST } from \"../constants/action-types\";\n\n\nexport function updateGameState(payload) {\n  console.log(\"Update GAME STATE\", payload)\n  return { type: GAME_STATE, payload };\n}\n\nexport function updatePlayerOneStates(payload) {\n  console.log(\"Update Player One States\", payload)\n  return { type: PLAYER_ONE_STATE, payload };\n}\n\nexport function updatePlayerTwoStates(payload) {\n  console.log(\"Update Player Two States\", payload)\n  return { type: PLAYER_TWO_STATE, payload };\n}\n\nexport function updatePlayerOneActions(payload) {\n  console.log(\"Update Player One Actions\", payload)\n  return { type: PLAYER_ONE_ACTION, payload };\n}\n\nexport function updatePlayerTwoActions(payload) {\n  console.log(\"Update Player Two Actions\", payload)\n  return { type: PLAYER_TWO_ACTION, payload };\n}\n\nexport function removeLast(payload) {\n  console.log(\"Remove Last\", payload)\n  return { type: REMOVE_LAST, payload };\n}\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { removeLast, updateGameState, updatePlayerTwoStates } from \"../Redux/actions\";\r\n\r\n\r\nvar MOVE_WAITING_PERIOD = 1500\r\n\r\n\r\n/**\r\n * This function adds card to player and remove that same card from\r\n * market for n number of times       \r\n * \r\n * @param {*} player array of player cards\r\n * @param {*} market array of market cards\r\n * @param {*} times numbers of times to pick from market\r\n */\r\n\r\nexport function goMarket(gameState, player, times = 1, dispatch){\r\n\r\n    const newGameState = { ...gameState };\r\n    const market  = newGameState.market;\r\n\r\n    for(let i = 0; i < times; i ++){\r\n\r\n        if(market.length > 0){\r\n\r\n            if (player === gameState.playerOne.name) {\r\n\r\n                newGameState.playerOne.cardAtHand.push(market[market.length - 1]);\r\n\r\n            } else if (player === gameState.playerTwo.name) {\r\n\r\n                newGameState.playerTwo.cardAtHand.push(market[market.length - 1]);\r\n            }\r\n\r\n            newGameState.market.pop();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n}\r\n\r\n\r\n\r\nexport function referee(gameState, card, playerName, dispatch) {\r\n\r\n    const playerTwoName = gameState.playerTwo.name;\r\n    const playerOneName = gameState.playerOne.name;\r\n    let name = playerOneName;\r\n\r\n    if(playerName === playerOneName) {\r\n        name = playerTwoName;\r\n    } else if(playerName === playerTwoName) {\r\n        name = playerOneName;\r\n    }\r\n\r\n    const rules = gameState.rules;\r\n\r\n    const index = card[0].indexOf(\":\") + 1;\r\n    const number = parseInt(card[0].slice(index, card[0].length));\r\n\r\n    if(card[1] !== -2) playGame(gameState, playerName, card, number, dispatch);\r\n\r\n    if(rules.holdOn.active && number === rules.holdOn.card){\r\n\r\n        return false\r\n       \r\n    }else if(rules.pickTwo.active && number === rules.pickTwo.card){\r\n\r\n        goMarket(gameState, name, 2, dispatch);\r\n\r\n        return false\r\n\r\n    }else if(rules.pickThree.active && number === rules.pickThree.card){\r\n\r\n        goMarket(gameState, name, 3, dispatch);\r\n\r\n        return false\r\n\r\n    }else if(rules.suspension.active && number === rules.suspension.card){\r\n\r\n        return false\r\n\r\n    }else if(rules.generalMarket.active && number === rules.generalMarket.card){\r\n\r\n        goMarket(gameState, name, 1, dispatch);\r\n\r\n        return false\r\n   \r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * This function takes in the player cards at hand an the action to be   \r\n * taken it takes it, if a card is played it adds it to gamePlayed and   \r\n * subracts it from the player card at hand \r\n * \r\n * @param {*} player the player making the move\r\n * @param {*} card the move made by player\r\n * @param {*} cardPlayed the card played in the game\r\n * @param {*} number the number on the card\r\n */\r\nexport function playGame(gameState, playerName, card, number, dispatch){\r\n\r\n    const newGameState = { ...gameState };\r\n\r\n    let playerCardAtHand = newGameState.playerTwo.cardAtHand;\r\n\r\n    if (newGameState.playerOne.name === playerName) {\r\n        playerCardAtHand = newGameState.playerOne.cardAtHand;\r\n    }\r\n\r\n    console.log(\"game played \", card);\r\n\r\n    if (number === 20){\r\n\r\n        newGameState.cardPlayed.pop();\r\n\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n    } else if(card[0] !== \"z:goMarket\"){\r\n\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n        for(let i = 0; i < playerCardAtHand.length; i++){\r\n\r\n            if(playerCardAtHand[i] === card[0]) playerCardAtHand.splice(i, 1);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n    console.log(\" Game State \", newGameState)\r\n\r\n}\r\n\r\n\r\nexport function canPlay(card, inPlay, need = false) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = parseInt(card.slice(index, card.length))\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlay.slice(index_in, inPlay.length))\r\n    let shape_in = inPlay.slice(0, index_in)\r\n\r\n    if(number === 20) return [true, true]\r\n    \r\n    if(number === number_in || shape === shape_in || need) return [true, false]\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkGame(card, inPlay) {\r\n\r\n    let index = card.indexOf(\":\") + 1\r\n    let number = card.slice(index, card.length)\r\n    let shape = card.slice(0, index)\r\n\r\n    let index_in = inPlay.indexOf(\":\") + 1\r\n    let number_in = inPlay.slice(index_in, inPlay.length)\r\n    let shape_in = inPlay.slice(0, index_in)\r\n    \r\n    if(number === number_in || shape === shape_in || number === 20) return true\r\n\r\n    return false\r\n\r\n}\r\n\r\nexport function checkPlayResponse(response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying){\r\n\r\n    setTimeout(handleResponse, MOVE_WAITING_PERIOD, 0, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying)\r\n\r\n}\r\n\r\n/**\r\n *  Recursive function that loop through the server response and    \r\n *  handle them appropriately it calls the setTimeout function      \r\n *  it also update agent states    \r\n *                                  \r\n * @param {*} index current index in the moves array\r\n * @param {*} response array of moves\r\n * @param {*} gameState current gameState\r\n * @param {*} playerTwoState  state of the agent\r\n */\r\n\r\nfunction handleResponse(index, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying){\r\n\r\n    const playerTwoName = gameState.playerTwo.name;\r\n    const playerCardAtHand = gameState.playerTwo.cardAtHand;\r\n    const cardPlayed = gameState.cardPlayed;\r\n\r\n    const cardIndex = response[index][0].indexOf(\":\") + 1\r\n    const number = parseInt(response[index][0].slice(cardIndex, response[index][0].length))\r\n\r\n    const availableMoves = availableMove(playerCardAtHand, cardPlayed[cardPlayed.length - 1])\r\n\r\n    const state = (createState(gameState, availableMoves, false, agent));\r\n\r\n    if(response[index][1] >= 0) {\r\n        dispatch(updatePlayerTwoStates(state));\r\n    }\r\n\r\n    if(number === 20){\r\n\r\n        const newGameState = {...gameState}\r\n\r\n        newGameState.cardPlayed.push(response[index][0])\r\n\r\n        for(let i = 0; i < playerCardAtHand.length; i++){\r\n\r\n            if(playerCardAtHand[i] === \"whot:20\") newGameState.playerTwo.cardAtHand.splice(i, 1)\r\n            \r\n        }\r\n\r\n        dispatch(updateGameState(newGameState))\r\n\r\n    }else if(response[index][0] !== \"z:goMarket\"){\r\n\r\n        referee(gameState, response[index], playerTwoName, dispatch);\r\n        \r\n    }else{\r\n\r\n        goMarket(gameState, playerTwoName, 1, dispatch);\r\n\r\n    }\r\n\r\n    if(index + 1 < response.length) setTimeout(handleResponse, MOVE_WAITING_PERIOD, index + 1, response, gameState, playerTwoState, agent, dispatch, setOpponetIsPlaying)\r\n    else { \r\n        setOpponetIsPlaying(false);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * This method checks if any of the player cards or market is less \r\n * than one then it calls the reward function, if  any      \r\n * of the player cards is finished that player wins the game and the \r\n * game is over but if market is finished, it adds all cards from    \r\n * card Played to market and shuffle them while calling the reward\r\n * function, but the game continues     \r\n * \r\n * @param {*} gameState object of the current game state\r\n */\r\n\r\nexport function checkGameState(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch){\r\n\r\n    const newGameState = {...gameState};\r\n\r\n    const playerOneCards = newGameState.playerOne.cardAtHand;\r\n\r\n    const playerTwoCards = newGameState.playerTwo.cardAtHand;\r\n\r\n    const market = newGameState.market;\r\n\r\n    const cardPlayed = newGameState.cardPlayed;\r\n\r\n    console.log(\" state 1\", playerOneStates);\r\n    console.log(\" state 2\", playerTwoStates);\r\n    console.log(\" action 1\", playerOneActions);\r\n    console.log(\" action 2\", playerTwoActions);\r\n\r\n    if(playerOneCards.length < 1 || playerTwoCards.length < 1)  {\r\n\r\n        rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch);\r\n\r\n        if(gameState.playerOne.cardAtHand < 1){\r\n\r\n            alert(gameState.playerOne.name + \" Wins \")\r\n        } \r\n    \r\n        if(gameState.playerTwo.cardAtHand < 1){\r\n    \r\n            alert(gameState.playerTwo.name + \" Wins \")\r\n        } \r\n    \r\n    }else if(market.length < 1) {\r\n\r\n        rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch);\r\n\r\n        const inPlay = sanitizeCardPlayed(cardPlayed);\r\n\r\n        //adds all the card played to market\r\n        newGameState.market = inPlay;\r\n        \r\n        //reasign inplay giving it just its last value\r\n        newGameState.cardPlayed = [ cardPlayed[cardPlayed.length - 1]];\r\n\r\n        //removed the last card from market\r\n        newGameState.market.pop();\r\n\r\n        //shuffles the cards\r\n        newGameState.market = shuffle([...newGameState.market]);\r\n\r\n        dispatch(updateGameState(newGameState));\r\n\r\n        console.log(newGameState)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function shuffle(array){\r\n\r\n    let currIndex = array.length\r\n\r\n    while (0 !== currIndex) {\r\n        \r\n        //pick an element not prevously selected\r\n        let randIndex = Math.floor(Math.random() * currIndex)\r\n        currIndex--\r\n\r\n        //swap it with the current element\r\n        let tempVal  = array[currIndex]\r\n        array[currIndex] = array[randIndex]\r\n        array[randIndex] = tempVal\r\n    \r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n\r\n\r\nexport function sanitizeCardPlayed(cards){\r\n\r\n    let result = []\r\n\r\n    for(let i = 0; i < cards.length; i++){\r\n\r\n        let index = cards[i].indexOf(\":\") + 1\r\n        let number = parseInt(cards[i].slice(index, cards.length))\r\n\r\n        if(number === 20)\r\n            result.push(\"whot:20\")\r\n        else\r\n            result.push(cards[i])\r\n    }\r\n\r\n    return result\r\n\r\n}\r\n\r\nexport function undoMove(gameState, card, playerOneStates, playerOneActions, dispatch) {\r\n\r\n    const newGameState = {  ...gameState  };\r\n\r\n    //add card taken from player back to player    \r\n    newGameState.playerOne.cardAtHand.push(card[0])\r\n\r\n    //undo last game played\r\n    newGameState.cardPlayed.pop()\r\n\r\n    //undo last state update\r\n    dispatch(removeLast(playerOneStates));\r\n    dispatch(removeLast(playerOneActions));\r\n\r\n    dispatch(updateGameState(newGameState));\r\n\r\n}\r\n\r\n\r\nexport function rewards(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch) {\r\n\r\n    let playerOneStateAndAction = separateStateAndAction(playerOneStates, playerOneActions)\r\n    let playerTwoStateAndAction = separateStateAndAction(playerTwoStates, playerTwoActions)\r\n\r\n\r\n    console.log(\"PPPPPPPPPPPPPPPPPPPP\")\r\n    console.log(playerOneStates)\r\n    console.log(playerOneActions)\r\n\r\n    axios.post(\"/api/v1/save\", \r\n        {\r\n            agentName: gameState.playerTwo.name, \r\n            user: gameState.playerOne.name, \r\n            gameState: gameState, \r\n            playerOneStatesAndActions: playerOneStateAndAction, \r\n            playerTwoStatesAndActions: playerTwoStateAndAction \r\n        }\r\n        ).then((res)=>{  \r\n\r\n        console.log(res)\r\n        \r\n    }).catch(error => {\r\n\r\n        console.log(error)\r\n\r\n        alert(error)\r\n    })\r\n\r\n}\r\n\r\n/**\r\n * This function receive two arguments, the function loop through \r\n * the first argument and return \r\n * \r\n * @param {*} playerCard the card in the player hand\r\n * @param {*} inPlayCard the card played\r\n * @returns return all the valid moves that can be made \r\n */\r\n\r\nexport function availableMove(playerCard, inPlayCard){\r\n\r\n    let index_in = inPlayCard.indexOf(\":\") + 1\r\n    let number_in = parseInt(inPlayCard.slice(index_in, inPlayCard.length))\r\n    let shape_in = inPlayCard.slice(0, index_in)\r\n\r\n    let availableMove = [\"z:goMarket\"]\r\n\r\n    for(let i = 0; i < playerCard.length; i++){\r\n         \r\n        let index = playerCard[i].indexOf(\":\") + 1\r\n        let number = parseInt(playerCard[i].slice(index, playerCard[i].length))\r\n        let shape = playerCard[i].slice(0, index)\r\n\r\n        if(number === 20){\r\n\r\n            availableMove.sort()\r\n\r\n            availableMove.push(\"circle:20\", \"cross:20\", \"square:20\", \"star:20\", \"triangle:20\")\r\n            \r\n            return availableMove\r\n\r\n        }if(number === number_in){\r\n\r\n            availableMove.push(playerCard[i])\r\n\r\n        }else if(shape === shape_in){\r\n        \r\n            availableMove.push(playerCard[i])\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return availableMove.sort()\r\n}\r\n\r\nexport function createState(gameState,  availableMoves, isPlayerOne, agent = {}){\r\n\r\n    if(isPlayerOne){\r\n\r\n        return { \r\n            agentName: gameState.playerOne.name,\r\n            cardAtHand: [...gameState.playerOne.cardAtHand],\r\n            cardInPlay: gameState.cardPlayed[gameState.cardPlayed.length - 1],\r\n            cardPlayed: [...gameState.cardPlayed],\r\n            noOfCardsInMarket: gameState.market.length,\r\n            noOfCardsWithOpponent: gameState.playerTwo.cardAtHand.length,\r\n            noOfCardPlayed: gameState.cardPlayed.length,\r\n            noOfCardAtHand: gameState.playerOne.cardAtHand.length,\r\n            availableMove: [...availableMoves],\r\n            rules: gameState.rules, \r\n        }\r\n\r\n    }else{\r\n\r\n        let state = {\r\n            agentName: gameState.playerTwo.name,\r\n            availableMove: [...availableMoves],\r\n        }\r\n\r\n\r\n        if(agent.useCardAtHand)\r\n            state.cardAtHand = [...gameState.playerTwo.cardAtHand]\r\n        if(agent.useNoOfCardAtHand)\r\n            state.noOfCardAtHand = gameState.playerTwo.cardAtHand.length\r\n        if(agent.useCardInPlay)\r\n            state.cardInPlay = gameState.cardPlayed[gameState.cardPlayed.length - 1]\r\n        if(agent.useCardPlayed)\r\n            state.cardPlayed = [...gameState.cardPlayed]\r\n        if(agent.useNoOfCardPlayed)\r\n            state.noOfCardPlayed = gameState.cardPlayed.length\r\n        if(agent.useNoOfCardsInMarket)\r\n            state.noOfCardsInMarket = gameState.market.length\r\n        if(agent.useNoOfCardsWithOpponent)\r\n            state.noOfCardsWithOpponent = gameState.playerOne.cardAtHand.length\r\n        if(agent.useRules)\r\n            state.rules = gameState.rules\r\n\r\n\r\n\r\n        return state\r\n    }\r\n    \r\n}\r\n\r\nexport function cardIndex(availableMove, move){\r\n\r\n    if(availableMove.length === 0) return -1\r\n\r\n    for (let i = 0; i < availableMove.length; i++) if(availableMove[i] === move) return i   \r\n\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} state \r\n * @param {*} action \r\n */\r\n\r\nfunction separateStateAndAction(state, action){\r\n\r\n    let validStates = []\r\n    let validActions = []\r\n\r\n\r\n    for(let i = 0; i < action.length; i++){\r\n\r\n        if(action[i][1] > -1){\r\n\r\n            //state[i].actions = []\r\n            validStates.push(state[i])\r\n            validActions.push([action[i][0], action[i][1]])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return [validStates, validActions]\r\n}","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Cards from \"../../GameEnv/cards\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport {shuffle} from \"../../GameLogic/logics\";\r\n\r\nvar cards = [...Cards.cards]\r\ncards.push(\"cover:20\")\r\n\r\nfunction Start() {\r\n\r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n\r\n    let area = width * height\r\n\r\n    let size = Math.sqrt(area/(2 * 57))\r\n\r\n    let cardSize = size\r\n\r\n    cards =  shuffle(cards)\r\n\r\n    let componet = []\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n    \r\n        componet.push(chooseCard(cards[i], cardSize))\r\n\r\n    }\r\n   \r\n\r\n    return(\r\n        <div className=\"start-page\" >\r\n            {componet}\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Start","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Button(props) {\r\n\r\n    return(\r\n        <div>\r\n            <Link to={props.link}>\r\n                <button className={props.class} >\r\n                    {props.text}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Button","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from \"react\"\r\n\r\nimport  \"../Styles/modal.css\"\r\n\r\nclass Modal extends React.Component{\r\n\r\n\r\n    render(){\r\n        let visibility = this.props.visibility\r\n        let close = this.props.close\r\n\r\n        \r\n        return(\r\n            <div>\r\n\r\n                <div className={\"modal \" + visibility}>\r\n\r\n                    <div className={\"modal-content\"}>\r\n\r\n                        <span className=\"close\" onClick={() => close(\"cccc\")}>&times;</span>\r\n                        \r\n                        <center>{this.props.text}</center>\r\n                    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Modal","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Button from \"../Componets/Button\";\r\nimport Modal from \"../Componets/Modal\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n    let height = window.innerHeight * 0.25\r\n\r\n    const style = {\r\n        marginTop:height\r\n    }\r\n\r\n    return(\r\n        <center>\r\n\r\n            <Start />\r\n\r\n            <div style={style}>\r\n\r\n                <Button text={\"Play Game\"} link={\"/leaderboard\"} class={\"btn-start\"}/>\r\n\r\n                <Button text={\"Rules\"} link={\"/rules\"}  class={\"btn-rules\"}/>\r\n\r\n                <Button text={\"Leaderboard\"} link={\"/leaderboard\"} class={\"btn-leader\"}/>\r\n\r\n                <Button text={\"Create Agent\"} link={\"/create-agent\"} class={\"btn-create\"}/>\r\n\r\n                <Button text={\"Settings\"} link={\"/settings\"} class={\"btn-settings\"}/>\r\n\r\n                <Modal/>\r\n                \r\n            </div>\r\n            \r\n        </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\n\r\nfunction Whot() {\r\n\r\n    let cardWidth = 350\r\n    let left = (window.innerWidth / 2) - (cardWidth / 2)\r\n    let top = (window.innerHeight / 2) - (cardWidth * 1.5 / 2)\r\n\r\n    return(\r\n            <center className=\"whot-background\" style={{top:top, left:left}}>\r\n\r\n                {chooseCard(\"\", cardWidth)}\r\n        \r\n            </center>\r\n    )\r\n\r\n}\r\n\r\nexport default Whot","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nconst Rules = () => {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Rules","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from \"./Button\"\r\n\r\n \r\nconst Agent = (props) =>  {\r\n\r\n    return(\r\n        <div className=\"agents\">\r\n\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <FontAwesomeIcon size=\"5x\" color={\"gray\"} icon={faUserCircle} /> \r\n                    </td>\r\n\r\n                    <td>\r\n                        Name {props.agentName} <br/>\r\n                        Wins  {props.wins} <br/>\r\n                        Loss {props.losses} <br/>\r\n                        points {parseFloat(props.points.toPrecision(6))} <br/>\r\n                        <Button text={\"Play Agent\"}  class={\"btn-play\"} link={`/game/${props.agentName}`} />\r\n    \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Agent","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport chooseCard from \"../GameLogic/chooseCard\"\r\nimport Cards from \"../GameEnv/cards/index.json\"\r\n\r\nvar cards = [...Cards.cards]\r\n\r\nfunction Loader(props) {\r\n\r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n    let cardSize = height/5\r\n\r\n    let cardIndex = Math.floor(Math.random() * cards.length)\r\n\r\n    const style = {\r\n        position:\"absolute\",\r\n        top:height/2 - cardSize,\r\n        left:width/2 - cardSize * 0.6666666667\r\n    }\r\n\r\n    return(\r\n        <div style={style} className=\"loader\">\r\n            {chooseCard(cards[cardIndex], cardSize)}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Loader","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Start from \"../Componets/Background/Start\";\r\nimport Agent from \"../Componets/Agent\";\r\nimport axios from \"axios\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Loader from \"../Componets/Loader\";\r\n//import { increase } from \"../Redux/actions\";\r\n\r\nconst Leaderboard = () =>  {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    const [agents, setAgents] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        setIsLoading(true);\r\n\r\n        axios.get(`/api/v1/leaderboard/${page}`).then(res => {\r\n\r\n            setData(res?.data?.data)\r\n            setIsLoading(false)\r\n\r\n        }, err => {\r\n\r\n        });\r\n\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        const agents = [];\r\n    \r\n        for (let i = 0; i < data?.length; i++) {\r\n    \r\n            agents.push(\r\n                <Agent agentName={data[i].agentName} \r\n                    points={data[i].points}                             \r\n                    wins={data[i].wins}\r\n                    losses={data[i].losses} />);\r\n        }\r\n\r\n        setAgents(agents);\r\n\r\n    }, [data]);\r\n\r\n    \r\n    if(isLoading) return (<Loader />);\r\n\r\n    return(\r\n        <div>\r\n\r\n            <Start />\r\n\r\n            <div className=\"leaderboard\">\r\n\r\n                {agents}\r\n\r\n            </div>\r\n\r\n            <button onClick={() => setPage(x => x - 1)}> Prev </button>\r\n\r\n            <button onClick={() => setPage(x => x + 1)}> Next </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Leaderboard);","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport Whot from \"../Componets/Background/Whot\"\r\n\r\n\r\nconst Settings = () => {\r\n\r\n\r\n    return(\r\n\r\n            <div>\r\n                <Whot />\r\n\r\n                <center style={{marginTop:\"30vh\"}}>\r\n\r\n                    <table>\r\n\r\n                        <thead>\r\n\r\n                            <tr> <th> Action </th> <th> Card Number </th> <th> Active </th> <th> Defend </th> </tr>\r\n\r\n                        </thead>\r\n                        \r\n                        <tbody>\r\n\r\n                            <tr> <td> Hold On </td> <td> 1 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Two </td> <td> 2 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Pick Three </td> <td> 5 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> Suspension </td> <td> 8 </td> <td> Yes </td> <td> No </td> </tr>\r\n                            <tr> <td> General Market </td> <td> 14 </td> <td> Yes </td> <td> No </td> </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </center>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nconst CardNumber = (props) => {\r\n\r\n    return(\r\n        <div className=\"card-number\">\r\n            {props.cardNumber}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardNumber","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\";\r\n\r\n\r\n\r\n\r\nconst InPlay = (props) => {\r\n\r\n    const { height, width, isLandscape } = props;\r\n\r\n    const [cardSize, setCardSize] = useState(0);\r\n    const [style, setStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        const style = {\r\n            position: \"absolute\",\r\n            top: (height / 2) - cardSize,\r\n            left: (width / 2) - (cardSize * 0.6666666667)\r\n        };\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / (4 * 1.5));\r\n        } else {\r\n            setCardSize(width / (4 * 1.5));\r\n            style.top = (width / 2) - cardSize;\r\n            style.left = (height / 2) - (cardSize * 0.6666666667)\r\n        }\r\n\r\n        setStyle(style);\r\n\r\n    }, [height, width, cardSize, isLandscape]);\r\n\r\n    return(\r\n        <div style={style}>\r\n            { chooseCard(props.cards, cardSize) }\r\n            <CardNumber cardNumber={props.cardNumber} />\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default InPlay\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\"\r\n\r\nconst Market = (props) =>  {\r\n\r\n    const { height, width, playable, action, cardNumber, isLandscape } = props;\r\n    const [style, setStyle] = useState({});\r\n    const [cardSize, setCardSize] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n        const style = {\r\n            position:\"absolute\",\r\n            top:    (height / 2) - cardSize,\r\n            left:   width * 0.05\r\n        }\r\n\r\n        if (isLandscape) {\r\n            setCardSize(height / (4 * 1.5));\r\n        } else {\r\n            setCardSize(width / (4 * 1.5));\r\n            style.top = (width / 2) - cardSize;\r\n            style.left = height * 0.05;\r\n        }\r\n\r\n        setStyle(style);\r\n\r\n    }, [height, width, isLandscape, cardSize]);\r\n\r\n    if(playable)\r\n        return(\r\n            <div style={style}>\r\n                <span onClick={() => action([\"z:goMarket\"])}>{ chooseCard(\"ff\", cardSize) }</span>\r\n                <CardNumber cardNumber={cardNumber} />\r\n            </div>\r\n            )\r\n    else\r\n        return(\r\n            <div style={style}>\r\n                <span>{ chooseCard(\"ff\", cardSize) }</span>\r\n                <CardNumber cardNumber={cardNumber} />\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Market\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport chooseCard from \"../../GameLogic/chooseCard\";\r\nimport CardNumber from \"./CardNumber\";\r\n\r\n\r\nconst Player = (props) => {\r\n\r\n    const { cards, action, playable, index, isLandscape, width, height } = props;\r\n\r\n    const [start, setStart] = useState(index);\r\n    const [margin, setMargin] =  useState(0);\r\n    const [cardSpaceAvailable, setCardSpaceAvailable] = useState(0);\r\n    const [style, setStyle] = useState({});\r\n    const [left, setLeft] = useState(null);\r\n    const [right, setRight] = useState(null);\r\n    const [cardSize, setCardSize] = useState(0);\r\n    const [top, setTop] =  useState(0);\r\n    const [noOfCardsThatCanBeDisplayed, setNoOfCardsThatCanBeDisplayed] =  useState(0);\r\n    const [navStyle, setNavStyle] = useState({});\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        if (isLandscape) {\r\n\r\n            setCardSize(height / (4 * 1.5));\r\n            setTop(props.top * height - cardSize);\r\n            setMargin(width * 0.05);\r\n            setCardSpaceAvailable((width  - margin * 2));\r\n            \r\n        } else {\r\n\r\n            setCardSize(width / (4 * 1.5));\r\n            setTop(props.top * width - cardSize);\r\n            setMargin(height * 0.1408);\r\n            setCardSpaceAvailable((height  - margin * 2));\r\n\r\n        }\r\n\r\n    }, [props.top, width, height, cardSize, isLandscape]);\r\n\r\n    useEffect(() => {\r\n\r\n        setNoOfCardsThatCanBeDisplayed(cardSpaceAvailable / (cardSize * 1.1))\r\n        setNavStyle({height: cardSize * 1.5});\r\n\r\n    }, [cardSize, cardSpaceAvailable, width, margin]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const style = {\r\n            position: \"absolute\",\r\n            top: top,\r\n            left: margin,\r\n            width: cardSpaceAvailable,  \r\n            height: cardSize\r\n        };\r\n\r\n        setStyle(style);\r\n\r\n    }, [cardSize, cardSpaceAvailable, margin, top, height, width, isLandscape]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(start < cards.length - noOfCardsThatCanBeDisplayed) {\r\n\r\n            setRight(<span style={{top:100}} onClick={() => { if(start < cards.length - noOfCardsThatCanBeDisplayed) { setStart(start + 1) } } } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowRight} /> \r\n                    </span>);\r\n        \r\n        } else {\r\n            setRight(null)\r\n        }\r\n\r\n        if (start !== 0) {\r\n\r\n            setLeft(<span style={{top:100}} onClick={() =>  { setStart(start - 1) }  } >\r\n                        <FontAwesomeIcon style={navStyle} color={\"blue\"} icon={faArrowLeft} /> \r\n                    </span>);\r\n        } else {\r\n            setLeft(null);\r\n        }\r\n\r\n    }, [navStyle, start, cards, noOfCardsThatCanBeDisplayed]);\r\n\r\n    const displayCards = (cards, cardSize, action, start=0) => {\r\n    \r\n        const cardArray = [];\r\n    \r\n        for(let i = start; i < cards.length; i++){\r\n           \r\n            if((i + 1 - start) * 1.1 * cardSize >= cardSpaceAvailable) break\r\n            \r\n            if(playable)\r\n                cardArray.push(<span  key={i} onClick = {() => action([cards[i]])}> { chooseCard(cards[i], cardSize) } </span>)\r\n            else\r\n                cardArray.push(<span key={i} > { chooseCard(cards[i], cardSize) } </span>)\r\n        }\r\n\r\n        return cardArray;\r\n\r\n   }\r\n\r\n    return(\r\n        <div style={style}>\r\n\r\n            {left}\r\n            {displayCards(cards.sort(), cardSize, action, start)}  \r\n            {right}\r\n\r\n            <CardNumber cardNumber={cards.length} />\r\n            \r\n        </div>)\r\n    \r\n}\r\n\r\nexport default Player;\r\n","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport chooseCard from \"../../GameLogic/chooseCard\"\r\n\r\n\r\nconst Need = (props) =>{\r\n\r\n    const { need } = props;\r\n   \r\n    let width = window.innerWidth\r\n    let height = window.innerHeight\r\n\r\n    let area = width * height\r\n\r\n    let size = Math.sqrt(area/(3 * 5 * 1.8))\r\n\r\n    let cardSize = size\r\n\r\n    return (\r\n        <div className=\"need-bar\">\r\n\r\n            <div className='background'></div> \r\n\r\n            <div className='cards'>\r\n                <span onClick = {() => need([\"star:20\"])}> {chooseCard(\"star:\", cardSize, true)} </span>\r\n                <span onClick = {() => need([\"triangle:20\"])}> {chooseCard(\"triangle:\", cardSize)}   </span>\r\n                <span onClick = {() => need([\"square:20\"])}> {chooseCard(\"square:\", cardSize)}     </span>\r\n                <span onClick = {() => need([\"circle:20\"])}> {chooseCard(\"circle:\", cardSize)}     </span>\r\n                <span onClick = {() => need([\"cross:20\"])}> {chooseCard(\"cross:\", cardSize)}      </span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Need;","/**\r\n * @author Joshua Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {canPlay, checkPlayResponse, createState,\r\n        referee, goMarket, checkGameState,  availableMove, \r\n        cardIndex, undoMove} from  \"../GameLogic/logics\";\r\n\r\nimport InPlay  from \"../Componets/CardHolder/InPlay\";\r\nimport Market from \"../Componets/CardHolder/Market\";\r\nimport Player from \"../Componets/CardHolder/Player\";\r\nimport Need from \"../Componets/CardHolder/Need\";\r\nimport Loader from \"../Componets/Loader\";\r\n//import Modal from \"../Componets/Modal\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeLast, updateGameState, updatePlayerOneActions, updatePlayerOneStates, updatePlayerTwoActions } from \"../Redux/actions\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst rules = {\"holdOn\":{\"active\":true, \"card\":1, \"defend\":false},\r\n            \"pickTwo\":{\"active\":true, \"card\":2, \"defend\":false},\r\n            \"pickThree\":{\"active\":true, \"card\":5, \"defend\":false}, \r\n            \"suspension\":{\"active\":true, \"card\":8, \"defend\":false},\r\n            \"generalMarket\":{\"active\":true, \"card\":14, \"defend\":false},\r\n            \"marketFinishGameEnd\" : false\r\n        } \r\n\r\nconst GamePlay = () => {\r\n\r\n    const { user } = useParams();\r\n\r\n    const { gameState, playerOneStates, playerOneActions, playerTwoStates, \r\n        playerTwoActions, playerOneCardIndex, playerTwoCardIndex\r\n        } = useSelector((state) => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [playerOneData, setPlayerOneData] = useState({});\r\n    const [playerTwoData, setPlayerTwoData] = useState({});\r\n    //const [error, setError] = useState(null)\r\n    const [isNeeded, setIsNeeded] =  useState(false);\r\n    const [playerCard, setPlayerCard] = useState([]);\r\n    const [opponetCard, setOpponetCard] = useState([]);\r\n    const [inPlay, setInplay] = useState([]);\r\n    const [cardPlayed, setCardPlayed] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [opponetIsPlaying, setOpponetIsPlaying] = useState(false);\r\n    const [opponetMoves, setOpponetMoves] = useState([]);\r\n    const [isLandscape, setIsLandscape] = useState(true);\r\n    const [style, setStyle] = useState({});\r\n    const [gameArea, setGameArea] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        window.onresize = () => {\r\n            setHeight(window.innerHeight);\r\n            setWidth(window.innerWidth);\r\n        }\r\n\r\n        window.onorientationchange = () => {\r\n            setHeight(window.innerHeight);\r\n            setWidth(window.innerWidth);\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if(height > width) {\r\n\r\n            setIsLandscape(false);\r\n            setStyle({transform: 'rotate(90deg)'});\r\n            setGameArea({height: width * 0.98, width: height * 0.96 });\r\n\r\n        } else {\r\n\r\n            setIsLandscape(true);\r\n            setStyle({});\r\n            setGameArea({height: height * 0.97, width: width * 0.98 });\r\n\r\n        }\r\n\r\n    }, [height, width]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.post(\"/api/v1/start\", {agentName: user, user: \"Guest\", rules: rules, start: 5}).then((res)=>{  \r\n\r\n            const data = res.data;\r\n\r\n            dispatch(updateGameState(data.gameState));\r\n\r\n            setPlayerOneData(data.playerInfo);\r\n\r\n            setPlayerTwoData(data.agentInfo);\r\n\r\n            setIsLoading(false);\r\n\r\n            setOpponetIsPlaying(false);\r\n\r\n            setOpponetMoves(data.moves);\r\n\r\n        }).catch(error => {\r\n\r\n            console.log(error)\r\n    \r\n            alert(error)\r\n        })\r\n\r\n    }, [dispatch, user]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(opponetMoves.length){\r\n            \r\n            //check the type of response gotten from server\r\n            checkPlayResponse(opponetMoves, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n\r\n            opponetMoves.forEach(element => {\r\n\r\n                if(element[1] >= 0) {\r\n                    dispatch(updatePlayerTwoActions(element));\r\n                }\r\n\r\n            });\r\n\r\n            setOpponetMoves([]);\r\n      \r\n        }   \r\n\r\n    }, [gameState, opponetMoves, playerTwoActions, playerTwoData, playerTwoStates, dispatch]);\r\n\r\n\r\n    const needed = (card) => {\r\n\r\n        let availableMoves = availableMove(gameState.playerOne.cardAtHand, gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n        const state = createState(gameState, availableMoves, true, playerOneData);\r\n\r\n        dispatch(updatePlayerOneStates(state));\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        dispatch(updatePlayerOneActions(card));\r\n\r\n        setIsLoading(true);\r\n        setIsNeeded(false);\r\n        setOpponetIsPlaying(false);\r\n \r\n        const request = {agentName:  user, user: \"Guest\", gameState, playerMove: card, rules:rules}\r\n    \r\n        const index = gameState.playerOne.cardAtHand.indexOf(\"whot:20\");\r\n        const newGameState = {...gameState};\r\n\r\n        newGameState.playerOne.cardAtHand.splice(index, 1);\r\n        newGameState.cardPlayed.push(card[0]);\r\n\r\n        dispatch(updateGameState(newGameState));\r\n\r\n        axios.post(\"/api/v1/play\", request).then((res)=>{\r\n            \r\n            const response = res.data\r\n\r\n            //check the type of response gotten from server\r\n            checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying)\r\n\r\n            //remove loader from screen and transfer game control to player\r\n            setOpponetIsPlaying(false);\r\n            setIsLoading(false);\r\n\r\n            dispatch(updatePlayerTwoActions(...response));\r\n    \r\n        }).catch((error) =>{\r\n\r\n            //undo last move\r\n            undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n            //remove loader and transfer game control back to player\r\n            setIsLoading(false);\r\n            setOpponetIsPlaying(false);\r\n\r\n            alert(error)\r\n            \r\n        });\r\n\r\n    };\r\n\r\n    const playCard = (card) => {\r\n\r\n        const availableMoves = availableMove(gameState.playerOne.cardAtHand, gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n        card.push(cardIndex(availableMoves, card[0]))\r\n\r\n        dispatch(updatePlayerOneActions(card));\r\n\r\n        const state = createState(gameState, availableMoves, true, playerOneData);\r\n\r\n        dispatch(updatePlayerOneStates(state));\r\n\r\n        setIsLoading(true);\r\n\r\n        if(card[0] === \"z:goMarket\"){\r\n\r\n            setOpponetIsPlaying(true);\r\n\r\n            goMarket(gameState, gameState.playerOne.name, 1, dispatch);\r\n\r\n            setOpponetIsPlaying(false);\r\n\r\n            setIsLoading(true);\r\n\r\n            const request = {agentName: user, user: \"Guest\", gameState, playerMove: \"z:goMarket\", rules}\r\n        \r\n            axios.post(\"/api/v1/play\", request).then((res)=>{\r\n                \r\n                let response = res.data\r\n\r\n                //remove loader from screen and transfer game control back to opponent\r\n                setIsLoading(false);\r\n                setOpponetIsPlaying(true);\r\n \r\n                //check the type of response gotten from server\r\n\r\n                checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n\r\n                dispatch(updatePlayerTwoActions(...response));\r\n                \r\n            }).catch((error) =>{\r\n\r\n                //undo last move\r\n                undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n                //remove loader and transfer game control back to player\r\n                setIsLoading(false);\r\n                setOpponetIsPlaying(false);\r\n\r\n                alert(error);\r\n\r\n            });\r\n\r\n        }   else    {\r\n    \r\n            const playGame = canPlay(card[0], gameState.cardPlayed[gameState.cardPlayed.length - 1])\r\n\r\n            setIsNeeded(playGame[1]);\r\n\r\n            if(playGame[0]){\r\n\r\n                if(playGame[1]){\r\n\r\n                    setIsNeeded(true);\r\n                    setIsLoading(false);\r\n\r\n                    //remove last state\r\n                    dispatch(removeLast(playerOneStates));\r\n                    dispatch(removeLast(playerOneActions));\r\n\r\n                }   else    {\r\n                    \r\n                    const sendMove = referee(gameState, card, \"Guest\", dispatch);\r\n                   \r\n                    const request = { agentName: user, user: \"Guest\", gameState: gameState, playerMove:card[0], rules}\r\n                    \r\n                    if(sendMove) {\r\n\r\n                        axios.post(\"/api/v1/play\", request).then((res)=>{\r\n                            \r\n                            const response = res.data\r\n\r\n                            //remove loader from screen and transfer game control back to opponent\r\n                            setIsLoading(false);\r\n                            setOpponetIsPlaying(true);\r\n\r\n                            //handle response gotten from server \r\n                            checkPlayResponse(response, gameState, playerTwoStates, playerTwoData, dispatch, setOpponetIsPlaying);\r\n     \r\n                            dispatch(updatePlayerTwoActions(...response));\r\n\r\n                        }).catch((error) => {\r\n\r\n                            //undo last move\r\n                            undoMove(gameState, card, playerOneStates, playerOneActions, dispatch);\r\n\r\n                            //remove loader and transfer game control back to player\r\n                            setIsLoading(false);\r\n                            setOpponetIsPlaying(false);\r\n\r\n                            alert(error)\r\n\r\n                        })\r\n\r\n                    }else{\r\n\r\n                        setIsLoading(false)\r\n\r\n                    }\r\n\r\n                }\r\n            \r\n            }else{\r\n\r\n                setIsLoading(false);\r\n\r\n                alert(\"illegal move\")\r\n    \r\n            }\r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setPlayerCard(gameState.playerOne.cardAtHand);\r\n\r\n        setOpponetCard(gameState.playerTwo.cardAtHand);\r\n\r\n        setInplay(gameState.cardPlayed[gameState.cardPlayed.length - 1]);\r\n\r\n        setCardPlayed(gameState.cardPlayed);\r\n\r\n    }, [gameState]);\r\n\r\n    useEffect(() => {\r\n        checkGameState(gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch);\r\n    }, [gameState, playerOneStates, playerOneActions, playerTwoStates, playerTwoActions, dispatch])\r\n\r\n\r\n    if (isLoading) return(<center  style={gameArea} className=\"game-table\"><Loader /> </center>)\r\n\r\n    return(\r\n        <div style={style}>\r\n        {\r\n        //    <Modal text={\"Network Error\"} close={close} visibility={visibility} />\r\n        }\r\n            <center style={gameArea} className=\"game-table\">\r\n\r\n                <div style={gameArea}>\r\n\r\n                    <Player top={0.2} isLandscape={isLandscape} angle={180} height={height} width={width} cards={opponetCard} action={playCard} playable={false} index={playerTwoCardIndex} />\r\n\r\n                    <Player top={0.8} isLandscape={isLandscape}  angle={0} height={height} width={width} cards={playerCard} action={playCard} playable={!opponetIsPlaying} index={playerOneCardIndex}/>\r\n        \r\n                    { inPlay && <InPlay isLandscape={isLandscape} height={height} width={width} className=\"center\" cards={inPlay} cardNumber={cardPlayed?.length} />  }\r\n\r\n                    <Market action={playCard} isLandscape={isLandscape} height={height} width={width} playable={!opponetIsPlaying} cardNumber={gameState.market.length} />\r\n                \r\n                </div>\r\n\r\n            </center>\r\n\r\n            { isNeeded && <Need need={needed}/> }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GamePlay;","function FormInput(props){\r\n\r\n    let identifier = props.identifier\r\n\r\n    if(props.type === \"text\")\r\n        return(\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-25\"> <label for={identifier}>{props.label}</label> </div>\r\n\r\n                <div class=\"col-75\">\r\n\r\n                    <input \r\n                        type=\"text\" \r\n                        required \r\n                        id={identifier} \r\n                        name={identifier} \r\n                        onChange={props.onChange} placeholder=\"eg Joe\" />\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    if(props.yes)\r\n    return(\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-25\"><label for={identifier}>{props.label}</label></div>\r\n\r\n            <div class=\"col-75\">\r\n\r\n                <select id={identifier} name={identifier} onChange={props.onChange} >\r\n                    \r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                \r\n                </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n\r\n    return(\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-25\"><label for={identifier}>{props.label}</label></div>\r\n\r\n            <div class=\"col-75\">\r\n\r\n                <select id={identifier} name={identifier} onChange={props.onChange} >\r\n                    \r\n                    <option value={false}>No</option>\r\n                    <option value={true}>Yes</option>\r\n                \r\n                </select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormInput","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2022 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\n\r\nimport { useState } from \"react\";\r\nimport Start from \"../Componets/Background/Start\";\r\nimport FormInput from \"../Componets/FormInput\";\r\nimport \"../Styles/form.css\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Componets/Loader\";\r\n\r\n\r\nconst form = {\r\n    agentName: \"\",\r\n    availableMove: true,\r\n    canGoMarket: true,\r\n    canNeedAnyCard: true,\r\n    cardAtHand: false,\r\n    noOfCardAtHand: false,\r\n    cardInPlay: false,\r\n    cardPlayed: false,\r\n    noOfCardPlayed: false,\r\n    noOfCardsInMarket: false,\r\n    noOfCardsWithOpponent: false,\r\n    rules: false\r\n}\r\n \r\nconst CreateAgent = () => {\r\n\r\n    const [formData, setFormData] = useState(form);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n    function handleEvent(e){\r\n\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        setFormData(e => {\r\n            e[name] = value;\r\n            return e;\r\n        })\r\n\r\n    }\r\n\r\n    function submit(e){\r\n\r\n        e.preventDefault();\r\n\r\n        setIsLoading(false);\r\n    \r\n        axios.post('/api/v1/create-agent', {agent: formData}).then((res)=>{\r\n            \r\n            alert(res.data.msg)\r\n\r\n            setIsLoading(true);\r\n\r\n            if(res.data.status){\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    if(isLoading) return (<Loader />);\r\n    \r\n    return(\r\n        <center>\r\n \r\n            <Start />\r\n            \r\n            <div class=\"container\">\r\n\r\n                <form method=\"post\" action='/api/create-agent'>\r\n\r\n                    <div class=\"row\">\r\n                        <h3>Create Agent</h3>\r\n                    </div>\r\n\r\n                    <FormInput label=\"Agent Name\" type={\"text\"} identifier={\"agentName\"} onChange={handleEvent} />\r\n\r\n                    \r\n\r\n                    <div class=\"row\">\r\n\r\n                        <h5>Agent Settings</h5> <br/> \r\n\r\n                        <p>\r\n                            select yes if you want the agent to considered these fields while learning\r\n                        </p>\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-25\">\r\n\r\n                            <label for=\"avialableMove\">Available Move</label>\r\n                        \r\n                        </div>\r\n\r\n                        <div class=\"col-75\">\r\n                        \r\n                            <select id=\"avialableMove\" name=\"avialableMove\" disabled>\r\n                                \r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                            \r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FormInput label=\"Can Go Market\" type={\"select\"} identifier={\"canGoMarket\"} onChange={handleEvent} yes />\r\n\r\n                    <FormInput label=\"Can Need Any Card\" type={\"select\"} identifier={\"canNeedAnyCard\"} onChange={handleEvent} yes />\r\n\r\n                    <FormInput label=\"Cards At Hand\" type={\"select\"} identifier={\"cardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards At Hand\" type={\"select\"} identifier={\"noOfCardAtHand\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card In Play\" type={\"select\"} identifier={\"cardInPlay\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Card Played\" type={\"select\"} identifier={\"cardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"No Cards Played\" type={\"select\"} identifier={\"noOfCardPlayed\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards In Market\" type={\"select\"} identifier={\"noOfCardsInMarket\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Number Of Cards With Opponent\" type={\"select\"} identifier={\"noOfCardsWithOpponent\"} onChange={handleEvent} />\r\n\r\n                    <FormInput label=\"Rules\" type={\"select\"} identifier={\"rules\"} onChange={handleEvent} />\r\n\r\n                    <div class=\"row\" style={{marginTop:20}}>   <input type=\"submit\" value=\"Submit\" onClick={submit}/> </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            \r\n        </center>\r\n     )\r\n \r\n }\r\n \r\n export default CreateAgent","import {BrowserRouter, Route} from 'react-router-dom';\n\nimport Home from \"./Routes/Home\";\nimport Rules from \"./Routes/Rules\";\nimport Leaderboard from \"./Routes/Leaderboard\";\nimport Settings from \"./Routes/Settings\";\nimport GamePlay from \"./Routes/GamePlay\";\nimport CreateAgent from \"./Routes/CreateAgent\";\n\nconst home =  () => <Home />\nconst rules =  () => <Rules />\nconst leaderboard = () => <Leaderboard />\nconst settings = () => <Settings />\nconst game = () => <GamePlay />\nconst createAgent = () => <CreateAgent />\n\n\nconst App = () => {\n\n    return(\n        <BrowserRouter>\n            <Route path=\"/\" exact={true} component={home} />\n            <Route path=\"/home\" exact={true} component={home} />\n            <Route path=\"/rules\" exact={true} component={rules} />\n            <Route path=\"/leaderboard\" exact={true} component={leaderboard} />\n            <Route path=\"/settings\" exact={true} component={settings} />\n            <Route path=\"/create-agent\" exact={false} component={createAgent}/>\n            <Route path=\"/game/:user\" exact={false} component={game}/>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","/**\r\n * @author Joshua Emmanuel Evuetapha\r\n * @copyright (C) 2021 Joshua Evuetapha\r\n * @twitter  evuetaphajoshua\r\n * @github   Joshuajee\r\n * @license MIT This program is distributed under the MIT license\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport  \"./Styles/styles.css\";\r\nimport \"./Styles/need.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}